# is_valid_target_for_domesticated_aliens_military = {
# 	OR = {
# 		is_ship_class = shipclass_transport
# 		is_ship_class = shipclass_military
# 		is_ship_class = shipclass_starbase
# 		is_ship_class = shipclass_military_station
# 	}
# 	exists = owner
# 	owner = {
# 		# is_owner_hostile_to_domesticated_aliens_master = yes
# 		OR = {
# 			# is_country_type = default
# 			is_default_or_fallen = yes
# 			is_country_type = dormant_marauders
# 			is_country_type = ruined_marauders
# 			is_crisis_faction = yes
# 			# is_country_type = awakened_marauders
# 			# is_country_type = swarm
# 			# is_country_type = extradimensional
# 			# is_country_type = extradimensional_2
# 			# is_country_type = extradimensional_3
# 			# is_country_type = ai_empire
# 			# is_country_type = fallen_empire
# 			# is_country_type = awakened_fallen_empire
# 			# is_country_type = ascended_empire
# 			# is_country_type = lost_empire
# 			# is_country_type = ally_faction
# 			is_country_type = domesticated_spaceborn_alien
# 			# is_country_type = tiyanki
# 			# is_country_type = amoeba
# 			# is_country_type = tiyanki
# 			# is_country_type = cloud
# 			# is_country_type = crystal
# 			# is_country_type = pirate
# 		}
# 		is_hostile = event_target:main_country
# 	}
# 	NOR = {
# 		is_disabled = yes
# 		fleet = { has_fleet_flag = domesticated_military_fleet_target_no_more_hunters }
# 		fleet = { has_fleet_flag = domesticated_security_fleet_defend_against_no_more_defenders }
# 	}
# }
# Onl used in UniqueAscensionPerksEvents.1031
# This = fleet
# Root.from = event_target:main_country
is_valid_target_neigthbor_for_domesticated_aliens_military = {
	exists = owner
	owner = { is_hostile = root.from }
	# OR = {
	# 	is_ship_class = shipclass_transport
	# 	is_ship_class = shipclass_military
	# 	is_ship_class = shipclass_starbase
	# 	is_ship_class = shipclass_military_station
	# }
	NOR = {
		is_civilian = yes
		is_disabled = yes
		has_fleet_flag = domesticated_military_fleet_target_no_more_hunters
		has_fleet_flag = domesticated_security_fleet_defend_against_no_more_defenders
	}
}
# This = fleet
# Root.from = event_target:main_country
is_valid_target_for_domesticated_aliens_security = {
	is_mobile = yes
	exists = owner
	owner = { is_hostile = event_target:main_country }
	NOR = {
		is_civilian = yes
		is_disabled = yes
		# is_ship_class = shipclass_science_ship
		# is_ship_class = shipclass_constructor
		# is_ship_class = shipclass_colonizer
		has_fleet_flag = domesticated_security_fleet_defend_against_no_more_defenders
	}
}

# can_breeding_fertilization_protocol = {

# Only used twice
# can_resources_gathering_protocol = {
# 	optimize_memory
# 	OR = {
# 		AND = { has_country_flag = space_domestication_tiyanki	resource_stockpile_compare = { resource = food value >= $RSC|800$ } }
# 		AND = { has_country_flag = space_domestication_amoeba	resource_stockpile_compare = { resource = food value >= $RSC|800$ } }
# 		AND = { has_country_flag = space_domestication_crystal	resource_stockpile_compare = { resource = minerals value >= $RSC|800$ } }
# 		AND = { has_country_flag = space_domestication_cloud	resource_stockpile_compare = { resource = energy value >= $RSC|800$ } }
# 		AND = { has_country_flag = space_domestication_drone	resource_stockpile_compare = { resource = energy value >= $RSC|800$ } }
# 	}
# }
# Only used twice - replaced with can_resources_gathering_protocol
# can_research_assistance_protocol = {

# Needs RSC No.
can_SD_protocol = {
	optimize_memory
	OR = {
		AND = { has_country_flag = space_domestication_tiyanki	resource_stockpile_compare = { resource = food value >= $RSC|800$ } }
		AND = { has_country_flag = space_domestication_amoeba	resource_stockpile_compare = { resource = food value >= $RSC|800$ } }
		AND = { has_country_flag = space_domestication_crystal	resource_stockpile_compare = { resource = minerals value >= $RSC|800$ } }
		AND = { has_country_flag = space_domestication_cloud	resource_stockpile_compare = { resource = energy value >= $RSC|800$ } }
		AND = { has_country_flag = space_domestication_drone	resource_stockpile_compare = { resource = energy value >= $RSC|800$ } }
	}
}

has_leviathan_master_sacrified_world_modifier = {
	optimize_memory
	OR = {
		has_modifier = leviathan_spell_energy
		has_modifier = leviathan_spell_minerals
		has_modifier = leviathan_spell_food
		has_modifier = leviathan_spell_defense
		has_modifier = leviathan_spell_offense
	}
}
