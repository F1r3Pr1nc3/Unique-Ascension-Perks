# ENREGISTRER LES IMAGES EN .dds option A8R8G8B8
decision_stellar_manipulation = {
	sound = event_alien_nature
	resources = {
		category = decisions
		cost = {
			trigger = { exists = owner owner = { has_ascension_perk = ap_stellar_manipulation } NOT = { has_global_flag = ap_stellar_manipulation } }
			minerals = 4000 food = 2000 exotic_gases = 50
		}
		cost = { trigger = { has_global_flag = ap_stellar_manipulation } food = 500 minerals = 500 }
	}
	potential = {
		exists = from
		exists = space_owner
		space_owner = { is_same_empire = from }
		OR = { has_global_flag = ap_stellar_manipulation from = { has_ascension_perk = ap_stellar_manipulation } }
		is_a_habitable_planet_megastructure = yes
	}
	# prerequisites = { "tech_penal_colonies" }
	effect = {
		custom_tooltip = "decision_stellar_manipulation_tooltip"
		hidden_effect = {
			reroll_planet = yes
			if = { limit = { has_global_flag = has_guillis_planet_modifiers_mod }
				gpm_purge_all_planetary_modifiers = yes
				gpm_roll_normal_habitable_modifiers = yes
			}
			while = { count = 15 random = { chance = 50 add_random_non_blocker_deposit = yes } }
			planet_event = { id = UniqueAscensionPerksEvents.4025 }
		}
	}
	ai_weight = { weight = 1 }
}

#####################################
#									#
########## Friendly Nature ##########
#									#
#####################################
decision_nature_pacification = {
	owned_planets_only = yes
	sound = event_alien_nature
	enactment_time = 360
	resources = { category = decisions cost = { energy = 1000 food = 1500 } }
	potential = {
		NOT = { has_planet_flag = planet_nature_pacified }
		can_find_rare_deposits = yes
		exists = from
		from = { has_ascension_perk = ap_friendly_nature } is_under_colonization = no
	}
	effect = {
		custom_tooltip = "decision_nature_pacification_tooltip"
		hidden_effect = {
			# nature_pacification_effect = yes
			### (Mod) Guilli Planet Modifier - compatibility
			set_planet_flag = planet_nature_pacified
			planet_event = { id = UniqueAscensionPerksEvents.60 }
			# Green Modifers (Unused) ===> titanic_life asteroid_belt carbon_world
			# Yellow Modifiers ( 70% Chances to be Removed & 80% Chances to Add Their Opposite Green Modifier if it exists)
			if = { limit = { has_modifier = hazardous_weather } random = { chance = 30 remove_modifier = hazardous_weather } }
			if = { limit = { has_modifier = dangerous_wildlife } random = { chance = 30 remove_modifier = dangerous_wildlife } }
			if = { limit = { has_modifier = asteroid_impacts } random = { chance = 30 remove_modifier = asteroid_impacts } }
			if = { limit = { has_modifier = wild_storms } random = { chance = 30 remove_modifier = wild_storms } }
			if = { limit = { has_modifier = asteroid_impacts } random = { chance = 30 remove_modifier = asteroid_impacts } }
			if = { limit = { has_modifier = low_gravity } random = { chance = 30 remove_modifier = low_gravity } }
			if = { limit = { has_modifier = high_gravity } random = { chance = 30 remove_modifier = high_gravity } }
			if = { limit = { has_modifier = atmospheric_aphrodisiac } random = { chance = 30 remove_modifier = atmospheric_aphrodisiac } }
			if = { limit = { has_modifier = atmospheric_hallucinogen } random = { chance = 30 remove_modifier = atmospheric_hallucinogen } random = { chance = 80 add_modifier = { modifier = atmospheric_hallucinogen_good } } }
			### (Mod) Guilli Planet Modifier - Yellow Modifiers
			# if = { limit = { has_modifier = frequent_thunderstorms } random = { chance = 30 remove_modifier = frequent_thunderstorms } }
			if = { limit = { has_modifier = gpm_global_thunderstorms } random = { chance = 30 remove_modifier = gpm_global_thunderstorms } random = { chance = 80 add_modifier = { modifier = gpm_pleasant_weather } } }
			if = { limit = { has_modifier = gpm_thin_atmospheres } random = { chance = 30 remove_modifier = gpm_thin_atmospheres } random = { chance = 80 add_modifier = { modifier = gpm_dense_atmospheres } } }
			if = { limit = { has_modifier = gpm_strong_volcanism } random = { chance = 30 remove_modifier = gpm_strong_volcanism } }
			if = { limit = { has_modifier = gpm_weak_magnetic_field_2 } random = { chance = 30 remove_modifier = gpm_weak_magnetic_field_2 } }
			# if = { limit = { has_modifier = gpm_strong_magnetic_field_2 } random = { chance = 30 remove_modifier = gpm_strong_magnetic_field_2 } }
			if = { limit = { has_modifier = gpm_asteroid_impacts_2 } random = { chance = 30 remove_modifier = gpm_asteroid_impacts_2 } }
			if = { limit = { has_modifier = gpm_high_gravity_2 } random = { chance = 30 remove_modifier = gpm_high_gravity_2 } }
			if = { limit = { has_modifier = gpm_magma_ocean } random = { chance = 30 remove_modifier = gpm_magma_ocean } }
			if = { limit = { has_modifier = gpm_titanic_predators } random = { chance = 30 remove_modifier = gpm_titanic_predators } }
			if = { limit = { has_modifier = gpm_artificial_water } random = { chance = 30 remove_modifier = gpm_artificial_water } }
			if = { limit = { has_modifier = gpm_windy } random = { chance = 30 remove_modifier = gpm_windy } random = { chance = 80 add_modifier = { modifier = gpm_pleasant_weather } } }
			if = { limit = { has_modifier = gpm_flat_terrain } random = { chance = 30 remove_modifier = gpm_flat_terrain } }
			if = { limit = { has_modifier = gpm_rugged_terrain } random = { chance = 30 remove_modifier = gpm_rugged_terrain } }
			if = { limit = { has_modifier = gpm_ice_age } random = { chance = 30 remove_modifier = gpm_ice_age } }
			if = { limit = { has_modifier = gpm_seasonal_flooding } random = { chance = 30 remove_modifier = gpm_seasonal_flooding } }
			if = { limit = { has_modifier = gpm_lingering_pollution } random = { chance = 30 remove_modifier = gpm_lingering_pollution } }
			if = { limit = { has_modifier = gpm_thin_ozone_layer } random = { chance = 30 remove_modifier = gpm_thin_ozone_layer } }
			# if = { limit = { has_modifier = Trubbles } random = { chance = 30 remove_modifier = Trubbles } }
			# Red Modifiers ( Removed & 66% Chances to Add Their Opposite Green Modifier if it exists)
			if = { limit = { has_modifier = weak_magnetic_field } remove_modifier = weak_magnetic_field random = { chance = 66 add_modifier = { modifier = strong_magnetic_field } } }
			if = { limit = { has_modifier = unstable_tectonics } remove_modifier = unstable_tectonics }
			if = { limit = { has_modifier = tidal_locked } remove_modifier = tidal_locked }
			if = { limit = { has_modifier = mineral_poor } remove_modifier = mineral_poor random = { chance = 66 add_modifier = { modifier = mineral_rich } } }
			if = { limit = { has_modifier = bleak_planet } remove_modifier = bleak_planet random = { chance = 66 add_modifier = { modifier = lush_planet } } }
			if = { limit = { has_modifier = irradiated_planet } remove_modifier = irradiated_planet }
			### (Mod) Guilli Planet Modifier - Red Modifiers
			if = { limit = { has_modifier = gpm_unstable_tectonics_2 } remove_modifier = gpm_unstable_tectonics_2 }
			if = { limit = { has_modifier = gpm_hostile_flora } remove_modifier = gpm_hostile_flora random = { chance = 66 add_modifier = { modifier = gpm_friendly_wildlife } } }
			if = { limit = { has_modifier = gpm_toxic_gas } remove_modifier = gpm_toxic_gas }
			if = { limit = { has_modifier = gpm_unusual_seasons } remove_modifier = gpm_unusual_seasons random = { chance = 66 add_modifier = { modifier = gpm_perfect_seasons } } }
			if = { limit = { has_modifier = gpm_living_planet } remove_modifier = gpm_living_planet }
			if = { limit = { has_modifier = gpm_simple_organisms } remove_modifier = gpm_simple_organisms random = { chance = 66 add_modifier = { modifier = gpm_newly_evolved_complex_organisms } } }
			if = { limit = { has_modifier = gpm_unusual_formations } remove_modifier = gpm_unusual_formations }
			if = { limit = { has_modifier = gpm_great_temperature_variation } remove_modifier = gpm_great_temperature_variation }
			if = { limit = { has_modifier = gpm_locust_plagues } remove_modifier = gpm_locust_plagues }
			if = { limit = { has_modifier = gpm_acidic_seas } remove_modifier = gpm_acidic_seas }
			if = { limit = { has_modifier = gpm_resilent_parasites } remove_modifier = gpm_resilent_parasites random = { chance = 66 add_modifier = { modifier = gpm_symbiotic_life } } }
			if = { limit = { has_modifier = gpm_arachnophobia } remove_modifier = gpm_arachnophobia }
			if = { limit = { has_modifier = gpm_sandstorms } remove_modifier = gpm_sandstorms random = { chance = 66 add_modifier = { modifier = gpm_gorgeous_sky } } }
			if = { limit = { has_modifier = gpm_sand_tornadoes } remove_modifier = gpm_sand_tornadoes random = { chance = 66 add_modifier = { modifier = gpm_pleasant_weather } } }
			if = { limit = { has_modifier = gpm_quicksand } remove_modifier = gpm_quicksand }
			if = { limit = { has_modifier = gpm_furry_packs } remove_modifier = gpm_furry_packs }
			if = { limit = { has_modifier = gpm_blizzards } remove_modifier = gpm_blizzards random = { chance = 66 add_modifier = { modifier = gpm_pleasant_weather } } }
			if = { limit = { has_modifier = gpm_abominable_predators } remove_modifier = gpm_abominable_predators random = { chance = 66 add_modifier = { modifier = gpm_empathic_life } } }
			if = { limit = { has_modifier = gpm_carnivorous_flies } remove_modifier = gpm_carnivorous_flies }
			if = { limit = { has_modifier = gpm_torrential_rainstorms } remove_modifier = gpm_torrential_rainstorms random = { chance = 66 add_modifier = { modifier = gpm_gorgeous_sky } } }
			if = { limit = { has_modifier = gpm_massive_waves } remove_modifier = gpm_massive_waves random = { chance = 66 add_modifier = { modifier = gpm_ocean_currents } } }
			if = { limit = { has_modifier = gpm_toxic_garbage } remove_modifier = gpm_toxic_garbage }
			if = { limit = { has_modifier = gpm_oppressive_laws } remove_modifier = gpm_oppressive_laws random = { chance = 66 add_modifier = { modifier = gpm_rights_movement } } }
			if = { limit = { has_modifier = gpm_synopsys_overload } remove_modifier = gpm_synopsys_overload }
			if = { limit = { has_modifier = gpm_falling_behind } remove_modifier = gpm_falling_behind }
			if = { limit = { has_modifier = gpm_solar_storm } remove_modifier = gpm_solar_storm }
			# Add Green Modifiers
			while = {
				count = 4
				random_list = {
					10 = { modifier = { factor = 0 OR = { has_modifier = mineral_rich has_modifier = ultra_rich } } add_modifier = { modifier = mineral_rich } }
					10 = { modifier = { factor = 0 OR = { has_modifier = mineral_rich has_modifier = ultra_rich } } add_modifier = { modifier = ultra_rich } }
					10 = { modifier = { factor = 0 OR = { has_modifier = lush_planet can_lush_planet = no } } add_modifier = { modifier = lush_planet } }
					10 = { modifier = { factor = 0 has_modifier = natural_beauty } add_modifier = { modifier = natural_beauty } }
					# 10 = { modifier = { factor = 0 OR = { has_modifier = extensive_moon_system has_moon = no } } add_modifier = { modifier = extensive_moon_system } }
					### (Mod) Guilli Planet Modifier - Green Modifiers
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_highly_charged_air_particles } } add_modifier = { modifier = gpm_highly_charged_air_particles } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_single_biome } } add_modifier = { modifier = gpm_single_biome } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_hyper_complex_biome } } add_modifier = { modifier = gpm_hyper_complex_biome } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_dense_atmospheres } } add_modifier = { modifier = gpm_dense_atmospheres } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_mineral_rich_2 } } add_modifier = { modifier = gpm_mineral_rich_2 } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_ultra_rich_2 } } add_modifier = { modifier = gpm_ultra_rich_2 } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_low_gravity_2 } } add_modifier = { modifier = gpm_low_gravity_2 } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_floating_islands } } add_modifier = { modifier = gpm_floating_islands } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_extensive_cavern_system } } add_modifier = { modifier = gpm_extensive_cavern_system } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_unnatural_world } } add_modifier = { modifier = gpm_unnatural_world } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_atmospheric_stimulant } } add_modifier = { modifier = gpm_atmospheric_stimulant } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_perfect_seasons } } add_modifier = { modifier = gpm_perfect_seasons } }
					# 10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_ruined_battlefield } } add_modifier = { modifier = gpm_ruined_battlefield } } #
					# 10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_spaceship_graveyard } } add_modifier = { modifier = gpm_spaceship_graveyard } } #
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_gemstones } } add_modifier = { modifier = gpm_gemstones } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_ideal_for_life } } add_modifier = { modifier = gpm_ideal_for_life } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_endless_fish } } add_modifier = { modifier = gpm_endless_fish } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_clear_skies } } add_modifier = { modifier = gpm_clear_skies } }
					# 10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_android_pleasure_palace } } add_modifier = { modifier = gpm_android_pleasure_palace } } #
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_melted_ice_caps } } add_modifier = { modifier = gpm_melted_ice_caps } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_newly_evolved_complex_organisms } } add_modifier = { modifier = gpm_newly_evolved_complex_organisms } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_delicious_ingredients } } add_modifier = { modifier = gpm_delicious_ingredients } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_recent_mass_extinction } } add_modifier = { modifier = gpm_recent_mass_extinction } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_friendly_wildlife } } add_modifier = { modifier = gpm_friendly_wildlife } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_pleasant_weather } } add_modifier = { modifier = gpm_pleasant_weather } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_many_extremophiles } } add_modifier = { modifier = gpm_many_extremophiles } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_gorgeous_sky } } add_modifier = { modifier = gpm_gorgeous_sky } }
					# 10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_large_asteroid } } add_modifier = { modifier = gpm_large_asteroid } } #
					# 10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_asteroid_moon } } add_modifier = { modifier = gpm_asteroid_moon } } #
					# 10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_ancient_temple } } add_modifier = { modifier = gpm_ancient_temple } } #
					# 10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_metal_asteroid } } add_modifier = { modifier = gpm_metal_asteroid } } #
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_dense_core } } add_modifier = { modifier = gpm_dense_core } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_radioactive_mantle } } add_modifier = { modifier = gpm_radioactive_mantle } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_empathic_life } } add_modifier = { modifier = gpm_empathic_life } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_symbiotic_life } } add_modifier = { modifier = gpm_symbiotic_life } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_ice_flora } } add_modifier = { modifier = gpm_ice_flora } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_strange_ice_river } } add_modifier = { modifier = gpm_strange_ice_river } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_juggernaut_manta_rays } } add_modifier = { modifier = gpm_juggernaut_manta_rays } }
					# 10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_crystal_moon_palace } } add_modifier = { modifier = gpm_crystal_moon_palace } } #
					# 10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_cities_in_the_sky } } add_modifier = { modifier = gpm_cities_in_the_sky } } #
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_old_world } } add_modifier = { modifier = gpm_old_world } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_extensive_reef_systems } } add_modifier = { modifier = gpm_extensive_reef_systems } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_very_hot_core } } add_modifier = { modifier = gpm_very_hot_core } }
					# 10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_temple_of_the_ancient_one } } add_modifier = { modifier = gpm_temple_of_the_ancient_one } } #
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_beautiful_lakes } } add_modifier = { modifier = gpm_beautiful_lakes } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_proto_forests } } add_modifier = { modifier = gpm_proto_forests } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_artificial_core } } add_modifier = { modifier = gpm_artificial_core } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_fast_rotation } } add_modifier = { modifier = gpm_fast_rotation } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_exotic_spices } } add_modifier = { modifier = gpm_exotic_spices } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_silicon_crystals } } add_modifier = { modifier = gpm_silicon_crystals } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_never_ending_aurora } } add_modifier = { modifier = gpm_never_ending_aurora } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_rich_soil } } add_modifier = { modifier = gpm_rich_soil } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_ecological_nervous_system } } add_modifier = { modifier = gpm_ecological_nervous_system } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_algae_boom } } add_modifier = { modifier = gpm_algae_boom } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_ocean_currents } } add_modifier = { modifier = gpm_ocean_currents } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_surface_of_bones } } add_modifier = { modifier = gpm_surface_of_bones } }
					# 10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_beautiful_planet_rings } } add_modifier = { modifier = gpm_beautiful_planet_rings } } #
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_musical_creatures } } add_modifier = { modifier = gpm_musical_creatures } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_odd_cloud_shapes } } add_modifier = { modifier = gpm_odd_cloud_shapes } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_mushroom_forest } } add_modifier = { modifier = gpm_mushroom_forest } }
					10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_planet_wonder_ruined } } add_modifier = { modifier = gpm_planet_wonder_ruined } }
					# 10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_rights_movement } } add_modifier = { modifier = gpm_rights_movement } } #
					# 10 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = guillis_planet_modifiers_active } has_modifier = gpm_cybernetic_breaktroughs } } add_modifier = { modifier = gpm_cybernetic_breaktroughs } } #
					30 = { modifier = { factor = 0 OR = { has_planet_flag = planet_pacification_first_green_modifier } } }

				}
				set_planet_flag = planet_pacification_first_green_modifier
			}
			while = { count = 2 add_random_non_blocker_deposit = yes random = { chance = 10 add_random_non_blocker_deposit = yes } }
		}
	}
	ai_weight = { weight = 1 }
}

decision_genious_pregnancy = {
	owned_planets_only = yes
	sound = event_laboratory_sound
	enactment_time = 540
	resources = {
		category = decisions
		cost = { energy = 500 } # v3.4 energy = 50 food = 500
		cost = { trigger = { owner = { is_hive_empire = yes } } energy = 250 } # v3.4 energy = 10 food = 100
		cost = { trigger = { owner = { is_lithoid = yes } } minerals = 1000 }
		cost = { trigger = { owner = { is_lithoid = no } } food = 1000 }
	}
	potential = {
		exists = from
		from = { has_ascension_perk = ap_genius_cloning }
		is_under_colonization = no
	}
	allow = {
		custom_tooltip = { fail_text = "decision_genious_pregnancy_req_1" any_owned_pop = { is_robot_pop = no } }
		custom_tooltip = { fail_text = "decision_genious_pregnancy_req_2" NOT = { has_planet_flag = decision_genious_pregnancy_cooldown } }
	}
	effect = {
		custom_tooltip = "decision_genious_pregnancy_tooltip"
		hidden_effect = {
			set_timed_planet_flag = { flag = decision_genious_pregnancy_cooldown years = 3 } # if change, do also tooltip
			planet_event = { id = UniqueAscensionPerksEvents.3050 }
			while = {
				count = 9
				random_owned_pop = { limit = { is_robot_pop = no } prev = { create_pop = { species = prev } } }
			}
			if = { limit = { owner = { is_hive_empire = yes } }
				while = {
					count = 3
					random_owned_pop = { limit = { is_robot_pop = no } prev = { create_pop = { species = prev } } }
				}
			}
		}
	}
	ai_weight = { weight = 1 }
}

# Copy of decision_planet_food_boost
decision_genious_pregnancy2 = {
	owned_planets_only = yes
	sound = event_administrative_work
	icon = decision_resources
	resources = {
		category = decisions
		cost = { food = 1000 }
	}
	potential = {
		exists = from
		from = {
			is_regular_empire = yes
			is_lithoid_empire = no
			has_ascension_perk = ap_genius_cloning
		}
		NOR = {
			has_modifier = planet_growth_discouraged
			has_modifier = planet_population_control
		}
		is_under_colonization = no
	}
	allow = {
		NOT = { has_modifier = planet_food_boost }
	}
	effect = {
		add_modifier = { modifier = "planet_food_boost" years = 10 }
	}
	ai_weight = {
		weight = 5
		# don't encourage growth if there is no free housing
		modifier = { factor = 0 free_housing < 1 }
	}
}

decision_robot_command = {
	owned_planets_only = yes
	sound = event_ai_started_01
	enactment_time = 1080
	resources = {
		category = decisions
		cost = { energy = 500 minerals = 1000 alloys = 100 }
		cost = { trigger = { owner = { is_machine_empire = yes } } energy = 200 minerals = 500 alloys = 50 }
		cost = { trigger = { owner = { has_technology = tech_droid_workers } } energy = 150 minerals = 300 alloys = 35 }
		cost = { trigger = { owner = { has_technology = tech_synthetic_workers } } energy = 150 minerals = 300 alloys = 35 }
	}
	potential = {
		exists = from
		from = { has_ascension_perk = ap_robot_command }
		is_under_colonization = no
	}
	allow = {
		custom_tooltip = { fail_text = "ap_robot_command_req_4" owner = { any_owned_pop = { OR = { pop_has_trait = trait_mechanical pop_has_trait = trait_machine_unit } } } }
		custom_tooltip = { fail_text = "decision_robot_command_req_1" NOT = { has_planet_flag = decision_robot_command_cooldown } }
	}
	effect = {
		custom_tooltip = "decision_robot_command_tooltip"
		hidden_effect = {
			set_timed_planet_flag = { flag = decision_robot_command_cooldown years = 4 } # if change, do also tooltip
			planet_event = { id = UniqueAscensionPerksEvents.62 }
			while = {
				count = 9
				from = { random_owned_pop = { limit = { OR = { pop_has_trait = trait_mechanical pop_has_trait = trait_machine_unit } } prevprev = { create_pop = { species = prev } } } }
			}
		}
	}
	ai_weight = { weight = 1 }
}

decision_robot_command2 = {
	owned_planets_only = yes
	sound = event_ai_started_01
	enactment_time = 1080
	icon = decision_cybernetics
	resources = {
		category = decisions
		cost = { minerals = 500 alloys = 250 }
	}
	potential = {
		exists = from
		from = { has_ascension_perk = ap_robot_command }
		NOR = {
			has_modifier = broken_assembly_line
			# has_modifier = martial_law
			# has_modifier = hunter_killer_drones
			has_modifier = compliance_protocols
			has_modifier = planet_robot_assembly_control
		}
		is_under_colonization = no
	}
	allow = {
		NOT = { has_modifier = planet_alloy_boost }
	}
	effect = {
		add_modifier = { modifier = "planet_alloy_boost" years = 10 }
	}
	ai_weight = {
		weight = 4
		# don't encourage growth if there is no free housing
		modifier = { factor = 0 free_housing < 1 }
	}
}

decision_recomposer_life_to_ai = {
	owned_planets_only = yes
	sound = event_ai_started_01
	enactment_time = 240 # 480
	resources = {
		category = decisions
		cost = { energy = 400 minerals = 400 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = no } count >= 20 } } energy = 50 minerals = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = no } count >= 40 } } energy = 50 minerals = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = no } count >= 60 } } energy = 50 minerals = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = no } count >= 80 } } energy = 50 minerals = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = no } count >= 100 } } energy = 50 minerals = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = no } count >= 120 } } energy = 50 minerals = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = no } count >= 140 } } energy = 50 minerals = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = no } count >= 160 } } energy = 50 minerals = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = no } count >= 180 } } energy = 50 minerals = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = no } count >= 200 } } energy = 50 minerals = 50 }
	}
	on_queued = {
		set_variable = { which = num_non_robot_pop value = value:num_non_robot_pop }
	}
	on_unqueued = { clear_variable = num_non_robot_pop }
	potential = {
		exists = from
		from = { has_ascension_perk = ap_recomposer has_country_flag = recomposer_project }
		is_under_colonization = no
	}
	allow = {
		custom_tooltip = { fail_text = "decision_recomposer_life_to_ai_req_1" count_owned_pop = { limit = { is_robot_pop = no } count > 1 } }
		custom_tooltip = { fail_text = "decision_recomposer_life_to_ai_req_2" owner = { count_owned_pop = { limit = { is_robot_pop = yes } count > 1 } } }
		from = {
			has_country_resource = { type = energy amount > 500 }
			has_country_resource = { type = minerals amount > 500 }
		}
	}
	effect = {
		custom_tooltip = "decision_recomposer_life_to_ai_tooltip"
		hidden_effect = {
			export_trigger_value_to_variable = {
				trigger = count_owned_pop
				parameters = { limit = { is_robot_pop = no } }
				variable = num_non_robot_pop
			}
			planet_event = { id = UniqueAscensionPerksEvents.65 }
			# while = { count = num_non_robot_pop
			# 	# limit = { any_owned_pop = { is_robot_pop = no } }
			# 	from = {
			# 		random_owned_pop = { limit = { is_robot_pop = yes }
			# 			root = { create_pop = { species = prev } }
			# 		}
			# 	}
			# 	# random_owned_pop = { limit = { is_robot_pop = no } kill_pop = yes }
			# }
			every_owned_pop = { limit = { is_robot_pop = no }
				from = {
					random_owned_pop = { limit = { is_robot_pop = yes }
						root = { create_pop = { species = prev } }
					}
				}
				if = {
					limit = {
						from = { has_country_resource = { type = energy amount > 25 } has_country_resource = { type = minerals amount > 25 } }
					}
					kill_pop = yes
				} else = { break = yes }
			}
			from = {
				if = { limit = { prev = { is_variable_set = num_non_robot_pop } }
					add_resource = { energy = -2.5 minerals = -2.5 mult = prev.num_non_robot_pop }
				} else = {
					add_resource = { energy = -2.5 minerals = -2.5 mult = prev.value:num_non_robot_pop }
				}
			}
		}
	}
	ai_weight = { weight = 1 }
}

decision_recomposer_ai_to_life = {
	owned_planets_only = yes
	sound = event_ai_started_01
	enactment_time = 240 # 480
	resources = {
		category = decisions
		cost = { energy = 400 food = 400 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = yes } count >= 20 } } energy = 50 food = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = yes } count >= 40 } } energy = 50 food = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = yes } count >= 60 } } energy = 50 food = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = yes } count >= 80 } } energy = 50 food = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = yes } count >= 100 } } energy = 50 food = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = yes } count >= 120 } } energy = 50 food = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = yes } count >= 140 } } energy = 50 food = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = yes } count >= 160 } } energy = 50 food = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = yes } count >= 180 } } energy = 50 food = 50 }
		# cost = { trigger = { count_owned_pop = { limit = { is_robot_pop = yes } count >= 200 } } energy = 50 food = 50 }
	}
	on_queued = {
		set_variable = { which = num_robot_pop value = value:num_robot_pop }
	}
	on_unqueued = { clear_variable = num_robot_pop }
	potential = {
		exists = from
		from = { has_ascension_perk = ap_recomposer has_country_flag = recomposer_project }
		is_under_colonization = no
	}
	allow = {
		custom_tooltip = { fail_text = "decision_recomposer_ai_to_life_req_1" count_owned_pop = { limit = { is_robot_pop = yes } count > 1 } }
		custom_tooltip = { fail_text = "decision_recomposer_ai_to_life_req_2" owner = { count_owned_pop = { limit = { is_robot_pop = no } count > 1 } } }
		from = {
			has_country_resource = { type = energy amount > 500 }
			has_country_resource = { type = food amount > 500 }
		}
	}
	effect = {
		custom_tooltip = "decision_recomposer_ai_to_life_tooltip"
		hidden_effect = {
			export_trigger_value_to_variable = {
				trigger = count_owned_pop
				parameters = { limit = { is_robot_pop = yes } }
				variable = num_robot_pop
			}
			planet_event = { id = UniqueAscensionPerksEvents.66 }
			# while = { count = num_robot_pop
			# 	# limit = { any_owned_pop = { is_robot_pop = yes } }
			# 	from = {
			# 		random_owned_pop = { limit = { is_robot_pop = no }
			# 			root = { create_pop = { species = prev } }
			# 		}
			# 	}
			# 	# random_owned_pop = { limit = { is_robot_pop = yes } kill_pop = yes }
			# }
			every_owned_pop = { limit = { is_robot_pop = yes }
				from = {
					random_owned_pop = { limit = { is_robot_pop = no }
						root = { create_pop = { species = prev } }
					}
				}
				if = {
					limit = {
						from = { has_country_resource = { type = energy amount > 25 } has_country_resource = { type = food amount > 25 } }
					}
					kill_pop = yes
				} else = { break = yes }
			}

			from = {
				if = { limit = { prev = { is_variable_set = num_robot_pop } }
					add_resource = { energy = -2.5 minerals = -2.5 mult = prev.num_robot_pop }
				} else = {
					add_resource = { energy = -2.5 minerals = -2.5 mult = prev.value:num_robot_pop }
				}
			}
		}
	}
	ai_weight = { weight = 1 }
}

decision_galaxy_center = {
	owned_planets_only = yes
	sound = event_cityscape
	enactment_time = 3600
	resources = {
		category = decisions
		cost = { influence = 350 energy = 15000 alloys = 15000 }
	}
	potential = {
		gpm_is_planet_class_city = yes # is_possible_galaxy_center
		exists = from
		from = {
			has_ascension_perk = ap_galaxy_center
			NOT = { any_owned_planet = { has_planet_flag = galaxy_center_planet } }
		}
		num_pops > 20
	}
	effect = {
		custom_tooltip = "decision_galaxy_center_tooltip"
		hidden_effect = {
			planet_event = { id = UniqueAscensionPerksEvents.83 }
			set_planet_flag = galaxy_center_planet
			set_planet_size = 150
			add_modifier = { modifier = center_of_galaxy }
		}
	}
	ai_weight = { weight = 0 }
}

decision_galaxy_center_menu = {
	owned_planets_only = yes
	sound = event_administrative_work
	icon = decision_galaxy_center
	potential = { has_planet_flag = galaxy_center_planet }
	allow = {
		hidden_trigger = { exists = from }
		custom_tooltip = { fail_text = "decision_galaxy_center_cooldown"
			NOR = {
				has_planet_flag = decision_galaxy_center_cooldown
				from = { has_active_event = { UniqueAscensionPerksEvents.84 UniqueAscensionPerksEvents.85 UniqueAscensionPerksEvents.3086 } }
			}
		}
	}
	effect = {
		custom_tooltip = "decision_galaxy_center_menu_tooltip"
		hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.84 } }
	}
	ai_weight = { weight = 0 }
}

decision_ethic_shift = {
	owned_planets_only = yes
	sound = event_administrative_work
	icon = decision_alien_propaganda
	enactment_time = 180
	resources = {
		category = decisions
		cost = { unity = 200 }
		# v.3.4 now on planet event due performance!?
		# cost = { trigger = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count >= 20 } } unity = 100 }
		# cost = { trigger = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count >= 40 } } unity = 100 }
		# cost = { trigger = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count >= 60 } } unity = 100 }
		# cost = { trigger = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count >= 80 } } unity = 100 }
		# cost = { trigger = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count >= 100 } } unity = 100 }
		# cost = { trigger = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count >= 120 } } unity = 100 }
		# cost = { trigger = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count >= 140 } } unity = 100 }
		# cost = { trigger = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count >= 160 } } unity = 100 }
		# cost = { trigger = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count >= 180 } } unity = 100 }
		# cost = { trigger = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count >= 200 } } unity = 100 }
	}
	potential = { is_under_colonization = no  exists = from from = { has_ascension_perk = ap_advanced_government_1 } }
	allow = {
		custom_tooltip = { fail_text = "decision_ethic_shift_req_1" count_owned_pop = { limit = { pop_has_right_ethics = yes } count > 9 } }
		custom_tooltip = { fail_text = "decision_ethic_shift_req_2" NOT = { has_planet_flag = decision_ethic_shift_cooldown } }
	}
	effect = {
		custom_tooltip = "decision_ethic_shift_tooltip"
		# save_event_target_as = ethic_planet
		planet_event = { id = UniqueAscensionPerksEvents.4089 }
		set_planet_flag = decision_ethic_shift_cooldown
		# set_timed_planet_flag = { flag = decision_ethic_shift_cooldown years = 5 }
		planet_event = { id = UniqueAscensionPerksEvents.4090 days = 1800 }
	}
	ai_weight = { weight = 1 }
}

decision_hivemind_reserve = {
	owned_planets_only = yes
	sound = event_alien_nature
	enactment_time = 180
	resources = {
		category = decisions
		cost = { influence = 25 }
		cost = { trigger = { owner = { is_lithoid_empire = no } } food = 700 }
		cost = { trigger = { owner = { is_lithoid_empire = yes } } minerals = 700 }
	}
	potential = { exists = from from = { has_ascension_perk = ap_hivemind_reserve } is_under_colonization = no }
	allow = {
		custom_tooltip = { fail_text = "decision_hivemind_reserve_req_1" NOT = { has_planet_flag = decision_hivemind_reserve_cooldown } }
		if = { limit = { is_variable_set = hivemind_reserve_happened }
			custom_tooltip = {
				fail_text = requires_max_5_times_fail_simple
				success_text = requires_max_5_times_hivemind_reserve
				check_variable = { which = hivemind_reserve_happened value < 5 }
			}
		} else = {
			custom_tooltip = { text = requires_max_5_times_pass_simple always = yes }
		}
	}
	effect = {
		custom_tooltip = "decision_hivemind_reserve_tooltip"
		add_deposit = d_hivemind_reserve
		# save_event_target_as = hivemind_reserve_planet
		# if = { limit = { NOT = { is_variable_set = hivemind_reserve_happened } }
		# 	set_variable = { which = hivemind_reserve_happened value = 0 }
		# }
		change_variable = { which = hivemind_reserve_happened value = 1 }
		set_timed_planet_flag = { flag = decision_hivemind_reserve_cooldown years = 2 }
		planet_event = { id = UniqueAscensionPerksEvents.3128 days = 742 }
	}
	ai_weight = {
		weight = 1
		modifier = { factor = 2 num_pops > 24 }
		modifier = { factor = 3 num_pops > 48 }
	}
}

decision_hivemind_reserve_unhabited = {
	sound = event_alien_nature
	icon = decision_hivemind_reserve
	resources = {
		category = decisions
		cost = { influence = 25 }
		cost = { trigger = { owner = { is_lithoid_empire = no } } food = 900 }
		cost = { trigger = { owner = { is_lithoid_empire = yes } } minerals = 900 }
	}
	potential = {
		exists = from
		exists = space_owner
		space_owner = { is_same_empire = from }
		from = { has_ascension_perk = ap_hivemind_reserve }
		is_colonizable_planet = yes
		has_owner = no
	}
	allow = {
		custom_tooltip = { fail_text = "decision_hivemind_reserve_req_1" NOT = { has_planet_flag = decision_hivemind_reserve_cooldown } }
		if = { limit = { is_variable_set = hivemind_reserve_happened }
			custom_tooltip = {
				fail_text = requires_max_5_times_fail_simple
				success_text = requires_max_5_times_hivemind_reserve
				check_variable = { which = hivemind_reserve_happened value < 5 }
			}
		} else = {
			custom_tooltip = { text = requires_max_5_times_pass_simple always = yes }
		}
	}
	effect = {
		custom_tooltip = "decision_hivemind_reserve_tooltip"
		add_deposit = d_hivemind_reserve
		# save_event_target_as = hivemind_reserve_planet
		# if = { limit = { NOT = { is_variable_set = hivemind_reserve_happened } }
		# 	set_variable = { which = hivemind_reserve_happened value = 0 }
		# }
		change_variable = { which = hivemind_reserve_happened value = 1 }
		set_timed_planet_flag = { flag = decision_hivemind_reserve_cooldown years = 2 }
		planet_event = { id = UniqueAscensionPerksEvents.3128 days = 742 }
	}
	ai_weight = { weight = 1 }
}

decision_primitive_creation = {
	sound = event_pre_ftl_civilization
	enactment_time = 330
	resources = {
		category = decisions
		cost = { influence = 10 food = 800 minerals = 1800 energy = 1800 }
	}
	potential = {
		exists = from
		exists = space_owner
		space_owner = { is_same_empire = from }
		from = { has_ascension_perk = ap_primitives_creation }
		OR = {
			is_colony = no
			AND = {
				is_owned_by = from
				is_capital = no
				is_controlled_by = from
				# num_pops < 32
			}
		}
		OR = {
			colonizable_planet = yes # can_have_habitable_deposits = yes # merg_is_arcology = yes # habitable_planet = yes
			merg_is_hab_ringworld = yes # has_ringworld_output_boost = yes #  merg_is_habitat = yes # uses_habitat_capitals = yes
			# uninhabitable_regular_planet = yes ## decision_primitive_creation_unhabitable
		}
	}
	allow = {
		NOR = {
			has_orbital_bombardment = yes
			is_occupied_flag = yes
			has_planet_flag = primitive_creation_done
			has_planet_flag = new_primitive_world
			from = { num_owned_planets < 3 }
			from = { has_active_event = { leng_project_event.3 } }
			# num_pops > 31
		}
		# OR = { ## decision_primitive_creation_unhabitable
		# 	uninhabitable_regular_planet = no
		# 	AND = {
		# 		has_country_resource = { type = influence amount > 20 }
		# 		has_country_resource = { type = food amount > 1600 }
		# 		has_country_resource = { type = minerals amount > 3600 }
		# 		has_country_resource = { type = energy amount > 5000 }
		# 	}
		# }
	}
	effect = {
		custom_tooltip = "decision_primitive_creation_tooltip"
		planet_event = { id = leng_project_event.3 } # create_primitive_retro_country
	}
	ai_weight = { weight = 1 }
}

decision_primitive_creation_unhabitable = {
	icon = decision_primitive_creation
	sound = event_pre_ftl_civilization
	enactment_time = 300
	resources = {
		category = decisions
		cost = { influence = 20 food = 1600 minerals = 3600 energy = 5000 }
	}
	prerequisites = { tech_climate_restoration }
	potential = {
		exists = from
		exists = space_owner
		space_owner = { is_same_empire = from }
		from = { has_ascension_perk = ap_primitives_creation }
		OR = {
			has_owner = no
			AND = {
				is_owned_by = from
				is_capital = no
				is_controlled_by = from
				# num_pops < 32
			}
		}
		uninhabitable_regular_planet = yes
	}
	allow = {
		NOR = {
			has_orbital_bombardment = yes
			is_occupied_flag = yes
			has_planet_flag = primitive_creation_done
			has_planet_flag = new_primitive_world
			from = { num_owned_planets < 3 }
			from = { has_active_event = { leng_project_event.3 } }
			# num_pops > 31
		}
	}
	effect = {
		custom_tooltip = "decision_primitive_creation_tooltip"
		if		= { limit = { merg_is_molten = yes }		change_pc = pc_arid } # pc_desert
		else_if = { limit = { merg_is_toxic = yes }			change_pc = pc_continental }
		else_if = { limit = { merg_is_frozen = yes }		change_pc = pc_arctic } # pc_alpine
		else_if = { limit = { merg_is_barren = yes }		change_pc = pc_desert }
		else_if = { limit = { merg_is_barren_cold = yes }	change_pc = pc_alpine } # pc_tundra
		else = { change_pc = pc_ocean }
		reset_planet = yes
		planet_event = { id = leng_project_event.3 } # create_primitive_retro_country = yes
	}
	ai_weight = { weight = 1 }
}

# v3.4 reduced deposit chance
decision_nanite_extraction = {
	sound = event_ai_started_01
	icon = decision_drilling_for_gas
	resources = { category = decisions cost = { nanites = 1250 } }
	potential = {
		exists = from
		exists = space_owner
		space_owner = { is_same_empire = from }
		from = { has_ascension_perk = ap_nano_to_nanite }
		is_colonizable_planet = yes
		is_artificial = no
	}
	allow = {
		custom_tooltip = {
			fail_text = "decision_nanite_extraction_req_1"
			hidden_trigger = { NOT = { has_planet_flag = planet_nanite_exploitation } }
		}
	}
	effect = {
		custom_tooltip = "decision_nanite_extraction_tooltip"
		change_pc = pc_gray_goo
		add_deposit = d_minerals_10
		add_deposit = d_minerals_10
		add_deposit = d_energy_10
		add_deposit = d_energy_10
		add_deposit = d_alloys_5
		add_deposit = d_alloys_5
		add_deposit = d_nanites_deposit
		hidden_effect = {
			destroy_colony = yes
			clear_deposits = yes
			clear_planet_modifiers = yes
			random = { chance = 75 add_deposit = d_minerals_10 }
			random = { chance = 75 add_deposit = d_energy_10 }
			random = { chance = 75 add_deposit = d_energy_10 }
			random = { chance = 75 add_deposit = d_alloys_5 }
			random = { chance = 75 add_deposit = d_alloys_5 }
			set_planet_flag = planet_nanite_exploitation
			set_surveyed = { surveyed = yes surveyor = from }
		}
	}
	ai_weight = { weight = 1 }
}

decision_nanite_extraction_molten = {
	sound = event_ai_started_01
	icon = decision_drilling_for_gas
	resources = { category = decisions cost = { nanites = 350 } } # 500
	potential = {
		exists = from
		exists = space_owner
		space_owner = { is_same_empire = from }
		from = { has_ascension_perk = ap_nano_to_nanite }
		has_owner = no
		OR = {
			is_planet_class = pc_molten
			is_planet_class = pc_legendary_forge
		}
	}
	allow = {
		custom_tooltip = {
			fail_text = "decision_nanite_extraction_req_1"
			hidden_trigger = { NOT = { has_planet_flag = planet_nanite_exploitation_molten } }
		}
	}
	effect = {
		custom_tooltip = "decision_nanite_extraction_molten_tooltip"
		random = { chance = 25 add_deposit = d_minerals_10 }
		random = { chance = 75 add_deposit = d_minerals_5 }
		random = { chance = 75 add_deposit = d_minerals_5 }
		random = { chance = 50 add_deposit = d_energy_5 }
		random = { chance = 25 add_deposit = d_rare_crystals_1 }
		random = { chance = 40 add_deposit = d_rare_crystals_2 }
		add_deposit = d_nanites_deposit
		add_deposit = d_nanites_deposit
		hidden_effect = {
			every_owned_pop = { kill_pop = yes }
			set_planet_flag = planet_nanite_exploitation_molten
			set_surveyed = { surveyed = yes surveyor = from }
		}
	}
	ai_weight = { weight = 1 }
}

decision_nanite_extraction_toxic = {
	sound = event_ai_started_01
	icon = decision_drilling_for_gas
	resources = { category = decisions cost = { nanites = 350 } } # 500
	potential = {
		exists = from
		exists = space_owner
		space_owner = { is_same_empire = from }
		from = { has_ascension_perk = ap_nano_to_nanite }
		has_owner = no
		is_planet_class = pc_toxic
	}
	allow = {
		custom_tooltip = {
			fail_text = "decision_nanite_extraction_req_1"
			hidden_trigger = { NOT = { has_planet_flag = planet_nanite_exploitation_toxic } }
		}
	}
	effect = {
		custom_tooltip = "decision_nanite_extraction_toxic_tooltip"
		random = { chance = 25 add_deposit = d_energy_10 }
		random = { chance = 75 add_deposit = d_energy_5 }
		random = { chance = 75 add_deposit = d_energy_5 }
		random = { chance = 50 add_deposit = d_minerals_5 }
		random = { chance = 25 add_deposit = d_exotic_gases_1 }
		random = { chance = 40 add_deposit = d_exotic_gases_2 }
		add_deposit = d_nanites_deposit
		add_deposit = d_nanites_deposit
		hidden_effect = {
			every_owned_pop = { kill_pop = yes }
			set_planet_flag = planet_nanite_exploitation_toxic
			set_surveyed = { surveyed = yes surveyor = from }
		}
	}
	ai_weight = { weight = 1 }
}

decision_nanite_extraction_barren = {
	sound = event_ai_started_01
	icon = decision_drilling_for_gas
	resources = { category = decisions cost = { nanites = 350 } }
	potential = {
		exists = from
		exists = space_owner
		space_owner = { is_same_empire = from }
		from = { has_ascension_perk = ap_nano_to_nanite }
		has_owner = no
		is_planet_class = pc_barren
	}
	allow = {
		custom_tooltip = {
			fail_text = "decision_nanite_extraction_req_1"
			hidden_trigger = { NOT = { has_planet_flag = planet_nanite_exploitation_barren } }
		}
	}
	effect = {
		custom_tooltip = "decision_nanite_extraction_barren_tooltip"
		random = { chance = 25 add_deposit = d_minerals_5 }
		random = { chance = 75 add_deposit = d_minerals_5 }
		random = { chance = 25 add_deposit = d_energy_5 }
		random = { chance = 75 add_deposit = d_energy_5 }
		random = { chance = 25 add_deposit = d_volatile_motes_1 }
		random = { chance = 40 add_deposit = d_volatile_motes_2 }
		add_deposit = d_nanites_deposit
		add_deposit = d_nanites_deposit
		hidden_effect = {
			every_owned_pop = { kill_pop = yes }
			set_planet_flag = planet_nanite_exploitation_barren
			set_surveyed = { surveyed = yes surveyor = from }
		}
	}
	ai_weight = { weight = 1 }
}

decision_nanite_purification = {
	sound = event_alien_signal
	icon = decision_consecrated_worlds
	resources = { category = decisions cost = { nanites = 3000 } }
	potential = {
		exists = from
		exists = space_owner
		space_owner = { is_same_empire = from }
		from = { has_ascension_perk = ap_nano_to_nanite }
		is_planet_class = pc_gray_goo
		# has_owner = no
	}
	allow = {
		custom_tooltip = {
			fail_text = "decision_nanite_purification_req_1"
			from = {
				OR = {
					has_ascension_perk = ap_world_shaper
					has_ascension_perk = ap_hive_worlds
					has_ascension_perk = ap_machine_worlds
				}
			}
		}
		custom_tooltip = {
			fail_text = "decision_nanite_extraction_req_1"
			hidden_trigger = { NOT = { has_planet_flag = planet_nanite_purification } }
		}
	}
	effect = {
		custom_tooltip = "decision_nanite_purification_tooltip"
		if = { limit = { from = { has_ascension_perk = ap_world_shaper } } change_pc = pc_gaia }
		else_if = { limit = { from = { has_ascension_perk = ap_hive_worlds } } change_pc = pc_hive }
		else_if = { limit = { from = { has_ascension_perk = ap_machine_worlds } } change_pc = pc_machine }
		reroll_deposits = yes
		reroll_planet_modifiers = yes
		hidden_effect = {
			set_planet_flag = planet_nanite_purification
			set_surveyed = { surveyed = yes surveyor = from }
		}
	}
	ai_weight = { weight = 1 }
}

decision_nanite_extraction_gas = {
	sound = event_ai_started_01
	icon = decision_drilling_for_gas
	resources = { category = decisions cost = { nanites = 350 } }
	potential = {
		exists = from
		exists = space_owner
		space_owner = { is_same_empire = from }
		from = { has_ascension_perk = ap_nano_to_nanite }
		has_owner = no
		is_planet_class = pc_gas_giant
	}
	allow = {
		custom_tooltip = {
			fail_text = "decision_nanite_extraction_req_1"
			hidden_trigger = { NOT = { has_planet_flag = planet_nanite_exploitation_gas } }
		}
	}
	effect = {
		custom_tooltip = "decision_nanite_extraction_gas_tooltip"
		add_deposit = d_energy_2
		random = { chance = 25 add_deposit = d_exotic_gases_1 }
		random = { chance = 25 add_deposit = d_energy_2 }
		random = { chance = 50 add_deposit = d_energy_2 }
		random = { chance = 75 add_deposit = d_energy_3 }
		hidden_effect = {
			set_planet_flag = planet_nanite_exploitation_gas
			set_surveyed = { surveyed = yes surveyor = from }
		}
	}
	ai_weight = { weight = 1 }
}

decision_deep_scanner = {
	owned_planets_only = yes
	sound = event_laboratory_sound
	resources = { category = decisions cost = { energy = 200 } }
	potential = {
		exists = from
		from = {
			OR = {
				has_ascension_perk = ap_deep_scanner
				has_valid_civic = civic_exploration # Compat. E&CC
			}
		}
		# has_active_building = building_deep_space_scanner
	}
	allow = {
		custom_tooltip = {
			fail_text = "decision_deep_scanner_req_1"
			NOR = { has_modifier = pm_deep_scanner has_planet_flag = decision_deep_scanner_cooldown }
	 	}
		custom_tooltip = {
			fail_text = "decision_deep_scanner_req_2"
			# can_deep_scan_a_new_anomaly = yes
			# check_variable_arithmetic = { which = value:num_active_buildings|BUILDING|building_deep_space_scanner| value > 0 }
			# TODO we could shrink the whole shebang to a single line if distance = { max_jumps would accept script_value
			# num_buildings = { type = building_deep_space_scanner disabled = no value > 0 }
			has_active_building = building_deep_space_scanner
			OR = {
				from = { any_system_within_border = { distance = { source = root use_bypasses = no min_jumps = 1 max_jumps = 2 } any_system_planet = { can_be_deep_scanned = yes } } }
				AND = {
					num_buildings = { type = building_deep_space_scanner disabled = no value >= 2 }
					from = { any_system_within_border = { distance = { source = root use_bypasses = no min_jumps = 1 max_jumps = 4 } any_system_planet = { can_be_deep_scanned = yes } } }
				}
				AND = {
					num_buildings = { type = building_deep_space_scanner disabled = no value >= 3 }
					from = { any_system_within_border = { distance = { source = root use_bypasses = no min_jumps = 2 max_jumps = 6 } any_system_planet = { can_be_deep_scanned = yes } } }
				}
				AND = {
					num_buildings = { type = building_deep_space_scanner disabled = no value >= 4 }
					from = { any_system_within_border = { distance = { source = root use_bypasses = no min_jumps = 4 max_jumps = 8 } any_system_planet = { can_be_deep_scanned = yes } } }
				}
				AND = {
					num_buildings = { type = building_deep_space_scanner disabled = no value >= 5 }
					from = { any_system_within_border = { distance = { source = root use_bypasses = no min_jumps = 6 max_jumps = 10 } any_system_planet = { can_be_deep_scanned = yes } } }
				}
				AND = {
					num_buildings = { type = building_deep_space_scanner disabled = no value >= 6 }
					from = { any_system_within_border = { distance = { source = root use_bypasses = no min_jumps = 8 max_jumps = 12 } any_system_planet = { can_be_deep_scanned = yes } } }
				}
				AND = {
					num_buildings = { type = building_deep_space_scanner disabled = no value >= 7 }
					from = { any_system_within_border = { distance = { source = root use_bypasses = no min_jumps = 10 max_jumps = 14 } any_system_planet = { can_be_deep_scanned = yes } } }
				}
				AND = {
					num_buildings = { type = building_deep_space_scanner disabled = no value >= 8 }
					from = { any_system_within_border = { distance = { source = root use_bypasses = no min_jumps = 12 max_jumps = 16 } any_system_planet = { can_be_deep_scanned = yes } } }
				}
				AND = {
					num_buildings = { type = building_deep_space_scanner disabled = no value >= 9 }
					from = { any_system_within_border = { distance = { source = root use_bypasses = no min_jumps = 14 max_jumps = 18 } any_system_planet = { can_be_deep_scanned = yes } } }
				}
				AND = {
					num_buildings = { type = building_deep_space_scanner disabled = no value >= 10 }
					from = { any_system_within_border = { distance = { source = root use_bypasses = no min_jumps = 16 max_jumps = 20 } any_system_planet = { can_be_deep_scanned = yes } } }
				}
			}
		}
	}
	effect = {
		custom_tooltip = "decision_deep_scanner_tooltip"
		save_event_target_as = deep_scanner_planet
		planet_event = { id = UniqueAscensionPerksEvents.443 }
		add_modifier = { modifier = pm_deep_scanner }
		hidden_effect = {
			set_timed_planet_flag = { flag = decision_deep_scanner_cooldown years = 1 }
			planet_event = { id = UniqueAscensionPerksEvents.441 days = 360 } # Notify + rescan
		}
	}
	ai_weight = { weight = event_target:global_event_country.ap_deep_scanner }
}

decision_end_deep_scanner = {
	owned_planets_only = yes
	sound = event_laboratory_sound
	icon = decision_deep_scanner
	resources = { category = decisions }
	potential = {
		exists = from
		from = {
			OR = {
				has_ascension_perk = ap_deep_scanner
				has_valid_civic = civic_exploration # Compat. E&CC
			}
		}
		has_active_building = building_deep_space_scanner has_modifier = pm_deep_scanner
	}
	allow = {
		custom_tooltip = { fail_text = "decision_deep_scanner_req_1" has_modifier = pm_deep_scanner NOT = { has_planet_flag = decision_deep_scanner_cooldown } }
	}
	effect = { remove_modifier = pm_deep_scanner }
	ai_weight = {
		weight = 1
		modifier = { factor = 5 NOT = { has_active_building = building_deep_space_scanner } }
	}
}

decision_civilian_cargo_focus = {
	owned_planets_only = yes
	sound = event_laboratory_sound
	resources = { category = decisions cost = {} }
	potential = { is_capital = no exists = from from = { has_country_flag = ap_civilian_activities_project NOT = { any_owned_planet = { has_planet_flag = civilian_cargo_focus } } } }
	effect = { custom_tooltip = "decision_civilian_cargo_focus_tooltip" hidden_effect = { set_planet_flag = civilian_cargo_focus } }
	ai_weight = { weight = 1 }
}

decision_civilian_cargo_focus_off = {
	owned_planets_only = yes
	sound = event_laboratory_sound
	icon = decision_civilian_cargo_focus
	resources = { category = decisions cost = {} }
	potential = { is_capital = no exists = from from = { has_country_flag = ap_civilian_activities_project } has_planet_flag = civilian_cargo_focus }
	effect = { custom_tooltip = "decision_civilian_cargo_focus_off_tooltip" hidden_effect = { remove_planet_flag = civilian_cargo_focus } }
	ai_weight = { weight = 1 }
}

decision_self_aware_colony = {
	owned_planets_only = yes
	sound = event_laboratory_sound
	resources = { category = decisions cost = {} }
	potential = {
		exists = from
		# OR = { has_global_flag = ap_self_aware_colony
		from = { has_ascension_perk = ap_self_aware_colony }
		NOT = { has_modifier = self_aware_colony }
	}
	effect = {
		custom_tooltip = "decision_self_aware_colony_tooltip"
		hidden_effect = {
			if = { limit = { has_modifier = self_aware_colony }
				planet_event = { id = UniqueAscensionPerksEvents.461 }
			} else = {
				remove_all_buildings = yes
				remove_all_districts = yes
				add_modifier = { modifier = self_aware_colony clear_on_owner_change = no }
				add_modifier = { modifier = self_aware_no_focus clear_on_owner_change = no }
			}
		}
	}
	ai_weight = { weight = 0.5 }
}

# decision_self_aware_colony_menu = {
# 	owned_planets_only = yes
# 	sound = event_laboratory_sound
# 	icon = decision_self_aware_colony
# 	resources = { category = decisions cost = {} }
# 	potential = { has_modifier = self_aware_colony }
# 	effect = { hidden_effect = {
# 		# save_event_target_as = self_aware_planet
# 		planet_event = { id = UniqueAscensionPerksEvents.461 } }
# 	}
# 	ai_weight = { weight = 1 }
# }

decision_legendary_forge = {
	sound = event_mystic_reveal
	resources = { category = decisions cost = { minerals = 15000 alloys = 1000 sr_living_metal = 75 } }
	potential = {
		exists = from
		exists = space_owner
		space_owner = { is_same_empire = from }
		from = { has_ascension_perk = ap_legendary_forge }
		is_planet_class = pc_molten
		has_owner = no
	}
	effect = {
		custom_tooltip = "decision_legendary_forge_tooltip"
		change_pc = pc_legendary_forge
		save_event_target_as = legendary_forge_planet
		from = { country_event = { id = UniqueAscensionPerksEvents.481 } }
	}
	ai_weight = { weight = 1 }
}
