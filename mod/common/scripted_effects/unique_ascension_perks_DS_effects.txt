#######################################
#									 #
########## Defense Sentinels ##########
#									 #
#######################################

create_defense_sentinels_country = {
	save_event_target_as = main_country
	if = {
		limit = { any_country = { has_relation_flag = { who = event_target:main_country flag = defense_sentinels } } }
		random_country = {
			limit = { has_relation_flag = { who = event_target:main_country flag = defense_sentinels } }
			save_event_target_as = defense_sentinels
		} else = {
			create_country = {
				name = "Defense Sentinels"
				type = defense_sentinels
				flag = {
					icon = { category = "spherical" file = "flag_spherical_3.dds" }
					background= { category = "backgrounds" file = "diagonal.dds" }
					colors = { "black" "blue" "null" "null" }
				}
				effect = {
					every_country = {
						limit = { has_communications = event_target:main_country }
						establish_communications_no_message = prev
					}
					save_event_target_as = defense_sentinels
					set_country_flag = defense_sentinels
					set_relation_flag = { who = event_target:main_country flag = defense_sentinels }
					set_subject_of = { who = event_target:main_country subject_type = space_dimestication }
					set_graphical_culture = ai_02
				}
			}
			# last_created_country = { set_graphical_culture = ai_02 }
		}
	}
	if = {
		limit = { NOT = { any_planet_within_border = { has_planet_flag = defense_sentinels_home } } }
		# capital_star = { save_event_target_as = spawn_location } this will destroy the core sector, so take another system
		random_planet_within_border = {
			limit = {
				solar_system = {
					is_capital_system = no
				}
				NAND = {
					exists = sector
					is_sector_capital = yes
					solar_system = {
						is_capital_system = yes
					}
				}
			}
			solar_system.star = { save_event_target_as = spawn_location }
		}
		event_target:defense_sentinels = {
			create_fleet = {
				name = "Defense Sentinels"
				settings = { spawn_debris = no }
				effect = {
					set_owner = prev
					defense_sentinels_spawn_default_fleet = yes
					set_location = { target = event_target:spawn_location distance = 250 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 5000
					set_formation_scale = 1.0
					save_event_target_as = defense_sentinels_fleet
					set_fleet_flag = defense_sentinels_fleet
					solar_system = { spawn_planet = { class = pc_ai location = prev has_ring = no init_effect = { set_name = "NAME_SENTINELS_HOMEWORLD" set_planet_flag = defense_sentinels_home set_planet_size = 30 clear_deposits = yes set_owner = event_target:defense_sentinels } } }
				}
			}
		}
		random_planet_within_border = { limit = { has_planet_flag = defense_sentinels_home } save_event_target_as = spawn_location }
		event_target:defense_sentinels = {
			create_fleet = {
				name = "Defense Sentinels"
				settings = { spawn_debris = no is_boss = yes }
				effect = {
					set_owner = prev
					create_ship = { name = "" design = "Defense Sentinel - Main Core" graphical_culture = "ai_01" }
					set_location = { target = event_target:spawn_location distance = 15 angle = random }
					save_event_target_as = defense_sentinels_fleet
					set_fleet_flag = defense_sentinels_main_core
				}
			}
		}
	}
}

create_defense_sentinels_fleet = {
	create_defense_sentinels_country = yes
	random_planet_within_border = {
		limit = { has_planet_flag = defense_sentinels_home }
		weights = { base = 1 modifier = { add = 5 is_sector_capital = no } }
		save_event_target_as = spawn_location
	}
	event_target:defense_sentinels = {
		create_fleet = {
			name = "Defense Sentinels"
			settings = { spawn_debris = no }
			effect = {
				set_owner = prev
				defense_sentinels_spawn_default_fleet = yes
				set_location = { target = event_target:spawn_location distance = 10 angle = random }
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 5000
				set_formation_scale = 1.0
				save_event_target_as = defense_sentinels_fleet
				set_fleet_flag = defense_sentinels_fleet
			}
		}
	}
}

defense_sentinels_spawn_default_fleet = {
	while = { count = 7 create_ship = { name = "" design = "Defense Sentinel" graphical_culture = "ai_01" } }
	while = { count = 7 random_list = { 50 = {} 50 = { create_ship = { name = "" design = "Defense Sentinel" graphical_culture = "ai_01" } } } }
	if = {
		limit = { event_target:main_country = { has_country_flag = ap_defense_sentinels_retriever_project } event_target:defense_sentinels = { count_owned_ship = { limit = { is_ship_size = large_ship_ai } count < 20 } } }
		while = { count = 1 create_ship = { name = "" design = "Defense Retriever Sentinel" graphical_culture = "ai_01" } }
		while = { count = 1 random_list = { 50 = {} 50 = { create_ship = { name = "" design = "Defense Retriever Sentinel" effect = { add_modifier = { modifier = retriever_sentinel } } graphical_culture = "ai_01" } } } }
	}
}

create_retriever_sentinels_fleet = {
	create_defense_sentinels_country = yes
	random_planet_within_border = {
		limit = { has_planet_flag = defense_sentinels_home }
		weights = { base = 1 modifier = { add = 5 is_sector_capital = no } }
		save_event_target_as = spawn_location
	}
	event_target:defense_sentinels = {
		create_fleet = {
			name = "Defense Sentinels"
			settings = { spawn_debris = no }
			effect = {
				set_owner = prev
				defense_sentinels_spawn_retriever_fleet = yes
				set_location = { target = event_target:spawn_location distance = 10 angle = random }
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 5000
				set_formation_scale = 1.0
				save_event_target_as = defense_sentinels_fleet
				set_fleet_flag = defense_sentinels_fleet
			}
		}
	}
}

defense_sentinels_spawn_retriever_fleet = {
	while = { count = 1 random_list = { 50 = {} 50 = { create_ship = { name = "" design = "Defense Retriever Sentinel" effect = { add_modifier = { modifier = retriever_sentinel } } graphical_culture = "ai_01" } } } }
	while = { count = 2 random_list = { 50 = {} 50 = { create_ship = { name = "" design = "Defense Retriever Sentinel" effect = { add_modifier = { modifier = retriever_sentinel } } graphical_culture = "ai_01" } } } }
	if = {
		limit = { event_target:defense_sentinels = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 300 } } }
		while = { count = 7 random_list = { 50 = {} 50 = { create_ship = { name = "" design = "Defense Sentinel" effect = { add_modifier = { modifier = retriever_sentinel } } graphical_culture = "ai_01" } } } }
	}
}

defense_sentinels_kill_them = { event_target:domesticated_spaceborn_alien = { every_owned_fleet = { destroy_fleet = this } } }

defense_sentinels_idle_fleet_selection = {
	save_event_target_as = main_country
	random_country = {
		limit = {
			has_country_flag = defense_sentinels
			has_relation_flag = { who = event_target:main_country flag = defense_sentinels }
		}
		save_event_target_as = domesticated_spaceborn_alien
		every_owned_fleet = { # Select Fleets
			limit = {
				has_fleet_flag = defense_sentinels_fleet
				NOT = { has_fleet_flag = defense_sentinels_fleet_defending_order }
				OR = {
					AND = {
						has_fleet_flag = defense_sentinels_fleet_patroling
						OR = {
							is_fleet_idle = yes
							NOT = { has_fleet_flag = defense_sentinels_fleet_patroling_order }
							event_target:main_country = { any_system_within_border = { any_ship_in_system = { is_valid_target_for_domesticated_aliens_security = yes } } }
						}
					}
					AND = {
						has_fleet_flag = defense_sentinels_fleet_defending
						is_fleet_idle = yes
					}
					AND = {
						NOR = {
							has_fleet_flag = defense_sentinels_fleet_patroling
							has_fleet_flag = defense_sentinels_fleet_defending
						}
						is_fleet_idle = yes
					}
				}
			}
			fleet_event = { id = UniqueAscensionPerksEvents.232 days = 1 random = 2 }
		}
	}
}

defense_sentinels_idle_fleet_action = {
	owner = {
		save_event_target_as = domesticated_spaceborn_alien
		random_country = {
			limit = { reverse_has_relation_flag = { who = event_target:domesticated_spaceborn_alien flag = domesticated_spaceborn_alien } }
			save_event_target_as = main_country
		}
	}
	if = { # Defense & Patrol
		limit = { has_fleet_flag = defense_sentinels_fleet NOT = { has_fleet_flag = defense_sentinels_fleet_defending_order } }
		if = {
			limit = { event_target:main_country = { any_system_within_border = { any_ship_in_system = { is_valid_target_for_domesticated_aliens_security = yes } } } }
			event_target:main_country = {
				random_system_within_border = {
					limit = { any_ship_in_system = { is_valid_target_for_domesticated_aliens_security = yes } }
					random_fleet_in_system = {
						limit = { is_valid_target_for_domesticated_aliens_security = yes }
						save_event_target_as = defense_sentinels_fleet_defend_against
						random_list = {
							10 = { set_timed_fleet_flag = { flag = defense_sentinels_fleet_defend_against_no_more_defenders days = 180 } }
							50 = {}
						}
					}
				}
			}
			save_event_target_as = defense_sentinels_fleet_defending
			set_fleet_flag = defense_sentinels_fleet_defending
			set_timed_fleet_flag = { flag = defense_sentinels_fleet_defending_order days = 45 }
			remove_auto_move_target = yes
			auto_follow_fleet = { target = event_target:defense_sentinels_fleet_defend_against attack_fleet = yes } else = {
				event_target:main_country = { random_planet_within_border = { save_event_target_as = defense_sentinels_fleet_destination } }
				save_event_target_as = defense_sentinels_fleet_patroling
				set_fleet_flag = defense_sentinels_fleet_patroling
				set_timed_fleet_flag = { flag = defense_sentinels_fleet_defending_order days = 10 }
				set_timed_fleet_flag = { flag = defense_sentinels_fleet_patroling_order days = 120 }
				auto_move_to_planet = { target = event_target:defense_sentinels_fleet_destination clear_auto_move_on_arrival = no }
			}
		}
	}
}
