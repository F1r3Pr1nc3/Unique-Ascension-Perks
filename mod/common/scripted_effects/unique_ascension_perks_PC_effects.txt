######################################
#									 #
######### Primitive Creation ##########
#									 #
######################################

create_primitive_retro_country = {
	hidden_effect = {
		set_planet_flag = new_primitive_world
		save_event_target_as = new_primitive_world
		from = {
			save_event_target_as = origin_country
			create_species = {
				name = this
				plural = this
				class = this
				portrait = this
				homeworld = event_target:new_primitive_world
				traits = { trait = random_traits }
			}
		}
		# create_early_primitive_empire = yes
		create_country = {
			name = random
			authority = random
			ethos = event_target:origin_country
			civics = {
				civic = civic_landed_nobility
				civic = civic_flat_world_theory
			}
			species = last_created_species
			flag = {
				icon = { category = "special" file = "primitive.dds" }
				background = { category = "backgrounds" file = "new_dawn.dds" }
				colors = { "turquoise" "green" "null" "null" }
			}
			type = primitive
		}
		last_created_country = {
			set_graphical_culture = preindustrial_01
			random_list = {
				20 = {
					set_country_flag = stone_age
					set_primitive_age = stone_age
					change_government = {
						authority = random
						civics = {
							civic = civic_secret_of_fire
							civic = civic_the_wheel
						}
					}
				}
				20 = {
					set_country_flag = bronze_age
					set_primitive_age = bronze_age
					change_government = {
						authority = random
						civics = {
							civic = civic_secret_of_fire
							civic = civic_the_wheel
						}
					}
					change_country_flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"green"
							"dark_green"
							"null"
							"null"
						}
					}
				}
				20 = {
					set_country_flag = iron_age
					set_primitive_age = iron_age
					change_country_flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"purple"
							"dark_purple"
							"null"
							"null"
						}
					}
				}
				20 = {
					set_country_flag = late_medieval_age
					set_primitive_age = late_medieval_age
					change_country_flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"light_blue"
							"blue"
							"null"
							"null"
						}
					}
				}
				20 = {
					set_country_flag = renaissance_age
					set_primitive_age = renaissance_age
					change_country_flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"pink"
							"burgundy"
							"null"
							"null"
						}
					}
				}
				20 = {
					set_country_flag = steam_age
					set_primitive_age = steam_age
					change_country_flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"orange"
							"red"
							"null"
							"null"
						}
					}
				}
			}
		}
		setup_primitive_planet = yes
		from = { country_event = { id = UniqueAscensionPerksEvents.141 } }
	}
}

primitive_country_into_next_age = {
	custom_tooltip = "primitive_country_into_next_age_tooltip"
	hidden_effect = {
		event_target:primitive_creation_country = {
			remove_country_flag = recently_advanced
			switch = {
				trigger = has_country_flag
				stone_age		= { country_event = { id = primitive.30 } }
				bronze_age		= { country_event = { id = primitive.20 } }
				iron_age		= { country_event = { id = primitive.22 } }
				late_medieval_age = { country_event = { id = primitive.24 } }
				renaissance_age	= { country_event = { id = primitive.26 } }
				steam_age		= { country_event = { id = primitive.28 } }
				industrial_age	= { country_event = { id = primitive.10 } }
				machine_age		= { country_event = { id = primitive.12 } }
				atomic_age		= { country_event = { id = primitive.14 } }
				early_space_age	= { country_event = { id = primitive.16 } }
			}
		}
	}
}

# create_vassal_country = {
# 	hidden_effect = {
# 		save_event_target_as = this_planet
# 		from = { save_event_target_as = owning_empire }
# 		create_country = {
# 			type = default
# 			species = event_target:owning_empire
# 			ignore_initial_colony_error = yes
# 			origin = origin_default
# 			effect = {
# 				event_target:this_planet = {
# 					set_controller = prev
# 					set_owner = prev
# 					# owner = { establish_communications_no_message = event_target:owning_empire }
# 					if = {
# 						limit = { has_building = no }
# 						create_colony = { owner = prev species = owner_main_species }
# 						while = { count = 22 create_pop = { species = owner_main_species } }
# 					}
# 				}
# 				copy_ethos_and_authority = event_target:owning_empire
# 				set_name = random
# 				set_country_flag = perfect_vassal_country
# 			}
# 		}
# 		last_created_country = {
# 			save_event_target_as = new_empire
# 			add_resource = { minerals = 15000 energy = 15000 food = 5000 unity = 15000 influence = 500 alloys = 4000 }
# 			if = { limit = { is_gestalt = no } add_resource = { consumer_goods = 2000 } }
# 			else = { add_resource = { alloys = 1000 minerals = 1000 } }
# 			event_target:owning_empire = {
# 				switch = {
# 					trigger = has_valid_civic
# 					civic_fanatic_purifiers		= { event_target:new_empire = { force_add_civic = civic_fanatic_purifiers } }
# 					civic_hive_devouring_swarm	= { event_target:new_empire = { force_add_civic = civic_hive_devouring_swarm } }
# 					civic_machine_terminator	= { event_target:new_empire = { force_add_civic = civic_machine_terminator } }
# 					civic_machine_assimilator	= { event_target:new_empire = { force_add_civic = civic_machine_assimilator } }
# 					civic_machine_servitor		= { event_target:new_empire = { force_add_civic = civic_machine_servitor } }
# 					civic_criminal_heritage		= { event_target:new_empire = { force_add_civic = civic_criminal_heritage } }
# 					civic_barbaric_despoilers	= { event_target:new_empire = { force_add_civic = civic_barbaric_despoilers } }
# 				}
# 			}
# 			set_subject_of = { who = event_target:owning_empire preset = preset_vassal }
# 			set_relation_flag = { who = event_target:owning_empire flag = perfect_vassal_relation }
# 			copy_techs_from = { target = event_target:owning_empire except = {} }
# 			add_opinion_modifier = { who = event_target:owning_empire modifier = opinion_empire_origine }
# 			add_trust = { who = event_target:owning_empire amount = 100 }
# 			add_intel = { who = event_target:owning_empire amount = 200 }
# 			event_target:owning_empire = { add_intel = { who = event_target:new_empire amount = 200 } }
# 			add_modifier = { modifier = perfect_vassal_boost }
# 			while = { count = 2 create_leader = { class = scientist species = owner_main_species name = random skill = 3 } }
# 			while = { count = 1 create_leader = { class = admiral species = owner_main_species name = random skill = 3 } }
# 			while = { count = 1 create_leader = { class = governor species = owner_main_species name = random skill = 3 } }
# 			random_owned_planet = {
# 				limit = { is_capital = yes }
# 				if = { limit = { planet_size < 25 } set_planet_size = 25 }
# 				set_advanced_colony = yes
# 				solar_system = {
# 					if = {
# 						limit = { exists = starbase }
# 						starbase = {
# 							set_owner = event_target:new_empire
# 							if = {
# 								limit = { has_starbase_size < starbase_starport }
# 								set_starbase_size = starbase_starport
# 								set_starbase_module = { slot = 1 module = shipyard }
# 								set_starbase_module = { slot = 2 module = trading_hub }
# 							}
# 						}
# 					}
# 				}
# 				create_fleet = { effect = { set_owner = event_target:new_empire while = { count = 3 create_ship = { name = random random_existing_design = corvette } } set_location = { target = prev distance = 20 angle = random } } }
# 				while = { count = 2 create_fleet = { effect = { set_owner = event_target:new_empire create_ship = { name = random random_existing_design = colonizer } set_location = { target = prev distance = 20 angle = random } } } }
# 				while = { count = 1 create_fleet = { effect = { set_owner = event_target:new_empire create_ship = { name = random random_existing_design = constructor } set_location = { target = prev distance = 20 angle = random } } } }
# 				while = { count = 1 create_fleet = { effect = { set_owner = event_target:new_empire create_ship = { name = random random_existing_design = science } set_location = { target = prev distance = 20 angle = random } } } }
# 			}
# 		}
# 		event_target:owning_empire = {
# 			every_owned_planet = {
# 				limit = { has_planet_flag = planet_marked_for_handover }
# 				set_controller = event_target:new_empire
# 				set_owner = event_target:new_empire
# 				solar_system = { starbase = { set_owner = event_target:new_empire } }
# 				remove_planet_flag = planet_marked_for_handover
# 			}
# 			every_planet_within_border = {
# 				limit = { has_planet_flag = planet_marked_for_handover }
# 				set_controller = event_target:new_empire
# 				set_owner = event_target:new_empire
# 				solar_system = { starbase = { set_owner = event_target:new_empire } }
# 				create_colony = { owner = event_target:new_empire species = owner_main_species }
# 				remove_planet_flag = planet_marked_for_handover
# 			}
# 		}
# 		event_target:new_empire = {
# 			every_planet_within_border = {
# 				limit = { has_planet_flag = planet_marked_for_handover }
# 				set_controller = prev
# 				set_owner = prev
# 				create_colony = { owner = prev species = owner_main_species }
# 				remove_planet_flag = planet_marked_for_handover
# 			}
# 		}
# 	}
# }

create_navy_fleet_for_subject = {
	create_fleet = {
		settings = { can_upgrade = no can_disband = no can_change_composition = no can_change_leader = yes uses_naval_capacity = no spawn_debris = no }
		effect = {
			set_owner = root
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 1000
			set_fleet_flag = subject_navy_fleet
			if = { limit = { event_target:VassalNavyInvestmentTarget = { has_country_flag = subject_navy_investment_1 } } event_target:VassalNavyInvestmentTarget = { set_variable = { which = subject_navy_amount value = 24 } } }
			else_if = { limit = { event_target:VassalNavyInvestmentTarget = { has_country_flag = subject_navy_investment_2 } } event_target:VassalNavyInvestmentTarget = { set_variable = { which = subject_navy_amount value = 48 } } }
			else_if = { limit = { event_target:VassalNavyInvestmentTarget = { has_country_flag = subject_navy_investment_3 } } event_target:VassalNavyInvestmentTarget = { set_variable = { which = subject_navy_amount value = 96 } } }
			else_if = { limit = { event_target:VassalNavyInvestmentTarget = { has_country_flag = subject_navy_investment_4 } } event_target:VassalNavyInvestmentTarget = { set_variable = { which = subject_navy_amount value = 192 } } }
			else_if = { limit = { event_target:VassalNavyInvestmentTarget = { has_country_flag = subject_navy_investment_5 } } event_target:VassalNavyInvestmentTarget = { set_variable = { which = subject_navy_amount value = 384 } } }
			while = { count = 4 create_navy_ships_for_subject = yes }
		}
	}
}

create_navy_ships_for_subject = {
	while = {
		limit = { event_target:VassalNavyInvestmentTarget = { check_variable = { which = subject_navy_amount value >= 1 } } }
		random_list = {
			55 = { create_ship = { name = random random_existing_design = corvette } event_target:VassalNavyInvestmentTarget = { change_variable = { which = subject_navy_amount value = -1 } } }
			25 = { modifier = { factor = 0 ROOT = { NOT = { has_technology = tech_destroyers } } } modifier = { factor = 0 event_target:VassalNavyInvestmentTarget = { check_variable = { which = subject_navy_amount value < 2 } } } create_ship = { name = random random_existing_design = destroyer } event_target:VassalNavyInvestmentTarget = { change_variable = { which = subject_navy_amount value = -2 } } }
			14 = { modifier = { factor = 0 ROOT = { NOT = { has_technology = tech_cruisers } } } modifier = { factor = 0 event_target:VassalNavyInvestmentTarget = { check_variable = { which = subject_navy_amount value < 4 } } } create_ship = { name = random random_existing_design = cruiser } event_target:VassalNavyInvestmentTarget = { change_variable = { which = subject_navy_amount value = -4 } } }
			5 = { modifier = { factor = 0 ROOT = { NOT = { has_technology = tech_battleships } } } modifier = { factor = 0 event_target:VassalNavyInvestmentTarget = { check_variable = { which = subject_navy_amount value < 8 } } } create_ship = { name = random random_existing_design = battleship } event_target:VassalNavyInvestmentTarget = { change_variable = { which = subject_navy_amount value = -8 } } }
			1 = { modifier = { factor = 0 ROOT = { NOT = { has_technology = tech_titans } } } modifier = { factor = 0 event_target:VassalNavyInvestmentTarget = { check_variable = { which = subject_navy_amount value < 16 } } } create_ship = { name = random random_existing_design = titan } event_target:VassalNavyInvestmentTarget = { change_variable = { which = subject_navy_amount value = -16 } } }
		}
	}
}
