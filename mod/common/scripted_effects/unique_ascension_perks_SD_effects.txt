######################################
#									 #
######### Space Domestication #########
#									 #
######################################

# This = master country
create_domestication_spaceborn_alien_country = {
	if = {
		limit = { NOT = { exists = event_target:main_country } }
		save_event_target_as = main_country
	}
	if = {
		limit = { NOT = { exists = event_target:domesticated_spaceborn_alien } }
		if = {
			limit = { any_relation = { is_country_type = domesticated_spaceborn_alien has_relation_flag = { who = prev flag = domesticated_spaceborn_alien } } }
			random_relation = {
				limit = { is_country_type = domesticated_spaceborn_alien has_relation_flag = { who = prev flag = domesticated_spaceborn_alien } }
				save_event_target_as = domesticated_spaceborn_alien
			}
		}
		# else_if = {
		# 	limit = {
		# 		is_overlord = yes
		# 		any_subject = { is_country_type = domesticated_spaceborn_alien has_relation_flag = { who = prev flag = domesticated_spaceborn_alien } }
		# 	}
		# 	random_subject = {
		# 		limit = { is_country_type = domesticated_spaceborn_alien has_relation_flag = { who = prev flag = domesticated_spaceborn_alien } }
		# 		save_event_target_as = domesticated_spaceborn_alien
		# 	}
		# }
		else_if = {
			limit = { any_country = { is_country_type = domesticated_spaceborn_alien has_relation_flag = { who = prev flag = domesticated_spaceborn_alien } } }
			random_country = {
				limit = { is_country_type = domesticated_spaceborn_alien has_relation_flag = { who = prev flag = domesticated_spaceborn_alien } }
				save_event_target_as = domesticated_spaceborn_alien
			}
		}
		else = {
			create_country = {
				name = "Domesticated Spaceborn Aliens"
				type = domesticated_spaceborn_alien
				flag = {
					icon = { category = "zoological" file = "flag_zoological_1.dds" }
					background= { category = "backgrounds" file = "00_solid.dds" }
					colors = { "black" "black" "null" "null" }
				}
				auto_delete = no
				day_zero_contact = no
				ignore_initial_colony_error = yes
				effect = {
					set_country_flag = first_alien_life
					set_country_flag = has_encountered_other_empire
					every_country = {
						limit = { is_country_type_with_subjects = yes has_communications = event_target:main_country }
						establish_communications_no_message = prev
					}
					add_modifier = { modifier = domesticated_aliens }
					save_event_target_as = domesticated_spaceborn_alien
					set_country_flag = domesticated_spaceborn_alien
					set_relation_flag = { who = event_target:main_country flag = domesticated_spaceborn_alien }
					set_faction_hostility = { target = event_target:main_country set_hostile = no set_neutral = no set_friendly = yes }
					# Disabled in v.3.8.4 due unsolvable side effects aka federation (infinite joing/re-joining)
					# if = { limit = { event_target:main_country = { OR = { is_ai = no is_overlord = yes } } }
					# 	set_subject_of = { who = event_target:main_country preset = preset_space_domestication }
					# }
					add_trust = { amount = 95 who = event_target:main_country }
					add_intel = { amount = 95 who = event_target:main_country }
					add_opinion_modifier = { who = event_target:main_country modifier = opinion_enlightened_us }
					add_opinion_modifier = { who = event_target:main_country modifier = opinion_nurtured }
					random_agreement = {
						limit = { is_owned_by = event_target:main_country target = { is_same_empire = prev } }
						add_loyalty = 95
					}
					add_modifier = { modifier = pledged_allegiance }
					add_modifier = { modifier = pledge_loyalty_2 }
					event_target:main_country = {
						establish_communications_no_message = prev
						switch = { trigger = has_country_flag
							space_domestication_tiyanki	= { prev = { set_country_flag = domesticated_spaceborn_alien_tiyanki } }
							space_domestication_amoeba	= { prev = { set_country_flag = domesticated_spaceborn_alien_amoeba } }
							space_domestication_crystal	= { prev = { set_country_flag = domesticated_spaceborn_alien_crystal } }
							space_domestication_cloud	= { prev = { set_country_flag = domesticated_spaceborn_alien_cloud } }
							space_domestication_drone	= { prev = { set_country_flag = domesticated_spaceborn_alien_drone } }
						}
					}
				}
			}
		}
	}
	if = {
		limit = { NOT = { exists = event_target:spawn_location } }
		if = {
			limit = {
				any_system_within_border = {
					is_capital_system = no
					NAND = { exists = sector any_system_colony = { is_sector_capital = yes } }
				}
			}
			random_system_within_border = {
				limit = {
					is_capital_system = no
					NAND = { exists = sector any_system_colony = { is_sector_capital = yes } }
				}
				random_system_planet = {
					limit = { is_colony = no }
					weights = { base = 1 modifier = { add = 50 has_planet_flag = domesticated_alien_home } }
					save_event_target_as = spawn_location
				}
			}
		}
		else = {
			get_capital_planet = yes
			event_target:capital_planet = { save_event_target_as = spawn_location } # This will destroy the core sector, so take another system
			# Compare create_defense_sentinels_country
			random_planet_within_border = {
				limit = {
					NOR = {
						is_colony = yes
						is_in_frontier_space = yes
						is_sector_capital = yes
						solar_system = { is_capital_system = yes }
					}
				}
				weights = { base = 1 modifier = { add = 50 has_planet_flag = domesticated_alien_home } }
				save_event_target_as = spawn_location
			}
		}
		switch = { trigger = has_country_flag
			space_domestication_tiyanki	= { if = { limit = { any_planet_within_border = { merg_is_gas_giant = yes			has_planet_flag = domesticated_alien_home } } random_planet_within_border = { limit = { merg_is_gas_giant = yes			has_planet_flag = domesticated_alien_home } save_event_target_as = spawn_location } } else = { event_target:spawn_location.solar_system = { spawn_planet = { class = pc_gas_giant	location = prev has_ring = no init_effect = { set_name = "NAME_TIYANKI_HOMEWORLD"	save_event_target_as = spawn_location set_planet_flag = domesticated_alien_home set_planet_size = 50 clear_deposits = yes set_surveyed = { surveyed = yes surveyor = prev } set_controller = prev } } } } }	# set_planet_flag = domesticated_alien_home_tiyanki
			space_domestication_amoeba	= { if = { limit = { any_planet_within_border = { merg_is_toxic = yes				has_planet_flag = domesticated_alien_home } } random_planet_within_border = { limit = { merg_is_toxic = yes				has_planet_flag = domesticated_alien_home } save_event_target_as = spawn_location } } else = { event_target:spawn_location.solar_system = { spawn_planet = { class = pc_toxic		location = prev has_ring = no init_effect = { set_name = "NAME_AMEOBA_HOMEWORLD"	save_event_target_as = spawn_location set_planet_flag = domesticated_alien_home set_planet_size = 40 clear_deposits = yes set_surveyed = { surveyed = yes surveyor = prev } set_controller = prev } } } } }	# set_planet_flag = domesticated_alien_home_amoeba
			space_domestication_crystal	= { if = { limit = { any_planet_within_border = { merg_is_frozen = yes				has_planet_flag = domesticated_alien_home } } random_planet_within_border = { limit = { merg_is_frozen = yes			has_planet_flag = domesticated_alien_home } save_event_target_as = spawn_location } } else = { event_target:spawn_location.solar_system = { spawn_planet = { class = pc_frozen		location = prev has_ring = no init_effect = { set_name = "NAME_CRYSTAL_HOMEWORLD"	save_event_target_as = spawn_location set_planet_flag = domesticated_alien_home set_planet_size = 40 clear_deposits = yes set_surveyed = { surveyed = yes surveyor = prev } set_controller = prev } } } } }	# set_planet_flag = domesticated_alien_home_crystal
			space_domestication_cloud	= { if = { limit = { any_planet_within_border = { is_planet_class = pc_black_hole	has_planet_flag = domesticated_alien_home } } random_planet_within_border = { limit = { is_planet_class = pc_black_hole	has_planet_flag = domesticated_alien_home } save_event_target_as = spawn_location } } else = { event_target:spawn_location.solar_system = { spawn_planet = { class = pc_black_hole	location = prev has_ring = no init_effect = { set_name = "NAME_CLOUD_HOMEWORLD"		save_event_target_as = spawn_location set_planet_flag = domesticated_alien_home clear_deposits = yes set_surveyed = { surveyed = yes surveyor = prev } set_controller = prev } } } } }						# set_planet_flag = domesticated_alien_home_cloud
			space_domestication_drone	= { if = { limit = { any_planet_within_border = { is_planet_class = pc_asteroid		has_planet_flag = domesticated_alien_home } } random_planet_within_border = { limit = { is_planet_class = pc_asteroid	has_planet_flag = domesticated_alien_home } save_event_target_as = spawn_location } } else = { event_target:spawn_location.solar_system = { spawn_planet = { class = pc_asteroid	location = prev has_ring = no init_effect = { set_name = "NAME_DRONE_HOMEWORLD"		save_event_target_as = spawn_location set_planet_flag = domesticated_alien_home set_planet_size = 25 clear_deposits = yes set_surveyed = { surveyed = yes surveyor = prev } set_controller = prev } } } } }	# set_planet_flag = domesticated_alien_home_drone
		}
	}
	event_target:domesticated_spaceborn_alien = {
		prev = {
			sync_subjects_virtual_relation = yes
			add_trust = { amount = 5 who = prev }
		}
		add_trust = { amount = 5 who = prev }
		random_agreement = {
			limit = { is_owned_by = prevprev target = { is_same_empire = prev } }
			add_loyalty = 10
		}
		create_fleet = {
			name = "Domesticated Fertilized Aliens"
			settings = { spawn_debris = no is_boss = yes }
			effect = {
				set_owner = prev
				prev = {
					switch = { trigger = has_country_flag
						domesticated_spaceborn_alien_tiyanki	= { prev = { create_ship = { name = "" design = "Domesticated Mother Tiyanki" } } }
						domesticated_spaceborn_alien_amoeba		= { prev = { while = { count = 25 create_ship = { name = "" design = "Demosticated Amoeba Mother" } } } }
						domesticated_spaceborn_alien_crystal	= { prev = { create_ship = { name = "" design = "Domesticated Mother Crystal" } } }
						domesticated_spaceborn_alien_cloud		= { prev = { create_ship = { name = "" design = "Domesticated Mother Cloud" } } }
						domesticated_spaceborn_alien_drone		= { prev = { create_ship = { name = "" design = "Reprogrammed Ancient Replicator Drone" } } }
					}
				}
				set_location = { target = event_target:spawn_location distance = 250 angle = random }
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 5000
				set_formation_scale = 4.0
				set_fleet_flag = domesticated_fleet
				set_fleet_flag = domesticated_mother_fleet
			}
		}
		# last_created_fleet = { }
	}
}

resources_gathering_protocol_paying = {
	switch = { trigger = has_country_flag
		space_domestication_tiyanki	= { add_resource = { food = -800 } }
		space_domestication_amoeba	= { add_resource = { food = -800 } }
		space_domestication_crystal	= { add_resource = { minerals = -800 } }
		space_domestication_cloud	= { add_resource = { energy = -800 } }
		space_domestication_drone	= { add_resource = { energy = -800 } }
	}
}

resources_gathering_protocol = {
	random_planet_within_border = {
		limit = { has_planet_flag = domesticated_alien_home }
		if = {
			limit = { ROOT = { has_country_flag = space_domestication_tiyanki } merg_is_gas_giant = yes }
			random_list = {
				10 = { add_deposit = d_food_v2_7 }
				10 = { add_deposit = d_food_v2_8 }
				10 = { add_deposit = d_food_v2_9 }
				10 = { add_deposit = d_food_v2_10 }
				5 = { modifier = { factor = 0 NOT = { ROOT = { has_technology = tech_mine_exotic_gases } } } add_deposit = d_exotic_gases_v2_2 }
				5 = { modifier = { factor = 0 NOT = { ROOT = { has_technology = tech_mine_exotic_gases } } } add_deposit = d_exotic_gases_v2_3 }
			}
		}
		else_if = {
			limit = { ROOT = { has_country_flag = space_domestication_amoeba } merg_is_toxic = yes }
			random_list = {
				10 = { add_deposit = d_energy_v2_7 }
				10 = { add_deposit = d_energy_v2_8 }
				10 = { add_deposit = d_energy_v2_9 }
				10 = { add_deposit = d_energy_v2_10 }
				5 = { modifier = { factor = 0 NOT = { ROOT = { has_technology = tech_mine_volatile_motes } } } add_deposit = d_volatile_motes_v2_2 }
				5 = { modifier = { factor = 0 NOT = { ROOT = { has_technology = tech_mine_volatile_motes } } } add_deposit = d_volatile_motes_v2_3 }
			}
		}
		else_if = {
			limit = { ROOT = { has_country_flag = space_domestication_crystal } merg_is_frozen = yes }
			random_list = {
				10 = { add_deposit = d_minerals_v2_7 }
				10 = { add_deposit = d_minerals_v2_8 }
				10 = { add_deposit = d_minerals_v2_9 }
				10 = { add_deposit = d_minerals_v2_10 }
				5 = { modifier = { factor = 0 NOT = { ROOT = { has_technology = tech_mine_rare_crystals } } } add_deposit = d_rare_crystals_v2_2 }
				5 = { modifier = { factor = 0 NOT = { ROOT = { has_technology = tech_mine_rare_crystals } } } add_deposit = d_rare_crystals_v2_3 }
			}
		}
		else_if = {
			limit = { ROOT = { has_country_flag = space_domestication_cloud } is_planet_class = pc_black_hole }
			random_list = {
				10 = { add_deposit = d_energy_v2_7 }
				10 = { add_deposit = d_energy_v2_8 }
				10 = { add_deposit = d_energy_v2_9 }
				10 = { add_deposit = d_energy_v2_10 }
			}
		}
		else_if = {
			limit = { ROOT = { has_country_flag = space_domestication_drone } is_planet_class = pc_asteroid }
			random_list = {
				10 = { add_deposit = d_minerals_v2_7 }
				10 = { add_deposit = d_minerals_v2_8 }
				10 = { add_deposit = d_minerals_v2_9 }
				10 = { add_deposit = d_minerals_v2_10 }
				5 = { add_deposit = d_alloys_v2_4 }
				5 = { add_deposit = d_alloys_v2_5 }
			}
		}
	}
}

research_assistance_protocol = {
	random_planet_within_border = {
		limit = { has_planet_flag = domesticated_alien_home }
		if = {
			limit = { ROOT = { has_country_flag = space_domestication_tiyanki } merg_is_gas_giant = yes }
			random_list = {
				10 = { add_deposit = d_society_7 }
				10 = { add_deposit = d_society_8 }
				10 = { add_deposit = d_society_9 }
				10 = { add_deposit = d_society_10 }
			}
		}
		else_if = {
			limit = { ROOT = { has_country_flag = space_domestication_amoeba } merg_is_toxic = yes }
			random_list = {
				10 = { add_deposit = d_society_7 }
				10 = { add_deposit = d_society_8 }
				10 = { add_deposit = d_society_9 }
				10 = { add_deposit = d_society_10 }
			}
		}
		else_if = {
			limit = { ROOT = { has_country_flag = space_domestication_crystal } merg_is_frozen = yes }
			random_list = {
				10 = { add_deposit = d_physics_7 }
				10 = { add_deposit = d_physics_8 }
				10 = { add_deposit = d_physics_9 }
				10 = { add_deposit = d_physics_10 }
			}
		}
		else_if = {
			limit = { ROOT = { has_country_flag = space_domestication_cloud } is_planet_class = pc_black_hole }
			random_list = {
				10 = { add_deposit = d_physics_7 }
				10 = { add_deposit = d_physics_8 }
				10 = { add_deposit = d_physics_9 }
				10 = { add_deposit = d_physics_10 }
				5 = { modifier = { factor = 0 NOT = { ROOT = { has_technology = tech_mine_dark_matter } } } add_deposit = d_dark_matter_deposit_1 }
				5 = { modifier = { factor = 0 NOT = { ROOT = { has_technology = tech_mine_dark_matter } } } add_deposit = d_dark_matter_deposit_2 }
			}
		}
		else_if = {
			limit = { ROOT = { has_country_flag = space_domestication_drone } is_planet_class = pc_asteroid }
			random_list = {
				10 = { add_deposit = d_engineering_7 }
				10 = { add_deposit = d_engineering_8 }
				10 = { add_deposit = d_engineering_9 }
				10 = { add_deposit = d_engineering_10 }
				3 = { modifier = { factor = 0 NOT = { ROOT = { has_technology = tech_mine_living_metal } } } add_deposit = d_living_metal_deposit }
			}
		}
	}
}

create_leviathan_master_country = {
	if = {
		limit = { any_country = { has_country_flag = leviathan_master_country } }
		random_country = {
			limit = { has_country_flag = leviathan_master_country }
			save_event_target_as = leviathan_master_country
		}
	}
	else = {
		create_country = {
			name = "Leviathan Master"
			type = leviathan_master
			flag = {
				icon = { category = "zoological" file = "flag_zoological_5.dds" }
				background= { category = "backgrounds" file = "00_solid.dds" }
				colors = { "red" "red" "null" "null" }
			}
			effect = {
				save_event_target_as = leviathan_master_country
				set_country_flag = leviathan_master_country
				every_country = {
					limit = { is_country_type_with_subjects = yes }
					establish_communications_no_message = prev
				}
			}
		}
	}
}

# leviathan_clear_summoning_flags = {
# 	remove_country_flag = summoning_leviathan
# 	remove_country_flag = summoning_leviathan_drake
# 	remove_country_flag = summoning_leviathan_stellarite
# 	remove_country_flag = summoning_leviathan_spectre
# 	remove_country_flag = summoning_leviathan_dreadnought
# 	remove_country_flag = summoning_leviathan_scavenger
# 	remove_country_flag = summoning_leviathan_matriarch
# 	remove_country_flag = summoning_leviathan_voidspawn
# 	remove_country_flag = summoning_leviathan_machine
# 	remove_country_flag = summoning_leviathan_horror
# 	remove_country_flag = summoning_leviathan_fortress
# 	remove_country_flag = summoning_leviathan_present
# }

leviathan_master_enraged_leviathan = {
	random_owned_planet = { save_event_target_as = destination_location }
	random_rim_system = { star = { save_event_target_as = spawn_location } }
	event_target:leviathan_master_country = {
		create_fleet = {
			name = summoned_leviathan
			settings = { spawn_debris = no is_boss = yes }
			effect = {
				set_owner = event_target:leviathan_master_country
				random_list = {
					10 = { create_ship = { name = NAME_Enraged_Leviathan design = NAME_Sum_Ether_Drake } }
					10 = { create_ship = { name = NAME_Enraged_Leviathan design = NAME_Sum_Stellarite_Devourer } }
					10 = { create_ship = { name = NAME_Enraged_Leviathan design = NAME_Sum_Spectral_Wraith } }
					10 = { create_ship = { name = NAME_Enraged_Leviathan design = NAME_Sum_Automated_Dreadnought graphical_culture = "npf_01" } }
					10 = { create_ship = { name = NAME_Enraged_Leviathan design = NAME_Sum_Scavenger_Bot } }
					10 = { create_ship = { name = NAME_Enraged_Leviathan design = NAME_Sum_Tiyanki_Matriarch } }
					10 = { create_ship = { name = NAME_Enraged_Leviathan design = NAME_Sum_Voidspawn } }
					10 = { create_ship = { name = NAME_Enraged_Leviathan design = NAME_Sum_Infinity_Machine graphical_culture = "techno" } }
				}
				set_location = { target = event_target:spawn_location distance = 5 angle = random }
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 1000
			}
		}
		last_created_fleet = {
			auto_move_to_planet = { target = event_target:destination_location clear_auto_move_on_arrival = yes }
		}
	}
}
