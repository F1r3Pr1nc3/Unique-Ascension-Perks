#######################################
#									 #
######## Recycling Expeditions ########
#									 #
#######################################

perform_recycling_expedition = {
	switch = {
		trigger = is_ship_size	
		# Default Empire
		science							= { ROOT = { add_resource = { minerals = 80 alloys = 20 } break = yes } }
		constructor						= { ROOT = { add_resource = { minerals = 80 alloys = 20 } break = yes } }
		colonizer						= { ROOT = { add_resource = { minerals = 80 alloys = 20 } break = yes } }
		sponsored_colonizer				= { ROOT = { add_resource = { minerals = 80 alloys = 20 } break = yes } }
		transport						= { ROOT = { add_resource = { minerals = 80 alloys = 20 } break = yes } }
		corvette						= { ROOT = { add_resource = { minerals = 80 alloys = 20 } break = yes } }
		destroyer						= { ROOT = { add_resource = { minerals = 160 alloys = 40 } break = yes } }
		cruiser							= { ROOT = { add_resource = { minerals = 320 alloys = 80 } break = yes } }
		battleship						= { ROOT = { add_resource = { minerals = 640 alloys = 160 } break = yes } }
		titan							= { ROOT = { add_resource = { minerals = 1080 alloys = 320 } break = yes } }
		colossus						= { ROOT = { add_resource = { minerals = 2160 alloys = 640 } break = yes } }
		juggernaut 						= { ROOT = { add_resource = { minerals = 2160 alloys = 640 } break = yes } }
		crisis_corvette 				= { ROOT = { add_resource = { minerals = 80 alloys = 20 } break = yes } }
		crisis_destroyer 				= { ROOT = { add_resource = { minerals = 160 alloys = 40 } break = yes } }
		crisis_cruiser 					= { ROOT = { add_resource = { minerals = 320 alloys = 80 } break = yes } }
		star_eater 						= { ROOT = { add_resource = { minerals = 2160 alloys = 640 } break = yes } }
		military_station_small		  = { ROOT = { add_resource = { minerals = 160 alloys = 40 } break = yes } }
		military_station_medium			= { ROOT = { add_resource = { minerals = 320 alloys = 80 } break = yes } }
		military_station_large			= { ROOT = { add_resource = { minerals = 640 alloys = 160 } break = yes } }
		ion_cannon						= { ROOT = { add_resource = { minerals = 640 alloys = 160 } break = yes } }
		mining_station					= { ROOT = { add_resource = { minerals = 25 } break = yes } }
		research_station				= { ROOT = { add_resource = { minerals = 25 } break = yes } }
		observation_station				= { ROOT = { add_resource = { minerals = 25 } break = yes } }
		# Pirates
		pirate_corvette					= { ROOT = { add_resource = { minerals = 80 alloys = 20 } break = yes } }
		pirate_destroyer				= { ROOT = { add_resource = { minerals = 160 alloys = 40 } break = yes } }
		pirate_cruiser					= { ROOT = { add_resource = { minerals = 320 alloys = 80 } break = yes } }
		galleon							= { ROOT = { add_resource = { minerals = 1000 alloys = 160 } break = yes } }
		pirate_station					= { ROOT = { add_resource = { minerals = 160 alloys = 40 } break = yes } }
		# Marauders
		marauder_corvette				= { ROOT = { add_resource = { minerals = 80 alloys = 20 } break = yes } }
		marauder_destroyer				= { ROOT = { add_resource = { minerals = 160 alloys = 40 } break = yes } }
		marauder_cruiser				= { ROOT = { add_resource = { minerals = 320 alloys = 80 } break = yes } }
		marauder_galleon				= { ROOT = { add_resource = { minerals = 1000 alloys = 160 } break = yes } }
		marauder_station				= { ROOT = { add_resource = { minerals = 160 alloys = 40 } break = yes } }
		marauder_void_dwelling			= { ROOT = { add_resource = { minerals = 640 alloys = 160 } break = yes } }
		# Fallen Empire
		massive_ship_fallen_empire		= { ROOT = { add_resource = { minerals = 1080 alloys = 320 } break = yes } }
		large_ship_fallen_empire		= { ROOT = { add_resource = { minerals = 640 alloys = 160 } break = yes } }
		small_ship_fallen_empire		= { ROOT = { add_resource = { minerals = 160 alloys = 40 } break = yes } }				
		# Ancient Drone
		ancient_mining_drone			= { ROOT = { add_resource = { minerals = 40 alloys = 10 } break = yes } }
		ancient_corvette				= { ROOT = { add_resource = { minerals = 80 alloys = 20 } break = yes } }
		ancient_destroyer				= { ROOT = { add_resource = { minerals = 160 alloys = 40 } break = yes } }			
		# Contingency
		small_ship_ai					= { ROOT = { add_resource = { minerals = 160 alloys = 40 } break = yes } }
		large_ship_ai					= { ROOT = { add_resource = { minerals = 640 alloys = 160 } break = yes } }
		military_station_small_ai		= { ROOT = { add_resource = { minerals = 160 alloys = 40 } break = yes } }
		military_station_large_ai		= { ROOT = { add_resource = { minerals = 640 alloys = 160 } break = yes } }
		core_ai							= { ROOT = { add_resource = { minerals = 4320 alloys = 1280 } break = yes } }
		final_core_ai					= { ROOT = { add_resource = { minerals = 8640 alloys = 2560 } break = yes } }
		construction_ship_ai			= { ROOT = { add_resource = { minerals = 80 alloys = 20 } break = yes } }
		colony_ship_ai					= { ROOT = { add_resource = { minerals = 80 alloys = 20 } break = yes } }
		transport_ship_ai				= { ROOT = { add_resource = { minerals = 80 alloys = 20 } break = yes } }		
		# Leviathans
		npc_warship_01					= { ROOT = { add_resource = { minerals = 4320 alloys = 1280 } break = yes } }
	}
}

perform_recover_ship_check = {
	random_list = {
		35 = {
			switch = {
				trigger = is_ship_size
				corvette		= { ROOT = { change_variable = { which = ship_corvette_recovered value = 1 } break = yes } }
				destroyer		= { ROOT = { change_variable = { which = ship_destroyer_recovered value = 1 } break = yes } }
				cruiser			= { ROOT = { change_variable = { which = ship_cruiser_recovered value = 1 } break = yes } }
				battleship		= { ROOT = { change_variable = { which = ship_battleship_recovered value = 1 } break = yes } }
				titan			= { ROOT = { change_variable = { which = ship_titan_recovered value = 1 } break = yes } }
			}
		}
		65 = {}
	}
}

perform_recovery_fleet = {
	random_system_within_border = {
		limit = { has_star_flag = recycle_fleet_spawn_system }
		star = { save_event_target_as = recovery_fleet_position }
	}
	create_fleet = {
		name = "Recovered Fleet"
		settings = { spawn_debris = no }
		effect = {
			set_owner = prev			
			while = { 
				limit = { ROOT = { check_variable = { which = ship_corvette_recovered value >= 1 } } } 
				if = { limit = { ROOT = { has_country_flag = ap_recycling_drones_project_upgrade } } create_ship = { name = random random_existing_design = corvette } } else = { create_ship = { name = random design = "Standard Basic Corvette" } } 			
				ROOT = { change_variable = { which = ship_corvette_recovered value = -1 } } 
			}
			while = { 
				limit = { ROOT = { check_variable = { which = ship_destroyer_recovered value >= 1 } } } 
				if = { limit = { ROOT = { has_country_flag = ap_recycling_drones_project_upgrade } } create_ship = { name = random random_existing_design = destroyer } } else = { create_ship = { name = random design = "Standard Basic Destroyer" } } 		
				ROOT = { change_variable = { which = ship_destroyer_recovered value = -1 } } 
			}
			while = { 
				limit = { ROOT = { check_variable = { which = ship_cruiser_recovered value >= 1 } } } 
				if = { limit = { ROOT = { has_country_flag = ap_recycling_drones_project_upgrade } } create_ship = { name = random random_existing_design = cruiser } } else = { create_ship = { name = random design = "Standard Basic Cruiser" } } 			
				ROOT = { change_variable = { which = ship_cruiser_recovered value = -1 } } 
			}
			while = { 
				limit = { ROOT = { check_variable = { which = ship_battleship_recovered value >= 1 } } } 
				if = { limit = { ROOT = { has_country_flag = ap_recycling_drones_project_upgrade } } create_ship = { name = random random_existing_design = battleship } } else = { create_ship = { name = random design = "Standard Basic Battleship" } }		
				ROOT = { change_variable = { which = ship_battleship_recovered value = -1 } }
			}
			while = { 
				limit = { ROOT = { check_variable = { which = ship_titan_recovered value >= 1 } } } 				
				if = { limit = { ROOT = { has_country_flag = ap_recycling_drones_project_upgrade } } create_ship = { name = random random_existing_design = titan } } else = { create_ship = { name = random design = "Standard Basic Titan" } }
				ROOT = { change_variable = { which = ship_titan_recovered value = -1 } } 			
			}
			set_location = { target = event_target:recovery_fleet_position distance = 8 angle = random }
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 1000
			set_fleet_flag = recovery_fleet
		}
	}
}