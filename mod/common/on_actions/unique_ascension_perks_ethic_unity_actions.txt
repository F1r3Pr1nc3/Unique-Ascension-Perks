
# This = owner of ship 1 (combatant)
# From = owner of ship 2 (destroyed)
# fromfrom = ship 1
# fromfromfrom = ship 2
on_ship_destroyed_perp = {
	events = { EthicUnityEvents.1 }
}

# No scope, like on_game_start
on_yearly_pulse = {
	events = { EthicUnityEvents.100 }
}

# A country has increased the level of a tech, use last_increased_tech trigger to check tech and level.
# This = Country
on_tech_increased = {
	events = { EthicUnityEvents.3 }
}

# Called when an election ends.
# scope: country
on_election_ended = {
	events = { EthicUnityEvents.5 }
}

on_colony_1_year_old = { events = { EthicUnityEvents.9 } }
on_colony_2_years_old = { events = { EthicUnityEvents.9 } }
on_colony_3_years_old = { events = { EthicUnityEvents.9 } }
on_colony_4_years_old = { events = { EthicUnityEvents.9 } }
on_colony_5_years_old = { events = { EthicUnityEvents.9 } }
on_colony_6_years_old = { events = { EthicUnityEvents.9 } }
on_colony_7_years_old = { events = { EthicUnityEvents.9 } }
on_colony_8_years_old = { events = { EthicUnityEvents.9 } }
on_colony_9_years_old = { events = { EthicUnityEvents.9 } }
on_colony_10_years_old = { events = { EthicUnityEvents.9 } }

# This = construction ship
# From = planet it is built on
# Fires when construction is complete,
# Immediately before station is created.
on_building_research_station = {
	events = { EthicUnityEvents.16 }
}

# This = construction ship
# From = planet it is built on
# Fires when construction is complete,
# Immediately before station is created.
on_building_outpost_station = {
	events = { EthicUnityEvents.17 }
}

# A pop has finished growing
# This = Planet scope
# From = Country
# fromfrom = Pop
on_pop_grown = {
	events = { EthicUnityEvents.11 }
}

# A pop has finished assembling
# This = Planet scope
# From = Country
# fromfrom = Pop
on_pop_assembled = {
	events = { EthicUnityEvents.18 }
}

# Triggers country_event for the attacker upon victory.
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# fromfrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# The planet controller; e.g. spawned monster armies.
# Are attackers, but if they win and the player attempts.
# To retake the planet, the player is the attacker.
on_planet_attackers_win = {
	events = { EthicUnityEvents.19 }
}

# Triggers country_event for the defender upon victory.
# Root = country, planet owner
# From = country, attack leader
# fromfrom = planet
on_planet_defenders_win = {
	events = { EthicUnityEvents.20 }
}

# A ship has surveyed a planet.
# Scope = Ship
# From = Planet
on_survey = {
	events = { EthicUnityEvents.21 }
}

# A ship is done surveying the last unsurveyed planet in a system
# Scope = ship
# From = system
on_system_survey_ship ={
	events = { EthicUnityEvents.21 }
}

# A planet has been colonized.
# Scope = Planet
on_colonized = {
	events = { EthicUnityEvents.22 }
}

# This = owner of fleet 1 (winner)
# From = owner of fleet 2 (loser)
# fromfrom = fleet 1
# fromfromfrom = fleet 2
on_space_battle_won ={
	events = { EthicUnityEvents.23 }
}

# This = construction ship
# From = planet it is built on
# Fires when construction is complete,
# Immediately before station is created.
on_building_observation_station = {
	events = { EthicUnityEvents.24 }
}

# This = country
# From = opponent war leader
on_entering_war = {
	events = { EthicUnityEvents.25 }
}

# This = Planet scope
# From = Country
# fromfrom = Pop
on_pop_purged = {
	events = { EthicUnityEvents.27 }
}

# Executed right before a country has established communications with another country.
# This = Country which established the communications
# From = Country which communications were established with
on_pre_communications_established = {
	events = { EthicUnityEvents.28 }
}

# A ship has been built
# Root = Ship
# From = Planet
on_ship_built = {
	events = { EthicUnityEvents.31 }
}

# A ship has been upgraded
# Root = Ship
on_ship_upgraded = {
	events = { EthicUnityEvents.32 }
}

# A war has ended
# Root = Loser
# From = Main Winner
on_war_ended = {
	events = { EthicUnityEvents.33 }
}

# This = Country
# From = Species ( Post Modification )
on_modification_complete = {
	events = { EthicUnityEvents.34 }
}

# An army construction has been completed.
# This = Planet
# From = Army
on_army_recruited = {
	events = { EthicUnityEvents.35 }
}

# A war has been won
# Root = Winner Warleader
# From = Loser Warleader
# fromfrom = War
on_war_won = {
	events = { EthicUnityEvents.36 }
}

# Fired whenever a new owner is set for a planet, and the planet was aggressively conquered.
# Fired in ADDITION to on_planet_transfer.
# From = Country scope (new owner)
# This = Planet scope
on_planet_conquer = {
	events = { EthicUnityEvents.38 }
}

# This = Country scope
on_join_alliance = {
	events = { EthicUnityEvents.39 }
}

# A Megastructure has been built
# Root = Country
# From = Megastructure
# fromfrom = System
# fromfromfrom = Fleet
on_megastructure_built ={
	events = { EthicUnityEvents.40 }
}

# A Megastructure has been upgraded
# Root = Country
# From = Megastructure
# fromfrom = System
on_megastructure_upgraded = {
	events = { EthicUnityEvents.40 }
}

# Called when an election starts.
# scope: country
# on_election_started = {
# 	events = {
# 		EthicUnityEvents.41 # v3.3 makes no sense anymore due self loop
# 	}
# }
