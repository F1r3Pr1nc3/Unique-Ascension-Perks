namespace = UniqueAscensionPerksEvents

######################################
#									 #
######### Deep Space Scanners #########
#									 #
######################################
# v3.3 decrease % to physics science
# TODO
# It not working properly because AI probably gonna research all anomalies in galaxy, so... you cant reach new of them because they all already gone.
# AE is also not working with vanilla relics and archaeologicals, probably because of flags. Like, you cant find by DSS omnicodex if other empire own it or find Planetary machine with anomaly. It also not working with custom relics just because.
country_event = {
	id = UniqueAscensionPerksEvents.440
	title = "ap_deep_scanner"
	desc = "ap_deep_scanner_desc"
	show_sound = event_laboratory_sound
	location = capital_scope
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = deep_scanner_room }
	is_triggered_only = yes
	option = { name = EXCELLENT add_research_option = tech_deep_scanner }
}

# Remember Notify from decision_deep_scanner
planet_event = {
	id = UniqueAscensionPerksEvents.441
	title = "UniqueAscensionPerksEvents.441.Name"
	desc = "UniqueAscensionPerksEvents.441.Desc"
	show_sound = event_laboratory_sound
	picture = GFX_evt_deep_scanner
	location = root # event_target:deep_scanner_planet
	# hide_window = yes
	is_triggered_only = yes
	auto_select = no
	auto_opens = no
	pre_triggers = { has_owner = yes }
	trigger = {
		has_modifier = pm_deep_scanner
		owner = { NOT = { has_country_flag = notify_deep_scanner_no_warning } }
	}
	immediate = {
		# create_message = {
		# 	type = MESSAGE_FIRST_CONTACT_FINISHED
		# 	localization = UniqueAscensionPerksEvents.441.DESC
		# 	days = 30
		# 	target = this
		# 	variable = {
		# 		type = name
		# 		localization = PLANET
		# 		scope = this
		# 	}
		# }
		# play_sound = event_laboratory_sound
	}
	after = { # Auto rescan
		if = {
			limit = {
				owner = {
					OR = {
						has_ascension_perk = ap_deep_scanner
						has_valid_civic = civic_exploration # Compat. E&CC
					}
				}
				has_active_building = building_deep_space_scanner has_modifier = pm_deep_scanner
			}
			planet_event = { id = UniqueAscensionPerksEvents.443 }
		}
	}
	option = { name = OK }
}

## Decision Notify only
# Root = event_target:deep_scanned_planet
planet_event = {
	id = UniqueAscensionPerksEvents.442
	title = "UniqueAscensionPerksEvents.442.Name"
	desc = "UniqueAscensionPerksEvents.442.Desc"
	show_sound = event_laboratory_sound
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = deep_scanner_room }
	is_triggered_only = yes
	location = root
	pre_triggers = { has_owner = yes }
	trigger = {
		has_planet_flag = planet_has_new_anomaly
		exists = from
		# from = { has_modifier = pm_deep_scanner }
		exists = from.owner
		from.owner = { NOR = { has_country_flag = notify_deep_scanner_no_warning has_country_flag = no_anomaly_found } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.442.a"
		hidden_effect = {
			owner = { set_country_flag = notify_deep_scanner_no_warning }
		}
	}
	option = {
		name = EXCELLENT
		custom_tooltip = "UniqueAscensionPerksEvents.442.Tooltip"
	}
}

# From decision_deep_scanner
planet_event = {
	id = UniqueAscensionPerksEvents.443
	hide_window = yes
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	immediate = {
		# find_planet_for_new_anomaly = yes
		if = {
			limit = { num_buildings = { type = building_deep_space_scanner value < 2 } }
			if = {
				limit = { num_buildings = { type = building_deep_space_scanner value = 1 } }
				owner = { random_planet_within_border = {
					limit = { distance = { source = root use_bypasses = no min_jumps = 1 max_jumps = 2 } can_be_deep_scanned = yes }
					save_event_target_as = deep_scanned_planet
				} }
			}
			# nothing
		} else_if = {
			limit = { num_buildings = { type = building_deep_space_scanner value = 2 } }
			owner = { random_planet_within_border = {
				limit = { distance = { source = root use_bypasses = no min_jumps = 1 max_jumps = 4 } can_be_deep_scanned = yes }
				save_event_target_as = deep_scanned_planet
			} }
		} else_if = {
			limit = { num_buildings = { type = building_deep_space_scanner value = 3 } }
			owner = { random_planet_within_border = {
				limit = { distance = { source = root use_bypasses = no min_jumps = 1 max_jumps = 6 } can_be_deep_scanned = yes }
				save_event_target_as = deep_scanned_planet
			} }
		} else_if = {
			limit = { num_buildings = { type = building_deep_space_scanner value = 4 } }
			owner = { random_planet_within_border = {
				limit = { distance = { source = root use_bypasses = no min_jumps = 1 max_jumps = 8 } can_be_deep_scanned = yes }
				save_event_target_as = deep_scanned_planet
			} }
		} else_if = {
			limit = { num_buildings = { type = building_deep_space_scanner value = 5 } }
			owner = { random_planet_within_border = {
				limit = { distance = { source = root use_bypasses = no min_jumps = 1 max_jumps = 10 } can_be_deep_scanned = yes }
				save_event_target_as = deep_scanned_planet
			} }
		} else_if = {
			limit = { num_buildings = { type = building_deep_space_scanner value = 6 } }
			owner = { random_planet_within_border = {
				limit = { distance = { source = root use_bypasses = no min_jumps = 1 max_jumps = 12 } can_be_deep_scanned = yes }
				save_event_target_as = deep_scanned_planet
			} }
		} else_if = {
			limit = { num_buildings = { type = building_deep_space_scanner value = 7 } }
			owner = { random_planet_within_border = {
				limit = { distance = { source = root use_bypasses = no min_jumps = 1 max_jumps = 14 } can_be_deep_scanned = yes }
				save_event_target_as = deep_scanned_planet
			} }
		} else_if = {
			limit = { num_buildings = { type = building_deep_space_scanner value = 8 } }
			owner = { random_planet_within_border = {
				limit = { distance = { source = root use_bypasses = no min_jumps = 1 max_jumps = 16 } can_be_deep_scanned = yes }
				save_event_target_as = deep_scanned_planet
			} }
		} else_if = {
			limit = { num_buildings = { type = building_deep_space_scanner value = 9 } }
			owner = { random_planet_within_border = {
				limit = { distance = { source = root use_bypasses = no min_jumps = 1 max_jumps = 18 } can_be_deep_scanned = yes }
				save_event_target_as = deep_scanned_planet
			} }
		} else_if = {
			limit = { num_buildings = { type = building_deep_space_scanner value = 10 } }
			owner = { random_planet_within_border = {
				limit = { distance = { source = root use_bypasses = no min_jumps = 1 max_jumps = 20 } can_be_deep_scanned = yes }
				save_event_target_as = deep_scanned_planet
			} }
		}
		event_target:deep_scanned_planet = {
			anomaly_spawner = yes # deep_space_scanner_spawn_anomaly = yes
			root.owner = { add_resource = { energy = -100 } }
			if = {
				limit = {
					has_planet_flag = planet_has_new_anomaly
					root.owner = {
						NOR = {
							has_country_flag = notify_deep_scanner_no_warning
							has_country_flag = no_anomaly_found
						}
					}
				}
				planet_event = { id = UniqueAscensionPerksEvents.442 days = 1 }
			}
		}
	}
}

######################################
#									 #
########## Artifacts Hunter ##########
#		(Archaeological Experts)	 #
######################################
# TODO add all unique_ascension_perks_sites_events.txt
# Compat. with The Ancient Gods 2577706209?
# Compat. with Archaeology Story Pack 1993869579?
country_event = {
	id = UniqueAscensionPerksEvents.450
	title = "ap_artifact_hunter"
	desc = "ap_artifact_hunter_desc"
	show_sound = event_dig_site
	location = capital_scope
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = artifact_hunter_room }
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

# TODO: opt
country_event = {
	id = UniqueAscensionPerksEvents.451
	title = "UniqueAscensionPerksEvents.451.Name"
	desc = "UniqueAscensionPerksEvents.451.Desc"
	show_sound = event_mystic_reveal
	location = event_target:planet_archaeological_site
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = artifact_hunter_room }
	mean_time_to_happen = { months = 8 }
	# pre_triggers = { has_owner = yes }
	trigger = {
		has_ascension_perk = ap_artifact_hunter
		NOT = { has_country_flag = ap_artifact_hunter_cooldown }
		any_owned_planet = {
			has_active_building = building_deep_space_scanner
			num_buildings = { type = building_deep_space_scanner value > 0 disabled = no }
			OR = {
				root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 2 } can_spawn_archaeological_site = yes } }
				AND = {
					num_buildings = { type = building_deep_space_scanner value > 1 }
					OR = {
						root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 4 } can_spawn_archaeological_site = yes } }
						AND = {
							num_buildings = { type = building_deep_space_scanner value > 2 }
							OR = {
								root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 6 } can_spawn_archaeological_site = yes } }
								AND = {
									num_buildings = { type = building_deep_space_scanner value > 3 }
									OR = {
										root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 8 } can_spawn_archaeological_site = yes } }
										AND = {
											num_buildings = { type = building_deep_space_scanner value > 4 }
											OR = {
												root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 10 } can_spawn_archaeological_site = yes } }
												AND = {
													num_buildings = { type = building_deep_space_scanner value > 5 }
													OR = {
														root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 12 } can_spawn_archaeological_site = yes } }
														AND = {
															num_buildings = { type = building_deep_space_scanner value > 6 }
															root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 14 } can_spawn_archaeological_site = yes } }
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
				# AND = {
				# 	num_buildings = { type = building_deep_space_scanner value = 8 }
				# 	root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 16 } can_spawn_archaeological_site = yes } }
				# }
				# AND = {
				# 	num_buildings = { type = building_deep_space_scanner value = 9 }
				# 	root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 18 } can_spawn_archaeological_site = yes } }
				# }
				# AND = {
				# 	num_buildings = { type = building_deep_space_scanner value = 10 }
				# 	root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 20 } can_spawn_archaeological_site = yes } }
				# }
			}
		}
	}
	immediate = {
		set_timed_country_flag = { flag = ap_artifact_hunter_cooldown years = 2 }
		random_owned_planet = {
			limit = { # can_deep_scan_a_new_archaeological_site = yes
				has_active_building = building_deep_space_scanner
				num_buildings = { type = building_deep_space_scanner value > 0 disabled = no }
				OR = {
					root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 2 } can_spawn_archaeological_site = yes } }
					AND = {
						num_buildings = { type = building_deep_space_scanner value > 1 }
						OR = {
							root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 4 } can_spawn_archaeological_site = yes } }
							AND = {
								num_buildings = { type = building_deep_space_scanner value > 2 }
								OR = {
									root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 6 } can_spawn_archaeological_site = yes } }
									AND = {
										num_buildings = { type = building_deep_space_scanner value > 3 }
										OR = {
											root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 8 } can_spawn_archaeological_site = yes } }
											AND = {
												num_buildings = { type = building_deep_space_scanner value > 4 }
												OR = {
													root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 10 } can_spawn_archaeological_site = yes } }
													AND = {
														num_buildings = { type = building_deep_space_scanner value > 5 }
														OR = {
															root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 12 } can_spawn_archaeological_site = yes } }
															AND = {
																num_buildings = { type = building_deep_space_scanner value > 6 }
																root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 14 } can_spawn_archaeological_site = yes } }
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
					# AND = {
					# 	num_buildings = { type = building_deep_space_scanner value = 8 }
					# 	root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 16 } can_spawn_archaeological_site = yes } }
					# }
					# AND = {
					# 	num_buildings = { type = building_deep_space_scanner value = 9 }
					# 	root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 18 } can_spawn_archaeological_site = yes } }
					# }
					# AND = {
					# 	num_buildings = { type = building_deep_space_scanner value = 10 }
					# 	root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 20 } can_spawn_archaeological_site = yes } }
					# }
				}
			}
			# find_planet_for_new_archaeological_site = yes
			if = {
				limit = {
					num_buildings = { type = building_deep_space_scanner value < 2 }
					root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 2 } can_spawn_archaeological_site = yes } }
				}
				if = {
					limit = {
						has_active_building = building_deep_space_scanner
						num_buildings = { type = building_deep_space_scanner value > 0 disabled = no }
					}
					root = { random_planet_within_border = {
						limit = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 2 } can_spawn_archaeological_site = yes }
						save_event_target_as = planet_archaeological_site
					} }
				}
				# nothing
			} else_if = {
				limit = {
					num_buildings = { type = building_deep_space_scanner value = 2 }
					root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 4 } can_spawn_archaeological_site = yes } }
				}
				root = { random_planet_within_border = {
					limit = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 4 } can_spawn_archaeological_site = yes }
					save_event_target_as = planet_archaeological_site
				} }
			} else_if = {
				limit = {
					num_buildings = { type = building_deep_space_scanner value = 3 }
					root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 6 } can_spawn_archaeological_site = yes } }
				}
				root = { random_planet_within_border = {
					limit = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 6 } can_spawn_archaeological_site = yes }
					save_event_target_as = planet_archaeological_site
				} }
			} else_if = {
				limit = {
					num_buildings = { type = building_deep_space_scanner value = 4 }
					root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 8 } can_spawn_archaeological_site = yes } }
				}
				root = { random_planet_within_border = {
					limit = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 8 } can_spawn_archaeological_site = yes }
					save_event_target_as = planet_archaeological_site
				} }
			} else_if = {
				limit = {
					num_buildings = { type = building_deep_space_scanner value = 5 }
					root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 10 } can_spawn_archaeological_site = yes } }
				}
				root = { random_planet_within_border = {
					limit = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 10 } can_spawn_archaeological_site = yes }
					save_event_target_as = planet_archaeological_site
				} }
			} else_if = {
				limit = {
					num_buildings = { type = building_deep_space_scanner value = 6 }
					root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 12 } can_spawn_archaeological_site = yes } }
				}
				root = { random_planet_within_border = {
					limit = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 12 } can_spawn_archaeological_site = yes }
					save_event_target_as = planet_archaeological_site
				} }
			} else_if = {
				limit = {
					num_buildings = { type = building_deep_space_scanner value = 7 }
					root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 14 } can_spawn_archaeological_site = yes } }
				}
				root = { random_planet_within_border = {
					limit = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 14 } can_spawn_archaeological_site = yes }
					save_event_target_as = planet_archaeological_site
				} }
			} else_if = {
				limit = {
					num_buildings = { type = building_deep_space_scanner value = 8 }
					root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 16 } can_spawn_archaeological_site = yes } }
				}
				root = { random_planet_within_border = {
					limit = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 16 } can_spawn_archaeological_site = yes }
					save_event_target_as = planet_archaeological_site
				} }
			} else_if = {
				limit = {
					num_buildings = { type = building_deep_space_scanner value = 9 }
					root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 18 } can_spawn_archaeological_site = yes } }
				}
				root = { random_planet_within_border = {
					limit = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 18 } can_spawn_archaeological_site = yes }
					save_event_target_as = planet_archaeological_site
				} }
			} else_if = {
				limit = {
					num_buildings = { type = building_deep_space_scanner value = 10 }
					root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 20 } can_spawn_archaeological_site = yes } }
				}
				root = { random_planet_within_border = {
					limit = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 20 } can_spawn_archaeological_site = yes }
					save_event_target_as = planet_archaeological_site
				} }
			}
		}
		# Fallback
		if = {
			limit = {
				NOT = { exists = event_target:planet_archaeological_site }
				any_planet_within_border = { can_spawn_archaeological_site = yes }
			}
			random_planet_within_border = {
				limit = { can_spawn_archaeological_site = yes }
				save_event_target_as = planet_archaeological_site
			}
		}
	}
	option = {
		name = EXCELLENT
		custom_tooltip = "UniqueAscensionPerksEvents.451.Tooltip"
		trigger = { exists = event_target:planet_archaeological_site }
		event_target:planet_archaeological_site = { create_archaeological_site = random }
	}
	option = {
		name = SPECIAL_PROJECT_STATUS_FAILED
		custom_tooltip = "ap_stellar_manipulation_failed"
		default_hide_option = yes
		trigger = { NOT = { exists = event_target:planet_archaeological_site } }
		# hidden_effect = { }
	}
}
# TEST
country_event = {
	id = UniqueAscensionPerksEvents.452
	hide_window = yes
	is_triggered_only = yes
	is_test_event = yes
	trigger = { any_planet_within_border = { can_spawn_archaeological_site = yes } }
	immediate = {
		random_planet_within_border = {
			limit = { can_spawn_archaeological_site = yes }
			create_archaeological_site = random
		}
	}
}
