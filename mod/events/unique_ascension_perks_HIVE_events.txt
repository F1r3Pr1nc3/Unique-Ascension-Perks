namespace = UniqueAscensionPerksEvents

######################################
#									 #
########### Super Hivemind ###########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.100
	title = "ap_super_hive_mind"
	desc = "ap_super_hive_mind_desc"
	picture = GFX_evt_hive_mind
	show_sound = event_alien_nature
	location = from
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT enable_special_project = { name = SUPER_HIVEMIND location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.101
	title = "UniqueAscensionPerksEvents.101.Name"
	desc = "UniqueAscensionPerksEvents.101.Desc"
	picture = GFX_evt_hive_mind
	show_sound = event_alien_nature
	location = from
	is_triggered_only = yes
	immediate = { set_country_flag = super_hivemind_project }
	option = {
		name = EXCELLENT
		custom_tooltip = "ap_super_hive_mind_tooltip_3"
		add_research_option = tech_super_hivemind
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.103 } add_resource = { food = 750 } }
	}
}

# Do fully DEPRECATE?
# Clone Ship (on_ship_built)
# From = Planet
ship_event = {
	id = UniqueAscensionPerksEvents.102
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = fleet
		exists = owner
		owner = {
			is_ai = yes # added v3.4
			is_country_type = default
			has_ascension_perk = ap_super_hive_mind
			# event_target:global_event_country = { check_variable = { which = ap_super_hive_mind value > 0 } }
		}
	}
	immediate = {
		random = {
			chance = 50
			switch = {
				trigger = is_ship_size
				corvette	= { random = { chance = 40 fleet = { create_ship = { name = "Cloned Ship" design = root random_existing_design = corvette prefix = yes } } } }
				destroyer	= { random = { chance = 30 fleet = { create_ship = { name = "Cloned Ship" design = root random_existing_design = destroyer prefix = yes } } } }
				cruiser		= { random = { chance = 20 fleet = { create_ship = { name = "Cloned Ship" design = root random_existing_design = cruiser prefix = yes } } } }
				battleship	= { random = { chance = 10 fleet = { create_ship = { name = "Cloned Ship" design = root random_existing_design = battleship prefix = yes } } } }
			}
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.103
	title = "UniqueAscensionPerksEvents.103.Name"
	desc = "UniqueAscensionPerksEvents.103.Desc"
	picture = GFX_evt_hive_mind
	show_sound = event_alien_nature
	location = from
	is_triggered_only = yes
	immediate = {
		random_owned_leader = { limit = { NOT = { leader_class = ruler } } save_event_target_as = leader_1
			root = { random_owned_leader = { limit = { NOR = { leader_class = ruler is_same_value = event_target:leader_1 } } save_event_target_as = leader_2
				root = { random_owned_leader = { limit = { NOR = { leader_class = ruler is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 } } save_event_target_as = leader_3
					root = { random_owned_leader = { limit = { NOR = { leader_class = ruler is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 } } save_event_target_as = leader_4
						root = { random_owned_leader = { limit = { NOR = { leader_class = ruler is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 is_same_value = event_target:leader_4 } } save_event_target_as = leader_5
							root = { random_owned_leader = { limit = { NOR = { leader_class = ruler is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 is_same_value = event_target:leader_4 is_same_value = event_target:leader_5 } } save_event_target_as = leader_6
								root = { random_owned_leader = { limit = { NOR = { leader_class = ruler is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 is_same_value = event_target:leader_4 is_same_value = event_target:leader_5 is_same_value = event_target:leader_6 } } save_event_target_as = leader_7
									root = { random_owned_leader = { limit = { NOR = { leader_class = ruler is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 is_same_value = event_target:leader_4 is_same_value = event_target:leader_5 is_same_value = event_target:leader_6 is_same_value = event_target:leader_7 } } save_event_target_as = leader_8 } }
								} }
							} }
						} }
					} }
				} }
			} }
		}
	}
	option = { name = "UniqueAscensionPerksEvents.251.Leader.1" trigger = { exists = event_target:leader_1 } hidden_effect = { event_target:leader_1 = { leader_event = { id = UniqueAscensionPerksEvents.104 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.2" trigger = { exists = event_target:leader_2 } hidden_effect = { event_target:leader_2 = { leader_event = { id = UniqueAscensionPerksEvents.104 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.3" trigger = { exists = event_target:leader_3 } hidden_effect = { event_target:leader_3 = { leader_event = { id = UniqueAscensionPerksEvents.104 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.4" trigger = { exists = event_target:leader_4 } hidden_effect = { event_target:leader_4 = { leader_event = { id = UniqueAscensionPerksEvents.104 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.5" trigger = { exists = event_target:leader_5 } hidden_effect = { event_target:leader_5 = { leader_event = { id = UniqueAscensionPerksEvents.104 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.6" trigger = { exists = event_target:leader_6 } hidden_effect = { event_target:leader_6 = { leader_event = { id = UniqueAscensionPerksEvents.104 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.7" trigger = { exists = event_target:leader_7 } hidden_effect = { event_target:leader_7 = { leader_event = { id = UniqueAscensionPerksEvents.104 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.8" trigger = { exists = event_target:leader_8 } hidden_effect = { event_target:leader_8 = { leader_event = { id = UniqueAscensionPerksEvents.104 } } } }
	option = { name = "UniqueAscensionPerks.select_leader" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.103 } } }
	option = { name = ABORT ai_chance = { factor = 0 } }
}

leader_event = {
	id = UniqueAscensionPerksEvents.104
	title = "UniqueAscensionPerksEvents.104.Name"
	desc = "UniqueAscensionPerksEvents.104.Desc"
	picture = GFX_evt_hive_mind
	show_sound = event_alien_nature
	location = from
	is_triggered_only = yes
	immediate = {
		# save_event_target_as = leader_cloned
	}
	after = {
		from = {
			if = { limit = { is_variable_set = cloned_leader_number }
				add_resource = { influence = -75 energy = -75 mult = cloned_leader_number }
				root = {
					while = { count = prev.cloned_leader_number
						switch = {
							trigger = leader_class
							scientist = { from = { clone_leader = { target = prev class = scientist } } }
							admiral = { from = { clone_leader = { target = prev class = admiral } } }
							governor = { from = { clone_leader = { target = prev class = governor } } }
							general = { from = { clone_leader = { target = prev class = general } } }
						}
						from = {
							last_created_leader = { set_age = 20 set_name = "CLONED_LEADER_NAME" }
							change_variable = { which = "cloned_leader_number" value = -1 }
						}
					}
					leader_event = { id = UniqueAscensionPerksEvents.105 days = 1 }
				}
				clear_variable = cloned_leader_number
			}
		}
	}
	option = { name = "UniqueAscensionPerksEvents.252.1" allow = { from = { resource_stockpile_compare = { resource = influence value > 75  } resource_stockpile_compare = { resource = energy value > 75  } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 1 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.2" allow = { from = { resource_stockpile_compare = { resource = influence value > 150 } resource_stockpile_compare = { resource = energy value > 150 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 2 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.3" allow = { from = { resource_stockpile_compare = { resource = influence value > 225 } resource_stockpile_compare = { resource = energy value > 225 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 3 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.4" allow = { from = { resource_stockpile_compare = { resource = influence value > 300 } resource_stockpile_compare = { resource = energy value > 300 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 4 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.5" allow = { from = { resource_stockpile_compare = { resource = influence value > 375 } resource_stockpile_compare = { resource = energy value > 375 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 5 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.6" allow = { from = { resource_stockpile_compare = { resource = influence value > 450 } resource_stockpile_compare = { resource = energy value > 450 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 6 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.7" allow = { from = { resource_stockpile_compare = { resource = influence value > 525 } resource_stockpile_compare = { resource = energy value > 525 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 7 } } } }
	option = { name = ABORT ai_chance = { factor = 0 } }
}

leader_event = {
	id = UniqueAscensionPerksEvents.105
	title = "UniqueAscensionPerksEvents.105.Name"
	desc = "UniqueAscensionPerksEvents.105.Desc"
	picture = GFX_evt_hive_mind
	show_sound = event_alien_nature
	location = owner.capital_scope
	is_triggered_only = yes
	immediate = {
		# save_event_target_as = leader_cloned
	}
	option = { name = "UniqueAscensionPerks.lets_again" hidden_effect = { owner = { country_event = { id = UniqueAscensionPerksEvents.103 } } } }
	option = { name = EXCELLENT }
}

######################################
#									 #
############ Mega Hivemind ###########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.110
	title = "ap_mega_hive_mind"
	desc = "ap_mega_hive_mind_desc"
	picture = GFX_evt_mega_hive_mind
	show_sound = event_mystic_reveal
	location = from
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT enable_special_project = { name = MEGA_HIVEMIND location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.111
	title = "UniqueAscensionPerksEvents.111.Name"
	desc = "UniqueAscensionPerksEvents.111.Desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = mega_hive_mind_room }
	is_triggered_only = yes
	immediate = { set_country_flag = mega_hivemind_project }
	option = {
		name = EXCELLENT
		custom_tooltip = "ap_mega_hive_mind_tooltip_2"
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.112 } }
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.112
	title = "ap_mega_hive_mind"
	desc = "UniqueAscensionPerksEvents.112.Desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = mega_hive_mind_room }
	is_triggered_only = yes
	option = {
		name = "UniqueAscensionPerksEvents.112.a"
		allow = { resource_stockpile_compare = { resource = exotic_gases value > 500 } }
		add_resource = { exotic_gases = -500 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.113 } }
	}
	option = { name = "cara_home_exit" ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.113
	title = "ap_mega_hive_mind"
	desc = "UniqueAscensionPerksEvents.113.Desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = mega_hive_mind_room }
	is_triggered_only = yes
	option = {
		name = "UniqueAscensionPerksEvents.113.a"
		hidden_effect = {
			set_country_flag = realm_destination_entrance
			set_timed_country_flag = { flag = realm_destination_entrance_cooldown years = 1 }
			country_event = { id = UniqueAscensionPerksEvents.115 days = 360 }
			country_event = { id = UniqueAscensionPerksEvents.114 }
		}
	}
	option = { name = "UniqueAscensionPerksEvents.113.b" ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.114
	title = "ap_mega_hive_mind"
	desc = {
		trigger = {
			success_text = { text = "UniqueAscensionPerksEvents.114.Entrance" has_country_flag = realm_destination_entrance }
			success_text = { text = "UniqueAscensionPerksEvents.114.Nothing" has_country_flag = realm_destination_nothing }
			success_text = { text = "UniqueAscensionPerksEvents.114.Intersection" has_country_flag = realm_destination_intersection }
			success_text = { text = "UniqueAscensionPerksEvents.114.Elevator" has_country_flag = realm_destination_elevator }
			success_text = { text = "UniqueAscensionPerksEvents.114.Chest" has_country_flag = realm_destination_chest }
			success_text = { text = "UniqueAscensionPerksEvents.114.Chest.Bad" has_country_flag = realm_chest_event_bad }
			success_text = { text = "UniqueAscensionPerksEvents.114.Chest.Medium" has_country_flag = realm_chest_event_medium }
			success_text = { text = "UniqueAscensionPerksEvents.114.Chest.Good" has_country_flag = realm_chest_event_good }
			success_text = { text = "UniqueAscensionPerksEvents.114.Encounter" has_country_flag = realm_destination_encounter }
			success_text = { text = "UniqueAscensionPerksEvents.114.Encounter.Farmer" has_country_flag = realm_destination_encounter_farmer }
			success_text = { text = "UniqueAscensionPerksEvents.114.Encounter.Hunter" has_country_flag = realm_destination_encounter_swarm }
			success_text = { text = "UniqueAscensionPerksEvents.114.Encounter.Researcher.Physics" has_country_flag = realm_destination_encounter_researcher_physics }
			success_text = { text = "UniqueAscensionPerksEvents.114.Encounter.Researcher.Society" has_country_flag = realm_destination_encounter_researcher_society }
			success_text = { text = "UniqueAscensionPerksEvents.114.Encounter.Researcher.Engineering" has_country_flag = realm_destination_encounter_researcher_engineering }
			success_text = { text = "UniqueAscensionPerksEvents.114.Encounter.Breeder" has_country_flag = realm_destination_encounter_breeder }
			success_text = { text = "UniqueAscensionPerksEvents.114.Encounter.Success" has_country_flag = realm_encounter_result_success }
			success_text = { text = "UniqueAscensionPerksEvents.114.Encounter.Perfect" has_country_flag = realm_encounter_result_perfect }
			success_text = { text = "UniqueAscensionPerksEvents.114.Encounter.Failure" has_country_flag = realm_encounter_result_failure }
			success_text = { text = "UniqueAscensionPerksEvents.114.Encounter.Hunter.Success" has_country_flag = realm_swarm_group_success }
			success_text = { text = "UniqueAscensionPerksEvents.114.Encounter.Hunter.Failure" has_country_flag = realm_swarm_group_failure }
			success_text = { text = "UniqueAscensionPerksEvents.114.Technology" has_country_flag = realm_destination_technology }
			success_text = { text = "UniqueAscensionPerksEvents.114.Technology.Success" has_country_flag = realm_technology_success }
			success_text = { text = "UniqueAscensionPerksEvents.114.Technology.Failure" has_country_flag = realm_technology_failed }
			success_text = { text = "UniqueAscensionPerksEvents.114.Dropper" has_country_flag = realm_destination_dropper }
			success_text = { text = "UniqueAscensionPerksEvents.114.Dropper.Activated" has_country_flag = realm_destination_dropper_activated }
			success_text = { text = "UniqueAscensionPerksEvents.114.Dropper.Deactivated" has_country_flag = realm_destination_dropper_deactivated }
		}
	}
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = mega_hive_mind_room }
	is_triggered_only = yes
	# immediate = { get_capital_planet = yes }
	option = { name = "UniqueAscensionPerksEvents.114.North" trigger = { realm_destination_north = yes }
		realm_select_north = yes
	}
	option = { name = "UniqueAscensionPerksEvents.114.West" trigger = { realm_destination_west = yes }
		# realm_select_west = yes
		realm_select_north = yes
	}
	option = { name = "UniqueAscensionPerksEvents.114.South" trigger = { realm_destination_south = yes }
		# realm_select_south = yes
		realm_select_north = yes
	}
	option = { name = "UniqueAscensionPerksEvents.114.East" trigger = { realm_destination_east = yes }
		# realm_select_east = yes
		realm_select_north = yes
	}
	option = { name = "UniqueAscensionPerksEvents.114.Back" trigger = { realm_destination_back = yes }
		# realm_move_back = yes
		hidden_effect = {
			realm_clear_flags = yes
			random_list = {
				20 = { realm_random_intersection_direction = yes }
			}
			country_event = { id = UniqueAscensionPerksEvents.114 }
		}
	}
	option = { name = "UniqueAscensionPerksEvents.114.Up" trigger = { realm_destination_up = yes }
		# realm_select_up = yes
		realm_select_north = yes
	}
	option = { name = "UniqueAscensionPerksEvents.114.Forward" trigger = { realm_destination_forward = yes }
		# realm_select_down = yes
		realm_select_north = yes
	}
	option = { name = "UniqueAscensionPerksEvents.114.Down" trigger = { realm_destination_down = yes }
		# realm_select_forward = yes
		realm_select_north = yes
	}
	option = { name = "UniqueAscensionPerksEvents.112.Chest.Blue" trigger = { realm_opening_chest = yes }
		# realm_opening_chest_blue = yes
		hidden_effect = {
			if = { limit = { has_country_flag = realm_chest_event_blue_good } realm_clear_flags = yes set_country_flag = realm_chest_event_good }
			else_if = { limit = { has_country_flag = realm_chest_event_blue_medium } realm_clear_flags = yes set_country_flag = realm_chest_event_medium }
			else_if = { limit = { has_country_flag = realm_chest_event_blue_bad } realm_clear_flags = yes set_country_flag = realm_chest_event_bad }
			random_list = {
				10 = { set_country_flag = realm_chest_energy }
				10 = { set_country_flag = realm_chest_minerals }
				10 = { set_country_flag = realm_chest_alloys }
			}
			country_event = { id = UniqueAscensionPerksEvents.114 }
		}
	}
	option = { name = "UniqueAscensionPerksEvents.112.Chest.Yellow" trigger = { realm_opening_chest = yes }
		# realm_opening_chest_yellow = yes
		hidden_effect = {
			if = { limit = { has_country_flag = realm_chest_event_yellow_good } realm_clear_flags = yes set_country_flag = realm_chest_event_good }
			else_if = { limit = { has_country_flag = realm_chest_event_yellow_medium } realm_clear_flags = yes set_country_flag = realm_chest_event_medium }
			else_if = { limit = { has_country_flag = realm_chest_event_yellow_bad } realm_clear_flags = yes set_country_flag = realm_chest_event_bad }
			random_list = {
				10 = { set_country_flag = realm_chest_energy }
				10 = { set_country_flag = realm_chest_minerals }
				10 = { set_country_flag = realm_chest_alloys }
			}
			country_event = { id = UniqueAscensionPerksEvents.114 }
		}
	}
	option = { name = "UniqueAscensionPerksEvents.112.Chest.Red" trigger = { realm_opening_chest = yes }
		# realm_opening_chest_red = yes
		hidden_effect = {
			if = { limit = { has_country_flag = realm_chest_event_red_good } realm_clear_flags = yes set_country_flag = realm_chest_event_good }
			else_if = { limit = { has_country_flag = realm_chest_event_red_medium } realm_clear_flags = yes set_country_flag = realm_chest_event_medium }
			else_if = { limit = { has_country_flag = realm_chest_event_red_bad } realm_clear_flags = yes set_country_flag = realm_chest_event_bad }
			random_list = {
				10 = { set_country_flag = realm_chest_energy }
				10 = { set_country_flag = realm_chest_minerals }
				10 = { set_country_flag = realm_chest_alloys }
			}
			country_event = { id = UniqueAscensionPerksEvents.114 }
		}
	}
	option = { trigger = { has_country_flag = realm_chest_event_good has_country_flag = realm_chest_energy } add_resource = { energy = 15000 } name = EXCELLENT hidden_effect = { realm_clear_flags = yes } }
	option = { trigger = { has_country_flag = realm_chest_event_good has_country_flag = realm_chest_minerals } add_resource = { energy = 15000 } name = EXCELLENT hidden_effect = { realm_clear_flags = yes } }
	option = { trigger = { has_country_flag = realm_chest_event_good has_country_flag = realm_chest_alloys } add_resource = { energy = 15000 } name = EXCELLENT hidden_effect = { realm_clear_flags = yes } }
	option = { trigger = { has_country_flag = realm_chest_event_medium has_country_flag = realm_chest_energy } add_resource = { energy = 4000 } name = OK hidden_effect = { realm_clear_flags = yes } }
	option = { trigger = { has_country_flag = realm_chest_event_medium has_country_flag = realm_chest_minerals } add_resource = { energy = 4000 } name = OK hidden_effect = { realm_clear_flags = yes } }
	option = { trigger = { has_country_flag = realm_chest_event_medium has_country_flag = realm_chest_alloys } add_resource = { energy = 1600 } name = OK hidden_effect = { realm_clear_flags = yes } }
	option = { trigger = { has_country_flag = realm_chest_event_bad has_country_flag = realm_chest_energy } add_resource = { energy = 800 } name = "UniqueAscensionPerksEvents.114.Bad" hidden_effect = { realm_clear_flags = yes } }
	option = { trigger = { has_country_flag = realm_chest_event_bad has_country_flag = realm_chest_minerals } add_resource = { energy = 800 } name = "UniqueAscensionPerksEvents.114.Bad" hidden_effect = { realm_clear_flags = yes } }
	option = { trigger = { has_country_flag = realm_chest_event_bad has_country_flag = realm_chest_alloys } add_resource = { energy = 320 } name = "UniqueAscensionPerksEvents.114.Bad" hidden_effect = { realm_clear_flags = yes } }
	option = { name = "UniqueAscensionPerksEvents.114.Communicate" trigger = { realm_communicate = yes }
		# realm_communicating = yes
		hidden_effect = {
			realm_clear_flags = yes
			random_list = {
				10 = { modifier = { factor = 0 realm_cant_encounter_farmer = yes } set_country_flag = realm_destination_encounter_farmer }
				10 = { modifier = { factor = 0 has_country_flag = realm_destination_encounter_swarm_cooldown } set_country_flag = realm_destination_encounter_swarm set_timed_country_flag = { flag = realm_destination_encounter_swarm_cooldown years = 5 } }
				3 = { modifier = { factor = 0 realm_cant_encounter_researcher = yes } set_country_flag = realm_destination_encounter_researcher_physics }
				3 = { modifier = { factor = 0 realm_cant_encounter_researcher = yes } set_country_flag = realm_destination_encounter_researcher_society }
				3 = { modifier = { factor = 0 realm_cant_encounter_researcher = yes } set_country_flag = realm_destination_encounter_researcher_engineering }
				10 = { modifier = { factor = 0 realm_cant_encounter_breeder = yes } set_country_flag = realm_destination_encounter_breeder }
			}
			country_event = { id = UniqueAscensionPerksEvents.114 }
		}
	}
	option = { name = "UniqueAscensionPerksEvents.114.Plant" trigger = { has_country_flag = realm_destination_encounter_farmer }
		# realm_farmer_select = yes
		hidden_effect = { realm_clear_flags = yes set_country_flag = realm_encounter_result_farmer realm_encounter_results = yes country_event = { id = UniqueAscensionPerksEvents.114 } }
	}
	option = { name = "UniqueAscensionPerksEvents.114.Small" trigger = { has_country_flag = realm_destination_encounter_swarm }
		# realm_select_small_swarm_group = yes
		hidden_effect = {
			realm_clear_flags = yes
			set_country_flag = realm_swarm_group_small
			random_list = {
				90 = { set_country_flag = realm_swarm_group_success }
				10 = { set_country_flag = realm_swarm_group_failure }
			}
			country_event = { id = UniqueAscensionPerksEvents.114 }
		}
	}
	option = { name = "UniqueAscensionPerksEvents.114.Medium" trigger = { has_country_flag = realm_destination_encounter_swarm }
		# realm_select_medium_swarm_group = yes
		hidden_effect = {
			realm_clear_flags = yes
			set_country_flag = realm_swarm_group_medium
			random_list = {
				75 = { set_country_flag = realm_swarm_group_success }
				25 = { set_country_flag = realm_swarm_group_failure }
			}
			country_event = { id = UniqueAscensionPerksEvents.114 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.114.Big" trigger = { has_country_flag = realm_destination_encounter_swarm }
		# realm_select_big_swarm_group = yes
		hidden_effect = {
			realm_clear_flags = yes
			set_country_flag = realm_swarm_group_big
			random_list = {
				50 = { set_country_flag = realm_swarm_group_success }
				50 = { set_country_flag = realm_swarm_group_failure }
			}
			country_event = { id = UniqueAscensionPerksEvents.114 }
		}
	}
	option = { name = "UniqueAscensionPerksEvents.114.Knowledge" trigger = { has_country_flag = realm_destination_encounter_researcher_physics }
		# realm_physics_select = yes
		hidden_effect = { realm_clear_flags = yes set_country_flag = realm_encounter_result_physics realm_encounter_results = yes country_event = { id = UniqueAscensionPerksEvents.114 } }
	}
	option = { name = "UniqueAscensionPerksEvents.114.Knowledge" trigger = { has_country_flag = realm_destination_encounter_researcher_society }
		# realm_society_select = yes
		hidden_effect = { realm_clear_flags = yes set_country_flag = realm_encounter_result_society realm_encounter_results = yes country_event = { id = UniqueAscensionPerksEvents.114 } }
	}
	option = { name = "UniqueAscensionPerksEvents.114.Knowledge" trigger = { has_country_flag = realm_destination_encounter_researcher_engineering }
		# realm_engineering_select = yes
		hidden_effect = { realm_clear_flags = yes set_country_flag = realm_encounter_result_engineering realm_encounter_results = yes country_event = { id = UniqueAscensionPerksEvents.114 } }
	}
	option = { name = "UniqueAscensionPerksEvents.114.Breeding" trigger = { has_country_flag = realm_destination_encounter_breeder }
		# realm_breeding_select
		hidden_effect = { realm_clear_flags = yes set_country_flag = realm_encounter_result_breeding realm_encounter_results = yes country_event = { id = UniqueAscensionPerksEvents.114 } }
	}
	option = { name = EXCELLENT trigger = { has_country_flag = realm_encounter_result_success has_country_flag = realm_encounter_result_farmer } add_modifier = { modifier = mega_hivemind_food_success years = 10 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = EXCELLENT trigger = { has_country_flag = realm_encounter_result_success has_country_flag = realm_encounter_result_physics } add_modifier = { modifier = mega_hivemind_physics_success years = 10 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = EXCELLENT trigger = { has_country_flag = realm_encounter_result_success has_country_flag = realm_encounter_result_society } add_modifier = { modifier = mega_hivemind_society_success years = 10 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = EXCELLENT trigger = { has_country_flag = realm_encounter_result_success has_country_flag = realm_encounter_result_engineering } add_modifier = { modifier = mega_hivemind_engineering_success years = 10 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = EXCELLENT trigger = { has_country_flag = realm_encounter_result_success has_country_flag = realm_encounter_result_breeding } add_modifier = { modifier = mega_hivemind_breeding_success years = 10 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = "UniqueAscensionPerksEvents.114.Perfect" trigger = { has_country_flag = realm_encounter_result_perfect has_country_flag = realm_encounter_result_farmer } add_modifier = { modifier = mega_hivemind_food_perfect years = 10 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = "UniqueAscensionPerksEvents.114.Perfect" trigger = { has_country_flag = realm_encounter_result_perfect has_country_flag = realm_encounter_result_physics } add_modifier = { modifier = mega_hivemind_physics_perfect years = 10 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = "UniqueAscensionPerksEvents.114.Perfect" trigger = { has_country_flag = realm_encounter_result_perfect has_country_flag = realm_encounter_result_society } add_modifier = { modifier = mega_hivemind_society_perfect years = 10 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = "UniqueAscensionPerksEvents.114.Perfect" trigger = { has_country_flag = realm_encounter_result_perfect has_country_flag = realm_encounter_result_engineering } add_modifier = { modifier = mega_hivemind_engineering_perfect years = 10 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = "UniqueAscensionPerksEvents.114.Perfect" trigger = { has_country_flag = realm_encounter_result_perfect has_country_flag = realm_encounter_result_breeding } add_modifier = { modifier = mega_hivemind_breeding_perfect years = 10 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = "UniqueAscensionPerksEvents.114.Damn" trigger = { has_country_flag = realm_encounter_result_failure has_country_flag = realm_encounter_result_farmer } add_modifier = { modifier = mega_hivemind_food_failure years = 5 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = "UniqueAscensionPerksEvents.114.Damn" trigger = { has_country_flag = realm_encounter_result_failure has_country_flag = realm_encounter_result_physics } add_modifier = { modifier = mega_hivemind_physics_failure years = 5 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = "UniqueAscensionPerksEvents.114.Damn" trigger = { has_country_flag = realm_encounter_result_failure has_country_flag = realm_encounter_result_society } add_modifier = { modifier = mega_hivemind_society_failure years = 5 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = "UniqueAscensionPerksEvents.114.Damn" trigger = { has_country_flag = realm_encounter_result_failure has_country_flag = realm_encounter_result_engineering } add_modifier = { modifier = mega_hivemind_engineering_failure years = 5 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = "UniqueAscensionPerksEvents.114.Damn" trigger = { has_country_flag = realm_encounter_result_failure has_country_flag = realm_encounter_result_breeding } add_modifier = { modifier = mega_hivemind_breeding_failure years = 5 } hidden_effect = { realm_clear_flags = yes } }
	option = { name = EXCELLENT trigger = { has_country_flag = realm_swarm_group_success has_country_flag = realm_swarm_group_small }
		hidden_effect = {
			# realm_swarm_small_group_success = yes
			realm_clear_flags = yes
			get_capital_planet = yes
			create_fleet = {
				name = "Domesticated Swarm"
				settings = { spawn_debris = no can_upgrade = no can_change_composition = no uses_naval_capacity = no can_disband = no }
				effect = {
					set_owner = prev
					while = { count = 5 create_ship = { name = "" design = "NAME_Swarm_Large" graphical_culture = "swarm_01" } }
					while = { count = 4 create_ship = { name = "" design = "NAME_Swarm_Carrier" graphical_culture = "swarm_01" } }
					while = { count = 17 create_ship = { name = "" design = "NAME_Swarm_Small" graphical_culture = "swarm_01" } }
					set_location = { target = event_target:capital_planet distance = 250 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range = 1000
					set_aggro_range_measure_from = self
				}
			}
		}
	}
	option = { name = EXCELLENT trigger = { has_country_flag = realm_swarm_group_success has_country_flag = realm_swarm_group_medium }
		hidden_effect = {
			# realm_swarm_medium_group_success = yes
			realm_clear_flags = yes
			get_capital_planet = yes
			create_fleet = {
				name = "Domesticated Swarm"
				settings = { spawn_debris = no can_upgrade = no can_change_composition = no uses_naval_capacity = no can_disband = no }
				effect = {
					set_owner = prev
					create_ship = { name = random design = "NAME_Swarm_Queen" graphical_culture = "swarm_01" }
					while = { count = 10 create_ship = { name = "" design = "NAME_Swarm_Large" graphical_culture = "swarm_01" } }
					while = { count = 8 create_ship = { name = "" design = "NAME_Swarm_Carrier" graphical_culture = "swarm_01" } }
					while = { count = 35 create_ship = { name = "" design = "NAME_Swarm_Small" graphical_culture = "swarm_01" } }
					set_location = { target = event_target:capital_planet distance = 250 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range = 1000
					set_aggro_range_measure_from = self
				}
			}
		}
	}
	option = { name = EXCELLENT trigger = { has_country_flag = realm_swarm_group_success has_country_flag = realm_swarm_group_big }
		hidden_effect = {
			# realm_swarm_big_group_success = yes
			realm_clear_flags = yes
			get_capital_planet = yes
			create_fleet = {
				name = "Domesticated Swarm"
				settings = { spawn_debris = no can_upgrade = no can_change_composition = no uses_naval_capacity = no can_disband = no }
				effect = {
					set_owner = prev
					while = { count = 3 create_ship = { name = "" design = "NAME_Swarm_Queen" graphical_culture = "swarm_01" } }
					while = { count = 20 create_ship = { name = "" design = "NAME_Swarm_Large" graphical_culture = "swarm_01" } }
					while = { count = 16 create_ship = { name = "" design = "NAME_Swarm_Carrier" graphical_culture = "swarm_01" } }
					while = { count = 70 create_ship = { name = "" design = "NAME_Swarm_Small" graphical_culture = "swarm_01" } }
					set_location = { target = event_target:capital_planet distance = 250 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range = 1000
					set_aggro_range_measure_from = self
				}
			}
		}
	}
	option = { name = BATTLESTATIONS trigger = { has_country_flag = realm_swarm_group_failure has_country_flag = realm_swarm_group_small }
		hidden_effect = {
			# realm_swarm_small_group_failure = yes
			realm_clear_flags = yes
			random_owned_planet = { save_event_target_as = spawn_location }
			create_uncontrolled_swarm_country = yes
			if = { limit = { NOT = { exists = event_target:uncontrolled_swarm } } last_created_country = { save_event_target_as = uncontrolled_swarm } }
			event_target:uncontrolled_swarm = {
				create_fleet = {
					name = "Uncontrolled Swarm"
					settings = { spawn_debris = no can_upgrade = no can_change_composition = no uses_naval_capacity = no can_disband = no }
					effect = {
						set_owner = prev
						while = { count = 3 create_ship = { name = "" design = "NAME_Swarm_Large" graphical_culture = "swarm_01" } }
						while = { count = 2 create_ship = { name = "" design = "NAME_Swarm_Carrier" graphical_culture = "swarm_01" } }
						while = { count = 14 create_ship = { name = "" design = "NAME_Swarm_Small" graphical_culture = "swarm_01" } }
						set_location = { target = event_target:spawn_location distance = 250 angle = random }
						set_fleet_stance = aggressive
						set_aggro_range = 1000
						set_aggro_range_measure_from = self
					}
				}
			}
		}
	}
	option = { name = BATTLESTATIONS trigger = { has_country_flag = realm_swarm_group_failure has_country_flag = realm_swarm_group_medium }
		hidden_effect = {
			# realm_swarm_medium_group_failure = yes
			realm_clear_flags = yes
			random_owned_planet = { save_event_target_as = spawn_location }
			create_uncontrolled_swarm_country = yes
			if = { limit = { NOT = { exists = event_target:uncontrolled_swarm } } last_created_country = { save_event_target_as = uncontrolled_swarm } }
			event_target:uncontrolled_swarm = {
				create_fleet = {
					name = "Uncontrolled Swarm"
					settings = { spawn_debris = no can_upgrade = no can_change_composition = no uses_naval_capacity = no can_disband = no }
					effect = {
						set_owner = prev
						create_ship = { name = random design = "NAME_Swarm_Queen" graphical_culture = "swarm_01" }
						while = { count = 7 create_ship = { name = "" design = "NAME_Swarm_Large" graphical_culture = "swarm_01" } }
						while = { count = 6 create_ship = { name = "" design = "NAME_Swarm_Carrier" graphical_culture = "swarm_01" } }
						while = { count = 26 create_ship = { name = "" design = "NAME_Swarm_Small" graphical_culture = "swarm_01" } }
						set_location = { target = event_target:spawn_location distance = 250 angle = random }
						set_fleet_stance = aggressive
						set_aggro_range = 1000
						set_aggro_range_measure_from = self
					}
				}
			}
		}
	}
	option = { name = BATTLESTATIONS trigger = { has_country_flag = realm_swarm_group_failure has_country_flag = realm_swarm_group_big }
		hidden_effect = {
			# realm_swarm_big_group_failure = yes
			realm_clear_flags = yes
			random_owned_planet = { save_event_target_as = spawn_location }
			create_uncontrolled_swarm_country = yes
			if = { limit = { NOT = { exists = event_target:uncontrolled_swarm } } last_created_country = { save_event_target_as = uncontrolled_swarm } }
			event_target:uncontrolled_swarm = {
				create_fleet = {
					name = "Uncontrolled Swarm"
					settings = { spawn_debris = no can_upgrade = no can_change_composition = no uses_naval_capacity = no can_disband = no }
					effect = {
						set_owner = prev
						while = { count = 2 create_ship = { name = "" design = "NAME_Swarm_Queen" graphical_culture = "swarm_01" } }
						while = { count = 14 create_ship = { name = "" design = "NAME_Swarm_Large" graphical_culture = "swarm_01" } }
						while = { count = 11 create_ship = { name = "" design = "NAME_Swarm_Carrier" graphical_culture = "swarm_01" } }
						while = { count = 45 create_ship = { name = "" design = "NAME_Swarm_Small" graphical_culture = "swarm_01" } }
						set_location = { target = event_target:spawn_location distance = 250 angle = random }
						set_fleet_stance = aggressive
						set_aggro_range = 1000
						set_aggro_range_measure_from = self
					}
				}
			}
		}
	}
	option = { name = "UniqueAscensionPerksEvents.114.Wait" trigger = { has_country_flag = realm_destination_technology }
		# realm_select_technology = yes
		hidden_effect = {
			realm_clear_flags = yes
			set_country_flag = realm_swarm_group_big
			random_list = {
				80 = {
					set_country_flag = realm_technology_success
					random_list = {
						10 = {
							modifier = { factor = 0 OR = { has_technology = tech_psi_jump_drive_1 has_country_flag = realm_technology_psi_jump_drive_given } }
							set_country_flag = realm_technology_psi_jump_drive
							set_country_flag = realm_technology_psi_jump_drive_given
						}
						10 = {
							modifier = { factor = 0 OR = { has_technology = tech_dark_matter_deflector has_country_flag = realm_tech_dark_matter_deflector_given } }
							set_country_flag = realm_tech_dark_matter_deflector
							set_country_flag = realm_tech_dark_matter_deflector_given
						}
						10 = {
							modifier = { factor = 0 OR = { has_technology = tech_dark_matter_power_core has_country_flag = realm_tech_dark_matter_power_core_given } }
							set_country_flag = realm_tech_dark_matter_power_core
							set_country_flag = realm_tech_dark_matter_power_core_given
						}
						10 = {
							modifier = { factor = 0 OR = { has_technology = tech_dark_matter_propulsion has_country_flag = realm_tech_dark_matter_propulsion_given } }
							set_country_flag = realm_tech_dark_matter_propulsion
							set_country_flag = realm_tech_dark_matter_propulsion_given
						}

						10 = {
							modifier = { factor = 0 OR = { has_technology = tech_mineral_extraction has_country_flag = realm_tech_mineral_extraction_given } }
							set_country_flag = realm_tech_mineral_extraction
							set_country_flag = realm_tech_mineral_extraction_given
						}
						10 = {
							modifier = { factor = 0 OR = { has_technology = tech_food_farming has_country_flag = realm_tech_food_farming_given } }
							set_country_flag = realm_tech_food_farming
							set_country_flag = realm_tech_food_farming_given
						}
						10 = {
							modifier = { factor = 0 OR = { has_technology = tech_energy_producing has_country_flag = realm_tech_energy_producing_given } }
							set_country_flag = realm_tech_energy_producing
							set_country_flag = realm_tech_energy_producing_given
						}
						10 = {
							modifier = { factor = 0 OR = { has_technology = tech_habitability_mutation has_country_flag = realm_tech_habitability_mutation_given } }
							set_country_flag = realm_tech_habitability_mutation
							set_country_flag = realm_tech_habitability_mutation_given
						}
						10 = { set_country_flag = realm_tech_points	}
					}
				}
				20 = { set_country_flag = realm_technology_failed }
			}
			country_event = { id = UniqueAscensionPerksEvents.114 }
		}
	}
	option = { name = "UniqueAscensionPerksEvents.114.Bad" trigger = { has_country_flag = realm_technology_failed } hidden_effect = { realm_clear_flags = yes } }
	option = { name = EXCELLENT trigger = { has_country_flag = realm_technology_success has_country_flag = realm_technology_psi_jump_drive } add_research_option = tech_psi_jump_drive_1 realm_clear_flags = yes }
	option = { name = EXCELLENT trigger = { has_country_flag = realm_technology_success has_country_flag = realm_tech_dark_matter_deflector } add_research_option = tech_dark_matter_deflector realm_clear_flags = yes }
	option = { name = EXCELLENT trigger = { has_country_flag = realm_technology_success has_country_flag = realm_tech_dark_matter_power_core } add_research_option = tech_dark_matter_power_core realm_clear_flags = yes }
	option = { name = EXCELLENT trigger = { has_country_flag = realm_technology_success has_country_flag = realm_tech_dark_matter_propulsion } add_research_option = tech_dark_matter_propulsion realm_clear_flags = yes }
	option = { name = EXCELLENT trigger = { has_country_flag = realm_technology_success has_country_flag = realm_tech_mineral_extraction } add_research_option = tech_mineral_extraction realm_clear_flags = yes }
	option = { name = EXCELLENT trigger = { has_country_flag = realm_technology_success has_country_flag = realm_tech_food_farming } add_research_option = tech_food_farming realm_clear_flags = yes }
	option = { name = EXCELLENT trigger = { has_country_flag = realm_technology_success has_country_flag = realm_tech_energy_producing } add_research_option = tech_energy_producing realm_clear_flags = yes }
	option = { name = EXCELLENT trigger = { has_country_flag = realm_technology_success has_country_flag = realm_tech_habitability_mutation } add_research_option = tech_habitability_mutation realm_clear_flags = yes }
	option = { name = EXCELLENT trigger = { has_country_flag = realm_technology_success has_country_flag = realm_tech_points }
		# realm_technology_points = yes
		add_monthly_resource_mult = { resource = society_research value = 1 min = 14000 max = 14000 }
		add_monthly_resource_mult = { resource = society_research value = 1 min = 14000 max = 14000 }
		add_monthly_resource_mult = { resource = society_research value = 1 min = 14000 max = 14000 }
		realm_clear_flags = yes
	}
	option = { name = "UniqueAscensionPerksEvents.114.Activate" trigger = { has_country_flag = realm_destination_dropper }	allow = { resource_stockpile_compare = { resource = food value > 1500 } } add_resource = { energy = -1500 } realm_destination_dropper = yes }
	option = { name = OK trigger = { has_country_flag = realm_destination_dropper_activated has_country_flag = realm_destination_dropper_nothing } custom_tooltip = "Nothing. " realm_destination_restart_or_not = yes }
	option = { name = OK trigger = { has_country_flag = realm_destination_dropper_activated has_country_flag = realm_destination_dropper_food_bad } add_resource = { food = 100 } realm_destination_restart_or_not = yes }
	option = { name = OK trigger = { has_country_flag = realm_destination_dropper_activated has_country_flag = realm_destination_dropper_food_good } add_resource = { food = 1500 } realm_destination_restart_or_not = yes }
	option = { name = OK trigger = { has_country_flag = realm_destination_dropper_activated has_country_flag = realm_destination_dropper_gases } add_resource = { exotic_gases = 250 } realm_destination_restart_or_not = yes }
	option = { name = OK trigger = { has_country_flag = realm_destination_dropper_activated has_country_flag = realm_destination_dropper_motes } add_resource = { volatile_motes = 250 } realm_destination_restart_or_not = yes }
	option = { name = OK trigger = { has_country_flag = realm_destination_dropper_activated has_country_flag = realm_destination_dropper_alloys } add_resource = { alloys = 750 } realm_destination_restart_or_not = yes }
	option = { name = OK trigger = { has_country_flag = realm_destination_dropper_activated has_country_flag = realm_destination_dropper_minerals } add_resource = { minerals = 1000 } realm_destination_restart_or_not = yes }
	option = { name = OK trigger = { has_country_flag = realm_destination_dropper_activated has_country_flag = realm_destination_dropper_energy } add_resource = { energy = 1000 } realm_destination_restart_or_not = yes }
	option = { name = OK trigger = { has_country_flag = realm_destination_dropper_activated has_country_flag = realm_destination_dropper_society } add_monthly_resource_mult = { resource = society_research value = 1 min = 3000 max = 3000 } realm_destination_restart_or_not = yes }
	option = { name = OK trigger = { has_country_flag = realm_destination_dropper_activated has_country_flag = realm_destination_dropper_engineering } add_monthly_resource_mult = { resource = engineering_research value = 1 min = 3000 max = 3000 } realm_destination_restart_or_not = yes }
	option = { name = OK trigger = { has_country_flag = realm_destination_dropper_activated has_country_flag = realm_destination_dropper_physics } add_monthly_resource_mult = { resource = physics_research value = 1 min = 3000 max = 3000 } realm_destination_restart_or_not = yes }
	option = { name = OK trigger = { has_country_flag = realm_destination_dropper_activated has_country_flag = realm_destination_dropper_crystals } add_resource = { rare_crystals = 250 } realm_destination_restart_or_not = yes }
	option = { trigger = { realm_can_normal_exit = yes } name = "UniqueAscensionPerksEvents.113.b" ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.115
	title = "UniqueAscensionPerksEvents.115.Name"
	desc = "UniqueAscensionPerksEvents.115.Desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = mega_hive_mind_room }
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.115.a" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.112 } } }
	option = { name = OK ai_chance = { factor = 0.1 } }
}

######################################
#									 #
######### Aggressive Hivemind ########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.120
	title = "ap_aggressive_hivemind"
	desc = "ap_aggressive_hivemind_desc"
	picture = GFX_evt_aggressive_hivemind
	show_sound = event_ai_started
	location = from
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT enable_special_project = { name = AGGRESSIVE_HIVEMIND location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.121
	title = "UniqueAscensionPerksEvents.121.Name"
	desc = "UniqueAscensionPerksEvents.121.Desc"
	picture = GFX_evt_aggressive_hivemind
	show_sound = event_ai_started
	location = from
	is_triggered_only = yes
	trigger = { exists = from }
	immediate = { set_country_flag = aggressive_hivemind_project }
	option = {
		name = EXCELLENT
		custom_tooltip = "ap_recycling_drones_tooltip_3"
		hidden_effect = {
			country_event = { id = UniqueAscensionPerksEvents.3125 days = 30 random = 30 }
			from.solar_system = { set_star_flag = recycle_fleet_spawn_system }
		}
	}
}

# on_ship_destroyed_perp
# TODO: very limited to vanilla classes, make somehow more dynamically with less performance impact
country_event = {
	id = UniqueAscensionPerksEvents.122
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_ai = yes # added v3.4
		is_country_type = default
		has_ascension_perk = ap_aggressive_hivemind
		has_country_flag = aggressive_hivemind_project
		# event_target:global_event_country = { check_variable = { which = ap_aggressive_hivemind value > 0 } }
		exists = fromfrom
	}
	immediate = {
		random = {
			chance = 25
			fromfrom = {
				# perform_aggressive_hivemind_ship_check = yes
				if = { limit = { is_ship_class = shipclass_military_station }
					switch = {
						trigger = is_ship_size
						military_station_small		= { random = { chance = 60 root = { change_variable = { which = ship_corvette_infested value = 1 } } } }
						military_station_medium		= { random = { chance = 50 root = { change_variable = { which = ship_destroyer_infested value = 1 } } } }
						military_station_large		= { random = { chance = 40 root = { change_variable = { which = ship_cruiser_infested value = 1 } } } }
						ion_cannon					= { random = { chance = 30 root = { change_variable = { which = ship_battleship_infested value = 1 } } } }
					}
				} else_if = { limit = { is_ship_class = shipclass_military }
					switch = {
						trigger = is_ship_size
						corvette					= { random = { chance = 60 root = { change_variable = { which = ship_corvette_infested value = 1 } } } }
						offspring_corvette			= { random = { chance = 60 root = { change_variable = { which = ship_corvette_infested value = 1 } } } }
						crisis_corvette				= { random = { chance = 60 root = { change_variable = { which = ship_corvette_infested value = 1 } } } }
						pirate_corvette				= { random = { chance = 60 root = { change_variable = { which = ship_corvette_infested value = 1 } } } }
						marauder_corvette			= { random = { chance = 60 root = { change_variable = { which = ship_corvette_infested value = 1 } } } }
						destroyer					= { random = { chance = 50 root = { change_variable = { which = ship_destroyer_infested value = 1 } } } }
						offspring_destroyer			= { random = { chance = 50 root = { change_variable = { which = ship_destroyer_infested value = 1 } } } }
						crisis_destroyer			= { random = { chance = 50 root = { change_variable = { which = ship_destroyer_infested value = 1 } } } }
						pirate_destroyer			= { random = { chance = 50 root = { change_variable = { which = ship_destroyer_infested value = 1 } } } }
						marauder_destroyer			= { random = { chance = 50 root = { change_variable = { which = ship_destroyer_infested value = 1 } } } }
						small_ship_fallen_empire	= { random = { chance = 50 root = { change_variable = { which = ship_destroyer_infested value = 1 } } } }
						cruiser						= { random = { chance = 40 root = { change_variable = { which = ship_cruiser_infested value = 1 } } } }
						offspring_cruiser			= { random = { chance = 40 root = { change_variable = { which = ship_cruiser_infested value = 1 } } } }
						crisis_cruiser				= { random = { chance = 40 root = { change_variable = { which = ship_cruiser_infested value = 1 } } } }
						pirate_cruiser				= { random = { chance = 40 root = { change_variable = { which = ship_cruiser_infested value = 1 } } } }
						marauder_cruiser			= { random = { chance = 40 root = { change_variable = { which = ship_cruiser_infested value = 1 } } } }
						battleship					= { random = { chance = 30 root = { change_variable = { which = ship_battleship_infested value = 1 } } } }
						offspring_battleship		= { random = { chance = 30 root = { change_variable = { which = ship_battleship_infested value = 1 } } } }
						marauder_galleon			= { random = { chance = 30 root = { change_variable = { which = ship_battleship_infested value = 1 } } } }
						large_ship_fallen_empire	= { random = { chance = 30 root = { change_variable = { which = ship_battleship_infested value = 1 } } } }
						titan						= { random = { chance = 20 root = { change_variable = { which = ship_titan_infested value = 1 } } } }
						massive_ship_fallen_empire	= { random = { chance = 20 root = { change_variable = { which = ship_titan_infested value = 1 } } } }
					}
				}
			}
		}
	}
}

# on_yearly_pulse
event = {
	id = UniqueAscensionPerksEvents.123
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_playable_country = {
			has_ascension_perk = ap_aggressive_hivemind
			has_country_flag = aggressive_hivemind_project
		}
	}
	immediate = {
		random_playable_country = {
			limit = {
				has_ascension_perk = ap_aggressive_hivemind
				has_country_flag = aggressive_hivemind_project
				OR = {
					check_variable = { which = ship_corvette_infested value > 1 }
					check_variable = { which = ship_destroyer_infested value > 1 }
					check_variable = { which = ship_cruiser_infested value > 1 }
					check_variable = { which = ship_battleship_infested value > 1 }
					check_variable = { which = ship_titan_infested value > 1 }
				}
			}
			country_event = { id = UniqueAscensionPerksEvents.124 }
		}
	}
}

# on_yearly_pulse
country_event = {
	id = UniqueAscensionPerksEvents.124
	title = "UniqueAscensionPerksEvents.124.Name"
	desc = "UniqueAscensionPerksEvents.124.Desc"
	show_sound = event_ai_started
	picture = GFX_evt_aggressive_hivemind
	location = event_target:recovery_fleet_position
	is_triggered_only = yes
	immediate = {
		# perform_aggressive_hivemind_infested_fleet = yes
		random_system_within_border = {
			limit = { has_star_flag = recycle_fleet_spawn_system }
			star = { save_event_target_as = recovery_fleet_position }
		}
		if = { limit = { NOT = { exists = event_target:recovery_fleet_position } }
			random_system_within_border = {
				limit = { exists = starbase any_system_planet = { is_colony = yes } }
				weights = { base = 1 modifier = { add = 3 is_capital_system = yes } }
				star = { save_event_target_as = recovery_fleet_position }
			}
		}

		create_fleet = {
			name = "Infested Fleet"
			settings = { spawn_debris = no }
			effect = {
				set_owner = prev
				if = { limit = { ROOT = { has_country_flag = aggressive_hivemind_project_upgrade } }
					while = {
						count = root.ship_corvette_infested
						create_ship = { name = random random_existing_design = corvette }
					}
					while = {
						count = root.ship_destroyer_infested
						create_ship = { name = random random_existing_design = destroyer }
					}
					while = {
						count = root.ship_cruiser_infested
						create_ship = { name = random random_existing_design = cruiser }
					}
					while = {
						count = root.ship_battleship_infested
						create_ship = { name = random random_existing_design = battleship }
					}
					while = {
						count = root.ship_titan_infested
						create_ship = { name = random random_existing_design = titan }
					}
				} else = {
					while = {
						count = root.ship_corvette_infested
						create_ship = { name = random design = "Standard Basic Corvette" }
					}
					while = {
						count = root.ship_destroyer_infested
						create_ship = { name = random design = "Standard Basic Destroyer" }
					}
					while = {
						count = root.ship_cruiser_infested
						create_ship = { name = random design = "Standard Basic Cruiser" }
					}
					while = {
						count = root.ship_battleship_infested
						create_ship = { name = random design = "Standard Basic Battleship" }
					}
					while = {
						count = root.ship_titan_infested
						create_ship = { name = random design = "Standard Basic Titan" }
					}
				}
				set_location = { target = event_target:recovery_fleet_position distance = 8 angle = random }
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 1000
				set_fleet_flag = aggressive_hivemind_infested_fleet
			}
		}
	}
	after = {
		set_variable = { which = ship_corvette_infested value = 0 }
		set_variable = { which = ship_destroyer_infested value = 0 }
		set_variable = { which = ship_cruiser_infested value = 0 }
		set_variable = { which = ship_battleship_infested value = 0 }
		set_variable = { which = ship_titan_infested value = 0 }
	}
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.3125
	title = "AGGRESSIVE_HIVEMIND_UPGRADE"
	desc = "AGGRESSIVE_HIVEMIND_UPGRADE_DESC"
	show_sound = event_ai_started
	picture = GFX_evt_aggressive_hivemind
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = {
		get_capital_planet = yes
		set_country_flag = aggressive_hivemind_project_upgrade_added
	}
	option = { name = EXCELLENT enable_special_project = { name = AGGRESSIVE_HIVEMIND_UPGRADE location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.3126
	title = "AGGRESSIVE_HIVEMIND_UPGRADE"
	desc = "UniqueAscensionPerksEvents.3126.Desc"
	show_sound = event_ai_started
	picture = GFX_evt_aggressive_hivemind
	location = capital_scope
	is_triggered_only = yes
	immediate = {
		set_country_flag = aggressive_hivemind_project_upgrade
		give_tech_option_or_progress_effect = { TECH = tech_hive_corvette_hull_1 }
	}
	option = { name = EXCELLENT }
}


######################################
#									 #
########### Spreading Will ###########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.125
	title = "ap_connected_hivemind"
	desc = "ap_connected_hivemind_desc"
	picture = GFX_evt_connected_hivemind
	show_sound = event_psionic
	location = from
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

# Convert all pops on_yearly_pulse
event = {
	id = UniqueAscensionPerksEvents.126
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_playable_country = {
			is_hive_empire = yes
			has_ascension_perk = ap_connected_hivemind
			any_owned_pop = { is_robot_pop = no NOT = { is_same_species = owner_species } }
		}
	}
	immediate = {
		random_playable_country = {
			limit = {
				is_hive_empire = yes
				has_ascension_perk = ap_connected_hivemind
				any_owned_pop = { is_robot_pop = no NOT = { is_same_species = owner_species } }
			}
			every_owned_planet = {
				limit = { any_owned_pop = { is_robot_pop = no NOT = { is_same_species = owner_species } } }
				every_owned_pop = {
					limit = { is_robot_pop = no NOT = { is_same_species = owner_species } }
					prev = { create_pop = { species = owner_species } }
					kill_pop = yes
				}
				# while = {
				# 	limit = { any_owned_pop = { is_robot_pop = no NOT = { is_same_species = owner_species } } }
				# 	create_pop = { species = prevprev }
				# 	random_owned_pop = { limit = { is_robot_pop = no NOT = { is_same_species = owner_species } } kill_pop = yes }
				# }
			}
		}
	}
}


######################################
#									 #
######### Connected Reserves #########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.127
	title = "ap_hivemind_reserve"
	desc = "ap_hivemind_reserve_desc"
	picture = GFX_evt_hivemind_reserve
	show_sound = event_mystic_reveal
	location = from
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

# Decision Ready Notify
# Root = event_target:hivemind_reserve_planet
planet_event = {
	id = UniqueAscensionPerksEvents.3128
	title = "UniqueAscensionPerksEvents.3128.Name"
	desc = "UniqueAscensionPerksEvents.3128.Desc"
	picture = GFX_evt_hivemind_reserve
	show_sound = event_mystic_reveal
	location = root
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	trigger = { exists = owner is_colonizable = no }
	immediate = {
		if = { limit = { NOT = { is_variable_set = hivemind_reserve_happened } }
			set_variable = { which = hivemind_reserve_happened value = 0 }
		}
	}
	option = { name = OK ai_chance = { factor = 0.1 } }
	option = {
		name = "UniqueAscensionPerksEvents.3128.a"
		trigger = { NOT = { has_planet_flag = decision_hivemind_reserve_cooldown } check_variable = { which = hivemind_reserve_happened value < 5 } }
		allow = {
			owner = { resource_stockpile_compare = { resource = food value > 900 } }
			OR = {
				is_owned_by = root
				AND = { solar_system = { exists = space_owner space_owner = { is_same_empire = root } } }
			}
		}
		owner = { add_resource = { food = -900 } }
		custom_tooltip = "UniqueAscensionPerksEvents.3128.a.tooltip"
		add_deposit = d_hivemind_reserve
		set_timed_planet_flag = { flag = decision_hivemind_reserve_cooldown months = 18 }
		planet_event = { id = UniqueAscensionPerksEvents.3128 days = 542 }
		change_variable = { which = hivemind_reserve_happened value = 1 }
	}
}

# MTTH notify
planet_event = {
	id = UniqueAscensionPerksEvents.3129
	title = "UniqueAscensionPerksEvents.3129.Name"
	desc = "UniqueAscensionPerksEvents.3129.Desc"
	picture = GFX_evt_hivemind_reserve
	show_sound = event_mystic_reveal
	location = root
	pre_triggers = { has_owner = yes is_ai = no }
	is_triggered_only = yes
	trigger = {
		exists = owner
		owner = { is_ai = no has_ascension_perk = ap_hivemind_reserve NOT = { has_country_flag = ap_hivemind_reserve_new_pop_no_warning } }
		has_deposit = d_hivemind_reserve
	}
	option = { name = EXCELLENT }
	option = {
		name = "UniqueAscensionPerks.no_message"
		owner = {
			set_country_flag = ap_hivemind_reserve_new_pop_no_warning
			custom_tooltip = "UniqueAscensionPerks.no_message.tooltip"
		}
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.3130
	hide_window = yes
	location = root
	mean_time_to_happen = {
		months = 70
		modifier = { factor = value:hivemind_reserves } # v3.3 using only 5 and scripted value TODO working test
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 1 } }
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 3 } }
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 5 } }
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 7 } }
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 9 } }
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 11 } }
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 13 } }
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 15 } }
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 17 } }
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 19 } }
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 21 } }
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 23 } }
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 25 } }
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 27 } }
		# modifier = { factor = 0.9 count_deposits = { type = d_hivemind_reserve count > 29 } }
	}
	pre_triggers = { has_owner = yes }
	trigger = {
		exists = owner
		owner = { is_hive_empire = yes has_ascension_perk = ap_hivemind_reserve }
		has_deposit = d_hivemind_reserve
	}
	immediate = {
		# random_owned_planet = { limit = { has_deposit = d_hivemind_reserve }
		create_pop = { species = owner_main_species }
		if = { limit = { owner = { NOR = { is_ai = yes has_country_flag = ap_hivemind_reserve_new_pop_no_warning } } }
			planet_event = { id = UniqueAscensionPerksEvents.3129 } # notify
		}
	}
}
