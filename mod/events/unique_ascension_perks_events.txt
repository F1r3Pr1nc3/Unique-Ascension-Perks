namespace = UniqueAscensionPerksEvents

country_event = { # Kill Special Subject Country if their master is dead.
	id = UniqueAscensionPerksEvents.8787
	# is_triggered_only = yes
	mean_time_to_happen = { months = 4 }
	hide_window = yes
	trigger = {
		is_subject = no
		is_unique_perk_special_subject = yes
		OR = {
			has_country_flag = domesticated_spaceborn_alien
			has_country_flag = security_strike_force
			has_country_flag = defense_sentinels
		}

	}
	immediate = {
		if = {
			limit = {
				is_country_type = domesticated_spaceborn_alien
				has_country_flag = domesticated_spaceborn_alien
				NOT = {
					any_relation = {
						merg_is_default_empire = yes
						is_subject = no
						reverse_has_relation_flag = { who = root flag = domesticated_spaceborn_alien }
					}
				}
			}
			destroy_country = yes
		} else_if = {
			limit = {
				is_country_type = security_forces
				has_country_flag = security_strike_force
				NOT = {
					any_relation = {
						merg_is_default_empire = yes
						is_subject = no
						reverse_has_relation_flag = { who = root flag = security_strike_force }
					}
				}
			}
			destroy_country = yes
		} else_if = {
			limit = {
				is_country_type = defense_sentinels
				has_country_flag = defense_sentinels
				NOT = {
					any_relation = {
						merg_is_default_empire = yes
						is_subject = no
						reverse_has_relation_flag = { who = root flag = defense_sentinels }
					}
				}
			}
			destroy_country = yes
		}
	}
}

country_event = { # Remove Special Subject Countries from Any Federations & Galactic Community & Galactic Council
	id = UniqueAscensionPerksEvents.8789
	hide_window = yes
	mean_time_to_happen = { months = 4 }
	# is_triggered_only = yes
	trigger = {
		is_country_type = global_event
		OR = {
			any_federation = { any_member = { is_unique_perk_special_subject = yes } }
			AND = { is_galactic_community_formed = yes any_country = { is_galactic_community_member = yes is_unique_perk_special_subject = yes } }
			AND = { is_galactic_council_established = yes any_country = { is_part_of_galactic_council = yes is_unique_perk_special_subject = yes } }
		}
	}
	immediate = {
		if = {
			limit = { any_federation = { any_member = { is_unique_perk_special_subject = yes } } }
			every_federation = { limit = { any_member = { is_unique_perk_special_subject = yes } }
				every_member = { limit = { is_unique_perk_special_subject = yes } leave_alliance = { override_requirements = yes } }
			}
		}
		if = {
			limit = { is_galactic_community_formed = yes any_country = { is_galactic_community_member = yes is_unique_perk_special_subject = yes } }
			every_playable_country = { limit = { is_galactic_community_member = yes is_unique_perk_special_subject = yes } remove_from_galactic_community = yes }
		}
		if = {
			limit = { is_galactic_council_established = yes any_country = { is_part_of_galactic_council = yes is_unique_perk_special_subject = yes } }
			every_playable_country = { limit = { is_part_of_galactic_council = yes is_unique_perk_special_subject = yes } remove_from_galactic_council = yes }
		}
	}
}

# Backup Special Deposits before Terraform (maybe conflicts with similar events).
# From = Terraforming country
planet_event = {
	id = UniqueAscensionPerksEvents.8999
	is_triggered_only = yes
	hide_window = yes
	# mean_time_to_happen = { months = 1 }
	pre_triggers = { has_owner = yes }
	trigger = {
		exists = from
		has_deposit = yes
		from = { OR = { is_gestalt = yes is_hive_empire = yes is_machine_empire = yes } }
		OR = {
			# Vanilla
			AND = {
				from = { is_hive_empire = yes }
				OR = {
					has_deposit = d_valley_of_zanaam
					has_deposit = d_collapsed_burrows
					has_deposit = d_spawning_complex_blocker
				}
			}
			has_deposit = d_organic_landfill
			has_deposit = d_central_spire
			has_deposit = d_cryonic_clones
			has_deposit = d_underground_farm
			has_deposit = d_underground_mine
			has_deposit = d_underground_generator
			has_deposit = d_underground_contact_zone
			has_deposit = d_portal_research_zone
			has_deposit = d_portal_research_zone_gestalt
			has_deposit = d_egg_cracking
			# has_deposit = d_the_zone
			# has_deposit = d_ancient_particle_accelerator
			# has_deposit = d_odd_factory
			# has_deposit = d_underground_vault
			# has_deposit = d_underground_vault_2
			## Keept by Vanilla for Machine & Hive
			# has_deposit = d_dust_caverns
			# has_deposit = d_dust_desert
			# has_deposit = d_bubbling_swamp
			# has_deposit = d_fuming_bog
			# has_deposit = d_crystalline_caverns
			# has_deposit = d_crystal_forest
			# has_deposit = d_crystal_reef
			# has_deposit = d_betharian_deposit
			# has_deposit = d_alien_pets_deposit
			## Keept by Vanilla for hive
			# has_deposit = d_tree_of_life_home
			# has_deposit = d_tree_of_life_colony
			# has_deposit = d_lithoid_crater
			# has_deposit = d_progenitor
			# UAP
			AND = {
				from = {
					# is_hive_empire = yes
					OR = {
						has_ascension_perk = ap_hivemind_reserve
						has_ascension_perk = ap_pyramidal_society
						has_country_flag = ap_pyramidal_society
					}
				}
				OR = {
					has_deposit = d_hivemind_reserve
					has_deposit = d_district_queen
					has_deposit = d_district_nursery
					has_deposit = d_district_entrepot
					has_deposit = d_district_forest
				}
			}
			AND = {
				from = {
					# is_machine_empire = yes
					OR = {
						# has_ascension_perk = ap_robot_command
						has_ascension_perk = ap_pyramidal_society
						has_country_flag = ap_pyramidal_society
					}
				}
				OR = {
					has_deposit = d_district_foundry
					has_deposit = d_district_security
					has_deposit = d_district_upgrade
					has_deposit = d_district_recycling
				}
			}
		}
	}
	immediate = {
		if = { limit = { from = { is_hive_empire = yes } }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_hivemind_reserve		} } variable = d_hivemind_reserve }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_queen		} } variable = d_district_queen }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_nursery		} } variable = d_district_nursery }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_entrepot		} } variable = d_district_entrepot }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_forest		} } variable = d_district_forest }
			# Vanilla
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_valley_of_zanaam				} } variable = d_valley_of_zanaam }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_collapsed_burrows				} } variable = d_collapsed_burrows }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_spawning_complex_blocker		} } variable = d_spawning_complex_blocker }
		} else_if = { limit = { from = { is_machine_empire = yes } }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_foundry		} } variable = d_district_foundry }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_security		} } variable = d_district_security }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_upgrade		} } variable = d_district_upgrade }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_recycling	} } variable = d_district_recycling }
		}
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_organic_landfill				} } variable = d_organic_landfill }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_central_spire					} } variable = d_central_spire }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_cryonic_clones				} } variable = d_cryonic_clones }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_underground_farm				} } variable = d_underground_farm }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_underground_mine				} } variable = d_underground_mine }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_underground_generator			} } variable = d_underground_generator }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_underground_contact_zone		} } variable = d_underground_contact_zone }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_portal_research_zone			} } variable = d_portal_research_zone }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_portal_research_zone_gestalt	} } variable = d_portal_research_zone_gestalt }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_egg_cracking					} } variable = d_egg_cracking }
		# export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_the_zone						} } variable = d_the_zone }
		# export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_odd_factory					} } variable = d_odd_factory }
		# export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_ancient_particle_accelerator	} } variable = d_ancient_particle_accelerator }
		# export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_underground_vault				} } variable = d_underground_vault }
		# export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_underground_vault_2			} } variable = d_underground_vault_2 }
	}
}

# Reset Special Deposits after Terraform.
# From = Terraforming country
planet_event = {
	id = UniqueAscensionPerksEvents.9000
	is_triggered_only = yes
	hide_window = yes
	# mean_time_to_happen = { months = 1 }
	pre_triggers = { has_owner = yes }
	trigger = {
		exists = from
		from = { OR = { is_gestalt = yes is_hive_empire = yes is_machine_empire = yes } }
		OR = {
			# Vanilla
			is_variable_set = d_valley_of_zanaam
			is_variable_set = d_collapsed_burrows
			is_variable_set = d_spawning_complex_blocker
			is_variable_set = d_organic_landfill
			is_variable_set = d_central_spire
			is_variable_set = d_cryonic_clones
			is_variable_set = d_underground_farm
			is_variable_set = d_underground_mine
			is_variable_set = d_underground_generator
			is_variable_set = d_underground_contact_zone
			is_variable_set = d_portal_research_zone
			is_variable_set = d_portal_research_zone_gestalt
			is_variable_set = d_egg_cracking
			# is_variable_set = d_the_zone
			# is_variable_set = d_odd_factory
			# is_variable_set = d_ancient_particle_accelerator
			# is_variable_set = d_underground_vault
			# is_variable_set = d_underground_vault_2
			# UAP
			AND = {
				merg_is_hive_world = yes
				from = {
					# is_hive_empire = yes
					OR = {
						has_ascension_perk = ap_hivemind_reserve
						has_ascension_perk = ap_pyramidal_society
						has_country_flag = ap_pyramidal_society
					}
				}
				OR = {
					is_variable_set = d_hivemind_reserve
					is_variable_set = d_district_queen
					is_variable_set = d_district_nursery
					is_variable_set = d_district_entrepot
					is_variable_set = d_district_forest
				}
			}
			AND = {
				is_planet_class = pc_machine
				from = {
					# is_machine_empire = yes
					OR = {
						# has_ascension_perk = ap_robot_command
						has_ascension_perk = ap_pyramidal_society
						has_country_flag = ap_pyramidal_society
					}
				}
				OR = {
					is_variable_set = d_district_foundry
					is_variable_set = d_district_security
					is_variable_set = d_district_upgrade
					is_variable_set = d_district_recycling
				}
			}
			# is_planet_class = pc_arcology # TODO WHICH MOD?
		}
		# NOT = { has_planet_flag = mod_deposits_restored }
	}
	immediate = {
		# set_planet_flag = mod_deposits_restored
		if = { limit = { merg_is_hive_world = yes }
			if = { limit = { is_variable_set = d_hivemind_reserve	NOT = { has_deposit = d_hivemind_reserve } } while = { count = d_hivemind_reserve	add_deposit = d_hivemind_reserve } clear_variable = d_hivemind_reserve }
			if = { limit = { is_variable_set = d_district_queen		NOT = { has_deposit = d_district_queen } } while = { count = d_district_queen		add_deposit = d_district_queen } clear_variable = d_district_queen }
			if = { limit = { is_variable_set = d_district_nursery	NOT = { has_deposit = d_district_nursery } } while = { count = d_district_nursery	add_deposit = d_district_nursery } clear_variable = d_district_nursery }
			if = { limit = { is_variable_set = d_district_entrepot	NOT = { has_deposit = d_district_entrepot } } while = { count = d_district_entrepot	add_deposit = d_district_entrepot } clear_variable = d_district_entrepot }
			if = { limit = { is_variable_set = d_district_forest	NOT = { has_deposit = d_district_forest } } while = { count = d_district_forest		add_deposit = d_district_forest } clear_variable = d_district_forest }
			# Vanilla
			if = { limit = { is_variable_set = d_valley_of_zanaam	NOT = { has_deposit = d_valley_of_zanaam } } while = { count = d_valley_of_zanaam			add_deposit = d_valley_of_zanaam } clear_variable = d_valley_of_zanaam }
			if = { limit = { is_variable_set = d_collapsed_burrows	NOT = { has_deposit = d_collapsed_burrows } } while = { count = d_collapsed_burrows			add_deposit = d_collapsed_burrows } clear_variable = d_collapsed_burrows }
			if = { limit = { is_variable_set = d_spawning_complex_blocker NOT = { has_deposit = d_spawning_complex_blocker } } while = { count = d_spawning_complex_blocker add_deposit = d_spawning_complex_blocker } clear_variable = d_spawning_complex_blocker }
		} else_if = { limit = { is_planet_class = pc_machine }
			if = { limit = { is_variable_set = d_district_foundry	NOT = { has_deposit = d_district_foundry } } while = { count = d_district_foundry	add_deposit = d_district_foundry } clear_variable = d_district_foundry }
			if = { limit = { is_variable_set = d_district_security	NOT = { has_deposit = d_district_security } } while = { count = d_district_security	add_deposit = d_district_security } clear_variable = d_district_security }
			if = { limit = { is_variable_set = d_district_upgrade	NOT = { has_deposit = d_district_upgrade } } while = { count = d_district_upgrade	add_deposit = d_district_upgrade } clear_variable = d_district_upgrade }
			if = { limit = { is_variable_set = d_district_recycling	NOT = { has_deposit = d_district_recycling } } while = { count = d_district_recycling	add_deposit = d_district_recycling } clear_variable = d_district_recycling }
		}
		if = { limit = { is_variable_set = d_organic_landfill		NOT = { has_deposit = d_organic_landfill } } while = { count = d_organic_landfill	add_deposit = d_organic_landfill } clear_variable = d_organic_landfill }
		if = { limit = { is_variable_set = d_central_spire			NOT = { has_deposit = d_central_spire } } while = { count = d_central_spire				add_deposit = d_central_spire } clear_variable = d_central_spire }
		if = { limit = { is_variable_set = d_cryonic_clones			NOT = { has_deposit = d_cryonic_clones } } while = { count = d_cryonic_clones				add_deposit = d_cryonic_clones } clear_variable = d_cryonic_clones }
		if = { limit = { is_variable_set = d_underground_farm		NOT = { has_deposit = d_underground_farm } } while = { count = d_underground_farm			add_deposit = d_underground_farm } clear_variable = d_underground_farm }
		if = { limit = { is_variable_set = d_underground_mine		NOT = { has_deposit = d_underground_mine } } while = { count = d_underground_mine			add_deposit = d_underground_mine } clear_variable = d_underground_mine }
		if = { limit = { is_variable_set = d_underground_generator	NOT = { has_deposit = d_underground_generator } } while = { count = d_underground_generator	add_deposit = d_underground_generator } clear_variable = d_underground_generator }
		if = { limit = { is_variable_set = d_underground_contact_zone NOT = { has_deposit = d_underground_contact_zone } } while = { count = d_underground_contact_zone	add_deposit = d_underground_contact_zone } clear_variable = d_underground_contact_zone }
		if = { limit = { is_variable_set = d_portal_research_zone	NOT = { has_deposit = d_portal_research_zone } } while = { count = d_portal_research_zone	add_deposit = d_portal_research_zone_gestalt } clear_variable = d_portal_research_zone }
		if = { limit = { is_variable_set = d_portal_research_zone_gestalt NOT = { has_deposit = d_portal_research_zone_gestalt } } while = { count = d_portal_research_zone_gestalt add_deposit = d_portal_research_zone_gestalt } clear_variable = d_portal_research_zone_gestalt }
		if = { limit = { is_variable_set = d_egg_cracking			NOT = { has_deposit = d_egg_cracking } } while = { count = d_egg_cracking				add_deposit = d_egg_cracking } clear_variable = d_egg_cracking }
		# if = { limit = { is_variable_set = d_the_zone	NOT = { has_deposit = d_the_zone } } while = { count = d_the_zone					add_deposit = d_the_zone } clear_variable = d_the_zone }
		# if = { limit = { is_variable_set = d_odd_factory	NOT = { has_deposit = d_odd_factory } } while = { count = d_odd_factory					add_deposit = d_odd_factory } clear_variable = d_odd_factory }
		# if = { limit = { is_variable_set = d_ancient_particle_accelerator	NOT = { has_deposit = d_ancient_particle_accelerator } } while = { count = d_ancient_particle_accelerator add_deposit = d_ancient_particle_accelerator } clear_variable = d_ancient_particle_accelerator }
		# if = { limit = { is_variable_set = d_underground_vault	NOT = { has_deposit = d_underground_vault } } while = { count = d_underground_vault			add_deposit = d_underground_vault } clear_variable = d_underground_vault }
		# if = { limit = { is_variable_set = d_underground_vault_2	NOT = { has_deposit = d_underground_vault_2 } } while = { count = d_underground_vault_2		add_deposit = d_underground_vault_2 } clear_variable = d_underground_vault_2 }
	}
}

######################################
#									 #
###########  Lost Heritage  ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.20
	title = "ap_lost_heritage"
	desc = "UniqueAscensionPerksEvents.20.Desc"
	show_sound = event_psionic
	picture = GFX_evt_lost_heritage
	location = capital_scope
	is_triggered_only = yes
	immediate = {
		set_spawn_system_batch = begin
		no_scope = {
			spawn_system = {
				min_distance > 620 max_distance <= 640 max_orientation_angle = 90 hyperlane = no initializer = "lh_basic_system"
				effect = { save_event_target_as = lh_basic_system }
			}
			# random_list = {
				# Angles from 140° to 220° are corrupted and will end up with messed cluster and systems spawning very far away.
				# 60 = { spawn_system = { min_distance > 630 max_distance <= 640 min_orientation_angle = 140 max_orientation_angle = 220 hyperlane = no initializer = "lh_basic_system" } }
				# 30 = { spawn_system = { min_distance > 630 max_distance <= 640 min_orientation_angle = 0 max_orientation_angle = 30 hyperlane = no initializer = lh_basic_system } }
				# 20 = { spawn_system = { min_distance > 630 max_distance <= 640 min_orientation_angle = 60 max_orientation_angle = 80 hyperlane = no initializer = lh_basic_system } }
				# 5 = { spawn_system = { min_distance > 630 max_distance <= 640 min_orientation_angle = 110 max_orientation_angle = 115 hyperlane = no initializer = lh_basic_system } }
				# 74 = { spawn_system = { min_distance > 630 max_distance <= 640 min_orientation_angle = 230 max_orientation_angle = 304 hyperlane = no initializer = lh_basic_system } }
				# 30 = { spawn_system = { min_distance > 630 max_distance <= 640 min_orientation_angle = 330 max_orientation_angle = 360 hyperlane = no initializer = lh_basic_system } }
			#}
		}
		# random_system = { limit = { has_star_flag = lh_basic_system_created } remove_star_flag = lh_basic_system_created save_event_target_as = lh_basic_system }
		if = {
			limit = { exists = capital_scope capital_scope = { solar_system = { has_natural_wormhole = yes } } }
			capital_scope.solar_system = {
				closest_system = {
					limit = { exists = space_owner space_owner = { is_same_empire = root } has_natural_wormhole = no }
					save_event_target_as = lh_empire_capital_system
				}
			}
		} else_if = { limit = { exists = capital_scope }
			capital_scope.solar_system = { save_event_target_as = lh_empire_capital_system }
		} else = {
			random_system_within_border = {
				limit = { exists = starbase has_natural_wormhole = no any_system_planet = { is_colony = yes } }
				weights = { base = 1 modifier = { add = 3 is_capital_system = yes } }
				save_event_target_as = lh_empire_capital_system
			}
		}
		event_target:lh_empire_capital_system = {
			event_target:lh_basic_system = {
				# every_system_planet = { set_surveyed = { surveyed = yes surveyor = root } }
				# create_starbase = { size = starbase_outpost owner = root }
				# ROOT = { give_tech_option_or_progress_effect = { TECH = tech_new_systems_localization } }
				# ROOT = { while = { count = 10 spawn_lh_system = yes } }
				prev = { spawn_natural_wormhole = { bypass_type = wormhole random_pos = yes orbit_angle = 360 } }
				spawn_natural_wormhole = { bypass_type = wormhole random_pos = yes orbit_angle = 270 }
				link_wormholes = prev
			}
		}
		set_spawn_system_batch = end
	}
	option = {
		name = EXCELLENT add_research_option = tech_new_systems_localization
		hidden_effect = {
			country_event = { id = distar.13060 scopes = { from = event_target:lh_empire_capital_system } }
		}
	}
}

system_event = {
	id = UniqueAscensionPerksEvents.21
	title = "UniqueAscensionPerksEvents.21.Name"
	desc = "UniqueAscensionPerksEvents.21.Desc"
	picture = GFX_evt_system_localization
	show_sound = event_laboratory_sound
	location = root
	is_triggered_only = yes
	# immediate = { save_event_target_as = located_system }
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.22
	title = "UniqueAscensionPerksEvents.22.Name"
	desc = "UniqueAscensionPerksEvents.22.Desc"
	picture = GFX_evt_system_localization
	show_sound = event_default
	location = capital_scope
	is_triggered_only = yes
	option = {
		name = "UniqueAscensionPerks.lets_again"
		allow = {
			resource_stockpile_compare = { resource = energy value > 5000 }
			resource_stockpile_compare = { resource = sr_dark_matter value > 100 }
			custom_tooltip = { fail_text = "edict_enable_system_localization_req" any_system_within_border = { has_star_flag = lh_basic_system } }
		}
		custom_tooltip = "edict_enable_system_localization_tooltip"
		# add_resource = { energy = -5000 sr_dark_matter = -100 }
		# spawn_lh_system = yes
		country_event = { id = UniqueAscensionPerksEvents.23 }
	}
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.23
	title = "UniqueAscensionPerksEvents.23.Name"
	desc = "UniqueAscensionPerksEvents.23.Desc"
	picture = GFX_evt_system_localization
	show_sound = event_laboratory_sound
	# location = event_target:located_system
	is_triggered_only = yes
	# trigger = {
	# 	custom_tooltip = { fail_text = "edict_enable_system_localization_req" any_system_within_border = { has_star_flag = lh_basic_system } }
	# }
	# immediate = {
	# 	event_target:located_system = { save_event_target_as = located_system }
	# }
	# TODO
	after = {
		if = { limit = { is_variable_set = amount_spawn_lh_systems check_variable = { which = amount_spawn_lh_systems value > 0 } }
			if = { limit = { check_variable = { which = amount_spawn_lh_systems value = 1 } has_global_flag = ap_lost_heritage }
				add_resource = { energy = -500 }
			} else = {
				add_resource = { energy = -5000 sr_dark_matter = -100 mult = amount_spawn_lh_systems }
			}
			while = { count = amount_spawn_lh_systems spawn_lh_system = yes }
			# set_timed_country_flag = { flag = system_localization_cooldown days = @\[ 30 * amount_spawn_lh_systems] }
			# country_event = { id = UniqueAscensionPerksEvents.22 days = @\[ 30 * amount_spawn_lh_systems] }
			clear_variable = amount_spawn_lh_systems
		}
	}
	option = { name = "UniqueAscensionPerksEvents.23.1"		allow = { resource_stockpile_compare = { resource = energy value > 5000 } resource_stockpile_compare = { resource = sr_dark_matter value > 100 } } hidden_effect = { set_timed_country_flag = { flag = system_localization_cooldown months = 1 } country_event = { id = UniqueAscensionPerksEvents.22 days = 30 } set_variable = { which = amount_spawn_lh_systems value = 1 } } }
	option = { name = "UniqueAscensionPerksEvents.23.2"		allow = { resource_stockpile_compare = { resource = energy value > 10000 } resource_stockpile_compare = { resource = sr_dark_matter value > 200 } } hidden_effect = { set_timed_country_flag = { flag = system_localization_cooldown months = 2 } country_event = { id = UniqueAscensionPerksEvents.22 days = 60 } set_variable = { which = amount_spawn_lh_systems value = 2 } } }
	option = { name = "UniqueAscensionPerksEvents.23.3"		allow = { resource_stockpile_compare = { resource = energy value > 15000 } resource_stockpile_compare = { resource = sr_dark_matter value > 300 } } hidden_effect = { set_timed_country_flag = { flag = system_localization_cooldown months = 3 } country_event = { id = UniqueAscensionPerksEvents.22 days = 90 } set_variable = { which = amount_spawn_lh_systems value = 3 } } }
	option = { name = "UniqueAscensionPerksEvents.23.4"		allow = { resource_stockpile_compare = { resource = energy value > 20000 } resource_stockpile_compare = { resource = sr_dark_matter value > 400 } } hidden_effect = { set_timed_country_flag = { flag = system_localization_cooldown months = 4 } country_event = { id = UniqueAscensionPerksEvents.22 days = 120 } set_variable = { which = amount_spawn_lh_systems value = 4 } } }
	option = { name = "UniqueAscensionPerksEvents.23.5"		allow = { resource_stockpile_compare = { resource = energy value > 25000 } resource_stockpile_compare = { resource = sr_dark_matter value > 500 } } hidden_effect = { set_timed_country_flag = { flag = system_localization_cooldown months = 5 } country_event = { id = UniqueAscensionPerksEvents.22 days = 150 } set_variable = { which = amount_spawn_lh_systems value = 5 } } }
	option = { name = "UniqueAscensionPerksEvents.23.6"		allow = { resource_stockpile_compare = { resource = energy value > 30000 } resource_stockpile_compare = { resource = sr_dark_matter value > 600 } } hidden_effect = { set_timed_country_flag = { flag = system_localization_cooldown months = 6 } country_event = { id = UniqueAscensionPerksEvents.22 days = 180 } set_variable = { which = amount_spawn_lh_systems value = 6 } } }
	option = { name = "UniqueAscensionPerksEvents.23.7"		allow = { resource_stockpile_compare = { resource = energy value > 35000 } resource_stockpile_compare = { resource = sr_dark_matter value > 700 } } hidden_effect = { set_timed_country_flag = { flag = system_localization_cooldown months = 7 } country_event = { id = UniqueAscensionPerksEvents.22 days = 210 } set_variable = { which = amount_spawn_lh_systems value = 7 } } }
	option = { name = "UniqueAscensionPerksEvents.23.8"		allow = { resource_stockpile_compare = { resource = energy value > 40000 } resource_stockpile_compare = { resource = sr_dark_matter value > 800 } } hidden_effect = { set_timed_country_flag = { flag = system_localization_cooldown months = 8 } country_event = { id = UniqueAscensionPerksEvents.22 days = 240 } set_variable = { which = amount_spawn_lh_systems value = 8 } } }
	option = { name = "UniqueAscensionPerksEvents.23.9"		allow = { resource_stockpile_compare = { resource = energy value > 45000 } resource_stockpile_compare = { resource = sr_dark_matter value > 900 } } hidden_effect = { set_timed_country_flag = { flag = system_localization_cooldown months = 9 } country_event = { id = UniqueAscensionPerksEvents.22 days = 270 } set_variable = { which = amount_spawn_lh_systems value = 9 } } }
	option = { name = "UniqueAscensionPerksEvents.23.10"	allow = { resource_stockpile_compare = { resource = energy value > 50000 } resource_stockpile_compare = { resource = sr_dark_matter value > 1000 } } hidden_effect = { set_timed_country_flag = { flag = system_localization_cooldown months = 10 } country_event = { id = UniqueAscensionPerksEvents.22 days = 300 } set_variable = { which = amount_spawn_lh_systems value = 10 } } }
	option = { name = "UniqueAscensionPerksEvents.23.cheat"	allow = { resource_stockpile_compare = { resource = energy value > 500 } } trigger = { has_global_flag = ap_lost_heritage } hidden_effect = { set_timed_country_flag = { flag = system_localization_cooldown months = 1 } country_event = { id = UniqueAscensionPerksEvents.22 days = 30 } set_variable = { which = amount_spawn_lh_systems value = 1 } } }
	option = { name = ABORT ai_chance = { factor = 0 } }
}

######################################
#									 #
######## Expandable Knowledge ########
#									 #
######################################
# on_ascension_perk_picked (FALLBACKS)
country_event = {
	id = UniqueAscensionPerksEvents.30
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_ascension_perk = ap_transcendent_learning NOR = { has_ascension_perk = ap_expandable_brain_2 has_country_flag = ap_transcendent_learning_project }
	}
	immediate = {
		# These were former on_yearly_pulse
		# random_playable_country = {
		##	limit = { has_ascension_perk = ap_expandable_brain_2 any_owned_leader = { num_traits < 3 } }
		#	every_owned_leader = { limit = { num_traits < 3 } BR_add_random_leader_trait = yes }
		#}
		# random_playable_country = {
		# 	limit = { has_ascension_perk = ap_expandable_brain_2 NOT = { has_country_flag = ap_expandable_brain_2_project } }
		# 	country_event = { id = UniqueAscensionPerksEvents.3038 days = 30 random = 70 }
		# }
		# random_playable_country = {
		# 	limit = { has_ascension_perk = ap_expandable_brain_2 has_country_flag = ap_expandable_brain_2_project_completed NOT = { has_country_flag = ap_expandable_brain_2_project_2 } }
		# 	country_event = { id = UniqueAscensionPerksEvents.3040 }
		# }
		# random_playable_country = {
		# 	limit = { has_ascension_perk = ap_transcendent_learning NOT = { has_country_flag = ap_transcendent_learning_project } }
		# 	country_event = { id = UniqueAscensionPerksEvents.31 days = 2 random = 5 }
		# }
		country_event = { id = UniqueAscensionPerksEvents.31 days = 30 random = 70 }
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.31
	title = "UniqueAscensionPerksEvents.31.Name"
	desc = "UniqueAscensionPerksEvents.31.Desc"
	show_sound = event_engineered_evolution
	picture = GFX_evt_expandable_brain_1
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = {
		NOR = { has_ascension_perk = ap_expandable_brain_2 has_country_flag = ap_transcendent_learning_project }
	}
	immediate = { get_capital_planet = yes set_country_flag = ap_transcendent_learning_project }
	option = { name = EXCELLENT enable_special_project = { name = EXPANDABLE_BRAIN_1 location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.32
	title = "expandable_brain_1"
	desc = "UniqueAscensionPerksEvents.32.Desc"
	show_sound = event_engineered_evolution
	picture = GFX_evt_expandable_brain_1
	location = capital_scope
	is_triggered_only = yes
	option = {
		name = EXCELLENT
		custom_tooltip = "ALLOW_LEADER_MIN_LVL_2"
		add_modifier = { modifier = expandable_brain_1 }
		hidden_effect = {
			every_owned_leader = { limit = { has_skill < 2 } set_skill = 2 }
			every_pool_leader = { limit = { has_skill < 2 } set_skill = 2 }
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.33
	title = "ap_expandable_brain_1"
	desc = "ap_expandable_brain_1_desc"
	show_sound = event_psionic
	picture = GFX_evt_expandable_brain_2
	location = capital_scope
	is_triggered_only = yes
	option = {
		name = EXCELLENT
		custom_tooltip = "ALLOW_LEADER_MIN_LVL_3"
		custom_tooltip = "ALLOW_LEADER_MIN_TRAIT_2"
		add_research_option = tech_expandable_brain_1
		hidden_effect = {
			every_owned_leader = { if = { limit = { has_skill < 3 } set_skill = 3 } BR_add_random_leader_trait = yes }
			every_pool_leader = { if = { limit = { has_skill < 3 } set_skill = 3 } BR_add_random_leader_trait = yes }
		}
	}
}
# on_tech_increased
country_event = {
	id = UniqueAscensionPerksEvents.34
	title = "tech_expandable_brain_1"
	desc = "UniqueAscensionPerksEvents.34.Desc"
	show_sound = event_psionic
	picture = GFX_evt_expandable_brain_3
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = {
		merg_is_default_empire = yes
		has_technology = tech_expandable_brain_1
		NOT = { has_country_flag = tech_expandable_brain_1_project }
	}
	immediate = {
		set_country_flag = tech_expandable_brain_1_project
		get_capital_planet = yes
	}
	after = {
		enable_special_project = { name = EXPANDABLE_BRAIN_2 location = event_target:capital_planet owner = root }
	}
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.35
	title = "expandable_brain_2"
	desc = "UniqueAscensionPerksEvents.35.Desc"
	show_sound = event_psionic
	picture = GFX_evt_expandable_brain_4
	location = capital_scope
	is_triggered_only = yes
	option = {
		name = EXCELLENT
		custom_tooltip = "ALLOW_LEADER_MIN_LVL_4"
		add_modifier = { modifier = expandable_brain_2 }
		add_research_option = tech_expandable_brain_2
		hidden_effect = {
			every_owned_leader = { limit = { has_skill < 4 } set_skill = 4 }
			every_pool_leader = { limit = { has_skill < 4 } set_skill = 4 }
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.36
	title = "tech_expandable_brain_2"
	desc = "UniqueAscensionPerksEvents.36.Desc"
	show_sound = event_psionic
	picture = GFX_evt_expandable_brain_5
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = {
		merg_is_default_empire = yes
		has_technology = tech_expandable_brain_2
		NOT = { has_country_flag = tech_expandable_brain_2_project }
	}
	immediate = {
		set_country_flag = tech_expandable_brain_2_project
		get_capital_planet = yes
	}
	option = { name = EXCELLENT }
}

# TODO may split them into more AP's
country_event = {
	id = UniqueAscensionPerksEvents.37
	title = "ap_expandable_brain_2"
	desc = "ap_expandable_brain_2_desc"
	show_sound = event_psionic
	picture = GFX_evt_expandable_brain_6
	location = capital_scope
	is_triggered_only = yes
	immediate = {
		every_owned_leader = { if = { limit = { has_skill < 5 } set_skill = 5 } BR_add_random_leader_trait = yes }
		every_pool_leader = { if = { limit = { has_skill < 5 } set_skill = 5 } BR_add_random_leader_trait = yes }
	}
	after = {
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.3038 days = 30 random = 70 } }
	}
	option = { name = "UniqueAscensionPerksEvents.37.Offense" add_modifier = { modifier = expandable_brain_3_offense } custom_tooltip = "ALLOW_LEADER_MIN_LVL_5" custom_tooltip = "ALLOW_LEADER_MIN_TRAIT_3" }
	option = { name = "UniqueAscensionPerksEvents.37.Expansion" add_modifier = { modifier = expandable_brain_3_expansion } custom_tooltip = "ALLOW_LEADER_MIN_LVL_5" custom_tooltip = "ALLOW_LEADER_MIN_TRAIT_3" }
	option = { name = "UniqueAscensionPerksEvents.37.Construction" add_modifier = { modifier = expandable_brain_3_construction } custom_tooltip = "ALLOW_LEADER_MIN_LVL_5" custom_tooltip = "ALLOW_LEADER_MIN_TRAIT_3" }
	option = { name = "UniqueAscensionPerksEvents.37.Production" add_modifier = { modifier = expandable_brain_3_production } custom_tooltip = "ALLOW_LEADER_MIN_LVL_5" custom_tooltip = "ALLOW_LEADER_MIN_TRAIT_3" }
}

country_event = {
	id = UniqueAscensionPerksEvents.3038
	title = "EXPANDABLE_BRAIN_3"
	desc = "EXPANDABLE_BRAIN_3_DESC"
	show_sound = event_engineered_evolution
	picture = GFX_evt_expandable_brain_6
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = { has_ascension_perk = ap_expandable_brain_2 NOT = { has_country_flag = ap_expandable_brain_2_project } }
	immediate = { set_country_flag = ap_expandable_brain_2_project get_capital_planet = yes }
	option = { name = EXCELLENT enable_special_project = { name = EXPANDABLE_BRAIN_3 location = event_target:capital_planet owner = root } }
}

# Final EXPANDABLE_BRAIN_3
country_event = {
	id = UniqueAscensionPerksEvents.3039
	title = "EXPANDABLE_BRAIN_3"
	desc = "UniqueAscensionPerksEvents.3039.Desc"
	show_sound = event_psionic
	picture = GFX_evt_expandable_brain_6
	location = capital_scope
	is_triggered_only = yes
	immediate = {
		# set_country_flag = ap_expandable_brain_2_project_completed
		if = { limit = { NOT = { has_country_flag = ap_expandable_brain_2_project_2 } }
			country_event = { id = UniqueAscensionPerksEvents.3040 days = 60 random = 300 }
		}
	}
	after = {
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.3038 days = 90 random = 150 } }
	}
	option = { name = "UniqueAscensionPerksEvents.37.Offense"		allow = { NOT = { has_modifier = expandable_brain_3_offense } } add_modifier = { modifier = expandable_brain_3_offense } }
	option = { name = "UniqueAscensionPerksEvents.37.Expansion"		allow = { NOT = { has_modifier = expandable_brain_3_expansion } } add_modifier = { modifier = expandable_brain_3_expansion } }
	option = { name = "UniqueAscensionPerksEvents.37.Construction"	allow = { NOT = { has_modifier = expandable_brain_3_construction } } add_modifier = { modifier = expandable_brain_3_construction } }
	option = { name = "UniqueAscensionPerksEvents.37.Production"	allow = { NOT = { has_modifier = expandable_brain_3_production } } add_modifier = { modifier = expandable_brain_3_production } }
}

country_event = {
	id = UniqueAscensionPerksEvents.3040
	title = "EXPANDABLE_BRAIN_4"
	desc = "EXPANDABLE_BRAIN_4_DESC"
	show_sound = event_engineered_evolution
	picture = GFX_evt_expandable_brain_6
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = {
		has_ascension_perk = ap_expandable_brain_2
		# has_country_flag = ap_expandable_brain_2_project_completed
		NOT = { has_country_flag = ap_expandable_brain_2_project_2 }
	}
	immediate = { set_country_flag = ap_expandable_brain_2_project_2 get_capital_planet = yes }
	option = { name = EXCELLENT enable_special_project = { name = EXPANDABLE_BRAIN_4 location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.3041
	title = "EXPANDABLE_BRAIN_4"
	desc = "UniqueAscensionPerksEvents.3041.Desc"
	show_sound = event_psionic
	picture = GFX_evt_expandable_brain_6
	location = capital_scope
	is_triggered_only = yes
	immediate = { set_country_flag = ap_expandable_brain_3_project_completed }
	option = { name = "UniqueAscensionPerksEvents.37.Offense"		allow = { NOT = { has_modifier = expandable_brain_3_offense } } add_modifier = { modifier = expandable_brain_3_offense } }
	option = { name = "UniqueAscensionPerksEvents.37.Expansion"		allow = { NOT = { has_modifier = expandable_brain_3_expansion } } add_modifier = { modifier = expandable_brain_3_expansion } }
	option = { name = "UniqueAscensionPerksEvents.37.Construction"	allow = { NOT = { has_modifier = expandable_brain_3_construction } } add_modifier = { modifier = expandable_brain_3_construction } }
	option = { name = "UniqueAscensionPerksEvents.37.Production"	allow = { NOT = { has_modifier = expandable_brain_3_production } } add_modifier = { modifier = expandable_brain_3_production } }
}
# on_leader_spawned
country_event = {
	id = UniqueAscensionPerksEvents.39
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		OR = {
			has_global_flag = ap_expandable_brain_2
			has_modifier = expandable_brain_1
			has_modifier = expandable_brain_2
			has_ascension_perk = ap_expandable_brain_1
			has_ascension_perk = ap_expandable_brain_2
		}
	}
	immediate = {
		# TODO needs test?
		if = { limit = { OR = { has_modifier = expandable_brain_1 has_global_flag = ap_expandable_brain_2 } from = { has_skill < 2 } } from = { set_skill = 2 } }
		if = { limit = { OR = { has_ascension_perk = ap_expandable_brain_1 has_global_flag = ap_expandable_brain_2 } from = { has_skill < 3 } } from = { set_skill = 3 BR_add_random_leader_trait = yes } }
		if = { limit = { OR = { has_modifier = expandable_brain_2 has_global_flag = ap_expandable_brain_2 } from = { has_skill < 4 } } from = { set_skill = 4 } }
		if = { limit = { OR = { has_ascension_perk = ap_expandable_brain_2 has_global_flag = ap_expandable_brain_2 } from = { has_skill < 5 } } from = { set_skill = 5 BR_add_random_leader_trait = yes } }
	}
}

######################################
#									 #
############  Nano Drones  ###########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.40
	title = "ap_nano_drones"
	desc = "ap_nano_drones_desc"
	show_sound = event_ai_started
	picture = GFX_evt_nano_workers
	location = capital_scope
	is_triggered_only = yes
	option = {
		name = EXCELLENT
		give_tech_option_or_progress_effect = { TECH = tech_auto_drone }
		add_resource = { automatic_drone = 3000 }
		generate_lcluster_clue = yes
	}
}

# on_monthly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.8041
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 2 }
	trigger = {
		has_country_flag = nano_auto_upgrade
		has_ascension_perk = ap_nano_drones
		resource_stockpile_compare = { resource = automatic_drone value > 200 }
	}
	immediate = {
		random_owned_planet = {
			limit = { is_colony = yes is_colonizable = no }
			while = { count = 3
				# nano_drones_auto_upgrade = yes
				random_list = {
					1 = {}
					999 = { modifier = { factor = 0 NOT = { has_building = building_auto_power_plant_1 } } remove_building = building_auto_power_plant_1 add_building = building_auto_power_plant_2 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_power_plant_2 owner = { has_technology = tech_power_plant_3 } } } remove_building = building_auto_power_plant_2 add_building = building_auto_power_plant_3 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_power_plant_3 has_upgraded_capital = yes owner = { has_technology = tech_power_plant_3 } } } remove_building = building_auto_power_plant_3 add_building = building_auto_power_plant_4 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_power_plant_4 has_major_upgraded_capital = yes owner = { has_technology = tech_power_plant_4 } } } remove_building = building_auto_power_plant_4 add_building = building_auto_power_plant_5 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NOT = { has_building = building_auto_farming_complex_1 } } remove_building = building_auto_farming_complex_1 add_building = building_auto_farming_complex_2 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_farming_complex_2 owner = { has_technology = tech_gene_crops } } } remove_building = building_auto_farming_complex_2 add_building = building_auto_farming_complex_3 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_farming_complex_3 has_upgraded_capital = yes owner = { has_technology = tech_gene_crops } } } remove_building = building_auto_farming_complex_3 add_building = building_auto_farming_complex_4 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_farming_complex_4 has_major_upgraded_capital = yes owner = { has_technology = tech_nano_vitality_crops } } } remove_building = building_auto_farming_complex_4 add_building = building_auto_farming_complex_5 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NOT = { has_building = building_auto_mining_complex_1 } } remove_building = building_auto_mining_complex_1 add_building = building_auto_mining_complex_2 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_mining_complex_2 owner = { has_technology = tech_mining_2 } } } remove_building = building_auto_mining_complex_2 add_building = building_auto_mining_complex_3 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_mining_complex_3 has_upgraded_capital = yes owner = { has_technology = tech_mining_2 } } } remove_building = building_auto_mining_complex_3 add_building = building_auto_mining_complex_4 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_mining_complex_4 has_major_upgraded_capital = yes owner = { has_technology = tech_mining_3 } } } remove_building = building_auto_mining_complex_4 add_building = building_auto_mining_complex_5 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NOT = { has_building = building_auto_physics_campus_1 } } remove_building = building_auto_physics_campus_1 add_building = building_auto_physics_campus_2 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_physics_campus_2 owner = { has_technology = tech_physics_2 } } } remove_building = building_auto_physics_campus_2 add_building = building_auto_physics_campus_3 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_physics_campus_3 has_upgraded_capital = yes owner = { has_technology = tech_physics_2 } } } remove_building = building_auto_physics_campus_3 add_building = building_auto_physics_campus_4 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_physics_campus_4 has_major_upgraded_capital = yes owner = { has_technology = tech_physics_3 } } } remove_building = building_auto_physics_campus_4 add_building = building_auto_physics_campus_5 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NOT = { has_building = building_auto_sociological_campus_1 } } remove_building = building_auto_sociological_campus_1 add_building = building_auto_sociological_campus_2 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_sociological_campus_2 owner = { has_technology = tech_society_2 } } } remove_building = building_auto_sociological_campus_2 add_building = building_auto_sociological_campus_3 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_sociological_campus_3 has_upgraded_capital = yes owner = { has_technology = tech_society_2 } } } remove_building = building_auto_sociological_campus_3 add_building = building_auto_sociological_campus_4 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_sociological_campus_4 has_major_upgraded_capital = yes owner = { has_technology = tech_society_3 } } } remove_building = building_auto_sociological_campus_4 add_building = building_auto_sociological_campus_5 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NOT = { has_building = building_auto_engineering_campus_1 } } remove_building = building_auto_engineering_campus_1 add_building = building_auto_engineering_campus_2 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_engineering_campus_2 owner = { has_technology = tech_engineering_2 } } } remove_building = building_auto_engineering_campus_2 add_building = building_auto_engineering_campus_3 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_engineering_campus_3 has_upgraded_capital = yes owner = { has_technology = tech_engineering_2 } } } remove_building = building_auto_engineering_campus_3 add_building = building_auto_engineering_campus_4 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_engineering_campus_4 has_major_upgraded_capital = yes owner = { has_technology = tech_engineering_3 } } } remove_building = building_auto_engineering_campus_4 add_building = building_auto_engineering_campus_5 owner = { add_resource = { automatic_drone = -200 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_nanite_facility_1 has_upgraded_capital = yes owner = { has_ascension_perk = ap_nano_to_nanite resource_stockpile_compare = { resource = automatic_drone value >= 400 } } } } remove_building = building_nanite_facility_1 add_building = building_nanite_facility_2 owner = { add_resource = { automatic_drone = -400 } } }
					999 = { modifier = { factor = 0 NAND = { has_building = building_nanite_facility_2 has_major_upgraded_capital = yes owner = { has_ascension_perk = ap_nano_to_nanite resource_stockpile_compare = { resource = automatic_drone value >= 400 } } } } remove_building = building_nanite_facility_2 add_building = building_nanite_facility_3 owner = { add_resource = { automatic_drone = -400 } } }
					999 = {
						modifier = { factor = 0 NOT = { has_building = building_auto_drone_facility_1 } }
						random_list = {
							1 = {}
							100 = { modifier = { factor = 0 has_upgraded_capital = no } remove_building = building_auto_drone_facility_1 add_building = building_auto_drone_facility_2 owner = { add_resource = { automatic_drone = -200 } } }
							10 = { modifier = { factor = 0 owner = { NOT = { has_technology = tech_power_plant_2 } } } remove_building = building_auto_drone_facility_1 add_building = building_auto_power_plant_1 owner = { add_resource = { automatic_drone = -200 } } }
							10 = { modifier = { factor = 0 owner = { NOT = { has_technology = tech_mining_1 } } } remove_building = building_auto_drone_facility_1 add_building = building_auto_farming_complex_1 owner = { add_resource = { automatic_drone = -200 } } }
							10 = { modifier = { factor = 0 owner = { NOT = { has_technology = tech_eco_simulation } } } remove_building = building_auto_drone_facility_1 add_building = building_auto_farming_complex_1 owner = { add_resource = { automatic_drone = -200 } } }
							10 = { modifier = { factor = 0 owner = { NOT = { has_technology = tech_physics_1 } } } remove_building = building_auto_drone_facility_1 add_building = building_auto_physics_campus_1 owner = { add_resource = { automatic_drone = -200 } } }
							10 = { modifier = { factor = 0 owner = { NOT = { has_technology = tech_society_2 } } } remove_building = building_auto_drone_facility_1 add_building = building_auto_sociological_campus_1 owner = { add_resource = { automatic_drone = -200 } } }
							10 = { modifier = { factor = 0 owner = { NOT = { has_technology = tech_engineering_2 } } } remove_building = building_auto_drone_facility_1 add_building = building_auto_engineering_campus_1 owner = { add_resource = { automatic_drone = -200 } } }
							20 = { modifier = { factor = 0 owner = { NOR = { has_ascension_perk = ap_nano_to_nanite resource_stockpile_compare = { resource = automatic_drone value > 400 } } } } remove_building = building_auto_drone_facility_1 add_building = building_auto_engineering_campus_1 owner = { add_resource = { automatic_drone = -400 } } }
						}
					}
					999 = { modifier = { factor = 0 NAND = { has_building = building_auto_drone_facility_2 has_major_upgraded_capital = yes owner = { has_ascension_perk = ap_nano_drones } } } remove_building = building_auto_drone_facility_2 add_building = building_auto_drone_facility_3 owner = { add_resource = { automatic_drone = -400 } } }
				}
			}
		}
	}
}

######################################
#									 #
######### Nanite Composition #########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.8001
	title = "ap_nano_to_nanite"
	desc = "ap_nano_to_nanite_desc"
	show_sound = event_ai_started
	picture = GFX_evt_nano_to_nanite
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = {
		name = EXCELLENT
		enable_special_project = { name = NANITES_SHIP_SECTION location = event_target:capital_planet owner = root }
		add_research_option = tech_nanite_transmutation
		add_research_option = tech_nanite_repair_system
		generate_lcluster_clue = yes
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.8002
	title = "NANITES_SHIP_SECTION"
	desc = "UniqueAscensionPerksEvents.8002.Desc"
	show_sound = event_ai_started
	picture = GFX_evt_nano_to_nanite
	location = capital_scope
	is_triggered_only = yes
	immediate = { set_country_flag = ap_nano_to_nanite_project }
	option = {
		name = EXCELLENT
		add_resource = { nanites = 1000 }
		add_research_option = tech_nanite_ship_section
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.8003
	title = "UniqueAscensionPerksEvents.8003.Name"
	desc = "UniqueAscensionPerksEvents.8003.Desc"
	picture = GFX_evt_l-gateway
	show_sound = event_mystic_reveal
	location = from
	is_triggered_only = yes
	# immediate = { from = { save_event_target_as = gateway_system } }
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.8004
	title = "nanite_factory_site"
	desc = "UniqueAscensionPerksEvents.8004.Desc"
	picture = GFX_evt_gray_goo_ships
	show_sound = event_mystic_reveal
	location = from
	is_triggered_only = yes
	# immediate = { from = { save_event_target_as = gateway_system } }
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.8005
	title = "NAME_Nanite_Factory"
	desc = "UniqueAscensionPerksEvents.8005.Desc"
	picture = GFX_evt_gray_goo_ships
	show_sound = event_think_tank_build_upgrade
	location = from
	is_triggered_only = yes
	# immediate = { from = { save_event_target_as = gateway_system } }
	option = { name = EXCELLENT }
}

######################################
#									 #
####### Advanced Colonisation ########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.43
	title = "ap_adv_colonisation"
	desc = "ap_adv_colonisation_desc"
	show_sound = event_ship_thrusters
	picture = GFX_evt_adv_colonisation
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

# on_colonized
planet_event = {
	id = UniqueAscensionPerksEvents.44
	hide_window = yes
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	trigger = { exists = owner owner = { has_ascension_perk = ap_adv_colonisation } }
	immediate = { set_advanced_colony = yes }
}

######################################
#									 #
####### Expansion of Infinity ########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.45
	title = "ap_expansion_infinity"
	desc = "ap_expansion_infinity_desc"
	show_sound = event_cityscape
	picture = GFX_evt_expansion_infinity
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT add_resource = { unity = 5000 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.46
	title = "UniqueAscensionPerksEvents.46.Name"
	desc = "UniqueAscensionPerksEvents.46.Desc"
	show_sound = event_administrative_work
	picture = GFX_evt_expansion_infinity
	location = event_target:ap_expansion_infinity_planet
	is_triggered_only = yes
	trigger = {
		has_ascension_perk = ap_expansion_infinity
		NOT = { has_country_flag = ap_expansion_infinity_collection_no_warning }
		any_owned_planet = {
			OR = {
				is_capital = yes
				colony_age > 2
			}
			count_owned_pop = { count > 10 limit = { has_job = yes } }
			NOT = { has_planet_flag = ap_expansion_infinity_collection }
		}
	}
	immediate = { }
	option = { name = EXCELLENT }
	option = { name = "UniqueAscensionPerks.no_message"
		set_country_flag = ap_expansion_infinity_collection_no_warning
		custom_tooltip = "UniqueAscensionPerks.no_message.tooltip"
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.8000
	hide_window = yes
	mean_time_to_happen = { months = 9 }
	trigger = {
		has_ascension_perk = ap_expansion_infinity
		any_owned_planet = {
			OR = {
				is_capital = yes
				colony_age > 2
			}
			count_owned_pop = { count > 10 limit = { has_job = yes } }
			NOT = { has_planet_flag = ap_expansion_infinity_collection }
		}
	}
	immediate = {
		random_owned_planet = {
			limit = {
				colony_age > 2
				count_owned_pop = { count > 10 limit = { has_job = yes } }
				NOT = { has_planet_flag = ap_expansion_infinity_collection }
			}
			save_event_target_as = ap_expansion_infinity_planet
			set_timed_planet_flag = { flag = ap_expansion_infinity_collection years = 6 }
		}
		event_target:ap_expansion_infinity_planet = {
			ei_resources_collection = yes
		}
		if = { limit = { NOR = { is_ai = yes has_country_flag = ap_expansion_infinity_collection_no_warning } }
			country_event = { id = UniqueAscensionPerksEvents.46 }
		}
	}
}

######################################
#									 #
####### Recycling Expeditions ########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.47
	title = "ap_recycling_drones"
	desc = "ap_recycling_drones_desc"
	show_sound = event_construction
	picture = GFX_evt_scavenger_bot
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT enable_special_project = { name = RECYCLE_RECOVER_SHIPS location = event_target:capital_planet owner = root } }
}

# TODO needs more ship classes
# on_ship_destroyed_victim
country_event = {
	id = UniqueAscensionPerksEvents.48
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_ascension_perk = ap_recycling_drones }
	immediate = {
		fromfrom = {
			if = {
				limit = { root = { has_country_flag = ap_recycling_drones_project } }
				# perform_recover_ship_check = yes
				random = {
					chance = 35
					switch = {
						trigger = is_ship_size
						corvette		= { ROOT = { change_variable = { which = ship_corvette_recovered value = 1 } } }
						destroyer		= { ROOT = { change_variable = { which = ship_destroyer_recovered value = 1 } } }
						cruiser			= { ROOT = { change_variable = { which = ship_cruiser_recovered value = 1 } } }
						battleship		= { ROOT = { change_variable = { which = ship_battleship_recovered value = 1 } } }
						titan			= { ROOT = { change_variable = { which = ship_titan_recovered value = 1 } } }
					}
				}
			}
			# perform_recycling_expedition = yes
			switch = {
				trigger = is_ship_size
				# Default Empire
				science						= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
				constructor					= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
				colonizer					= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
				sponsored_colonizer			= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
				transport					= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
				corvette					= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
				destroyer					= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
				cruiser						= { ROOT = { add_resource = { minerals = 320 alloys = 80 } } }
				battleship					= { ROOT = { add_resource = { minerals = 640 alloys = 160 } } }
				titan						= { ROOT = { add_resource = { minerals = 1080 alloys = 320 } } }
				colossus					= { ROOT = { add_resource = { minerals = 2160 alloys = 640 } } }
				juggernaut 					= { ROOT = { add_resource = { minerals = 2160 alloys = 640 } } }
				crisis_corvette 			= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
				crisis_destroyer 			= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
				crisis_cruiser 				= { ROOT = { add_resource = { minerals = 320 alloys = 80 } } }
				star_eater 					= { ROOT = { add_resource = { minerals = 2160 alloys = 640 } } }
				military_station_small		= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
				military_station_medium		= { ROOT = { add_resource = { minerals = 320 alloys = 80 } } }
				military_station_large		= { ROOT = { add_resource = { minerals = 640 alloys = 160 } } }
				ion_cannon					= { ROOT = { add_resource = { minerals = 640 alloys = 160 } } }
				mining_station				= { ROOT = { add_resource = { minerals = 25 } } }
				research_station			= { ROOT = { add_resource = { minerals = 25 } } }
				observation_station			= { ROOT = { add_resource = { minerals = 25 } } }
				# Pirates
				pirate_corvette				= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
				pirate_destroyer			= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
				pirate_cruiser				= { ROOT = { add_resource = { minerals = 320 alloys = 80 } } }
				galleon						= { ROOT = { add_resource = { minerals = 1000 alloys = 160 } } }
				pirate_station				= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
				# Marauders
				marauder_corvette			= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
				marauder_destroyer			= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
				marauder_cruiser			= { ROOT = { add_resource = { minerals = 320 alloys = 80 } } }
				marauder_galleon			= { ROOT = { add_resource = { minerals = 1000 alloys = 160 } } }
				marauder_station			= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
				marauder_void_dwelling		= { ROOT = { add_resource = { minerals = 640 alloys = 160 } } }
				# Fallen Empire
				massive_ship_fallen_empire	= { ROOT = { add_resource = { minerals = 1080 alloys = 320 } } }
				large_ship_fallen_empire	= { ROOT = { add_resource = { minerals = 640 alloys = 160 } } }
				small_ship_fallen_empire	= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
				# Ancient Drone
				ancient_mining_drone		= { ROOT = { add_resource = { minerals = 40 alloys = 10 } } }
				ancient_corvette			= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
				ancient_destroyer			= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
				# Contingency
				small_ship_ai				= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
				large_ship_ai				= { ROOT = { add_resource = { minerals = 640 alloys = 160 } } }
				military_station_small_ai	= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
				military_station_large_ai	= { ROOT = { add_resource = { minerals = 640 alloys = 160 } } }
				core_ai						= { ROOT = { add_resource = { minerals = 4320 alloys = 1280 } } }
				final_core_ai				= { ROOT = { add_resource = { minerals = 8640 alloys = 2560 } } }
				construction_ship_ai		= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
				colony_ship_ai				= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
				transport_ship_ai			= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
				# Leviathans
				npc_warship_01				= { ROOT = { add_resource = { minerals = 4320 alloys = 1280 } } }
			}
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.49
	title = "RECYCLE_RECOVER_SHIPS"
	desc = "UniqueAscensionPerksEvents.49.Desc"
	show_sound = event_construction
	picture = GFX_evt_scavenger_bot
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = {
		get_capital_planet = yes
		set_country_flag = ap_recycling_drones_project
		set_variable = { which = ship_corvette_recovered value = 0 }
		set_variable = { which = ship_destroyer_recovered value = 0 }
		set_variable = { which = ship_cruiser_recovered value = 0 }
		set_variable = { which = ship_battleship_recovered value = 0 }
		set_variable = { which = ship_titan_recovered value = 0 }
	}
	option = {
		name = EXCELLENT
		custom_tooltip = "ap_recycling_drones_tooltip_3"
		hidden_effect = {
			event_target:capital_planet = {
				planet_event = { id = UniqueAscensionPerksEvents.3053 days = 30 random = 30 }
				solar_system = { set_star_flag = recycle_fleet_spawn_system }
			}
		}
	}
}

# TODO needs more ship classes
# on_ship_destroyed_perp
country_event = {
	id = UniqueAscensionPerksEvents.50
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_ascension_perk = ap_recycling_drones } # has_country_flag = ap_recycling_drones_project
	immediate = {
		fromfromfrom = {
			random = {
				chance = 35
				switch = {
					trigger = is_ship_size
					# Default Empire
					science						= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
					constructor					= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
					colonizer					= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
					sponsored_colonizer			= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
					transport					= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
					corvette					= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
					destroyer					= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
					cruiser						= { ROOT = { add_resource = { minerals = 320 alloys = 80 } } }
					battleship					= { ROOT = { add_resource = { minerals = 640 alloys = 160 } } }
					titan						= { ROOT = { add_resource = { minerals = 1080 alloys = 320 } } }
					colossus					= { ROOT = { add_resource = { minerals = 2160 alloys = 640 } } }
					juggernaut 					= { ROOT = { add_resource = { minerals = 2160 alloys = 640 } } }
					crisis_corvette 			= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
					crisis_destroyer 			= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
					crisis_cruiser 				= { ROOT = { add_resource = { minerals = 320 alloys = 80 } } }
					star_eater 					= { ROOT = { add_resource = { minerals = 2160 alloys = 640 } } }
					military_station_small		= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
					military_station_medium		= { ROOT = { add_resource = { minerals = 320 alloys = 80 } } }
					military_station_large		= { ROOT = { add_resource = { minerals = 640 alloys = 160 } } }
					ion_cannon					= { ROOT = { add_resource = { minerals = 640 alloys = 160 } } }
					mining_station				= { ROOT = { add_resource = { minerals = 25 } } }
					research_station			= { ROOT = { add_resource = { minerals = 25 } } }
					observation_station			= { ROOT = { add_resource = { minerals = 25 } } }
					# Pirates
					pirate_corvette				= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
					pirate_destroyer			= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
					pirate_cruiser				= { ROOT = { add_resource = { minerals = 320 alloys = 80 } } }
					galleon						= { ROOT = { add_resource = { minerals = 1000 alloys = 160 } } }
					pirate_station				= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
					# Marauders
					marauder_corvette			= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
					marauder_destroyer			= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
					marauder_cruiser			= { ROOT = { add_resource = { minerals = 320 alloys = 80 } } }
					marauder_galleon			= { ROOT = { add_resource = { minerals = 1000 alloys = 160 } } }
					marauder_station			= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
					marauder_void_dwelling		= { ROOT = { add_resource = { minerals = 640 alloys = 160 } } }
					# Fallen Empire
					massive_ship_fallen_empire	= { ROOT = { add_resource = { minerals = 1080 alloys = 320 } } }
					large_ship_fallen_empire	= { ROOT = { add_resource = { minerals = 640 alloys = 160 } } }
					small_ship_fallen_empire	= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
					# Ancient Drone
					ancient_mining_drone		= { ROOT = { add_resource = { minerals = 40 alloys = 10 } } }
					ancient_corvette			= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
					ancient_destroyer			= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
					# Contingency
					small_ship_ai				= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
					large_ship_ai				= { ROOT = { add_resource = { minerals = 640 alloys = 160 } } }
					military_station_small_ai	= { ROOT = { add_resource = { minerals = 160 alloys = 40 } } }
					military_station_large_ai	= { ROOT = { add_resource = { minerals = 640 alloys = 160 } } }
					core_ai						= { ROOT = { add_resource = { minerals = 4320 alloys = 1280 } } }
					final_core_ai				= { ROOT = { add_resource = { minerals = 8640 alloys = 2560 } } }
					construction_ship_ai		= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
					colony_ship_ai				= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
					transport_ship_ai			= { ROOT = { add_resource = { minerals = 80 alloys = 20 } } }
					# Leviathans
					npc_warship_01				= { ROOT = { add_resource = { minerals = 4320 alloys = 1280 } } }
				}
			}
		}
	}
}
# on_yearly_pulse
event = {
	id = UniqueAscensionPerksEvents.51
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		random_playable_country = {
			limit = {
				has_country_flag = ap_recycling_drones_project
				OR = {
					check_variable = { which = ship_corvette_recovered value > 0 }
					check_variable = { which = ship_destroyer_recovered value > 0 }
					check_variable = { which = ship_cruiser_recovered value > 0 }
					check_variable = { which = ship_battleship_recovered value > 0 }
					check_variable = { which = ship_titan_recovered value > 0 }
				}
			}
			country_event = { id = UniqueAscensionPerksEvents.52 days = 5 }
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.52
	title = "UniqueAscensionPerksEvents.52.Name"
	desc = "UniqueAscensionPerksEvents.52.Desc"
	show_sound = event_construction
	picture = GFX_evt_scavenger_bot
	location = event_target:recovery_fleet_position
	is_triggered_only = yes
	immediate = {
		# perform_recovery_fleet = yes
		random_system_within_border = {
			limit = { has_star_flag = recycle_fleet_spawn_system }
			star = { save_event_target_as = recovery_fleet_position }
		}
		if = { limit = { NOT = { exists = event_target:recovery_fleet_position } }
			random_system_within_border = {
				limit = { exists = starbase }
				weights = { base = 1 modifier = { add = 3 is_capital_system = yes } }
				star = { save_event_target_as = recovery_fleet_position }
			}
		}
		create_fleet = {
			name = "Recovered Fleet"
			settings = { spawn_debris = no }
			effect = {
				set_owner = prev
				if = { limit = { ROOT = { has_country_flag = ap_recycling_drones_project_upgrade } }
					while = {
						count = root.ship_corvette_recovered
						create_ship = { name = random random_existing_design = corvette }
					}
					while = {
						count = root.ship_destroyer_recovered
						create_ship = { name = random random_existing_design = destroyer }
					}
					while = {
						count = root.ship_cruiser_recovered
						create_ship = { name = random random_existing_design = cruiser }
					}
					while = {
						count = root.ship_battleship_recovered
						create_ship = { name = random random_existing_design = battleship }
					}
					while = {
						count = root.ship_titan_recovered
						create_ship = { name = random random_existing_design = titan }
					}
				} else = {
					while = {
						count = root.ship_corvette_recovered
						create_ship = { name = random design = "Standard Basic Corvette" }
					}
					while = {
						count = root.ship_destroyer_recovered
						create_ship = { name = random design = "Standard Basic Destroyer" }
					}
					while = {
						count = root.ship_cruiser_recovered
						create_ship = { name = random design = "Standard Basic Cruiser" }
					}
					while = {
						count = root.ship_battleship_recovered
						create_ship = { name = random design = "Standard Basic Battleship" }
					}
					while = {
						count = root.ship_titan_recovered
						create_ship = { name = random design = "Standard Basic Titan" }
					}
				}
				set_location = { target = event_target:recovery_fleet_position distance = 8 angle = random }
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 1000
				set_fleet_flag = recovery_fleet
			}
		}
	}
	option = {
		name = EXCELLENT
		hidden_effect = {
			set_variable = { which = ship_corvette_recovered value = 0 }
			set_variable = { which = ship_destroyer_recovered value = 0 }
			set_variable = { which = ship_cruiser_recovered value = 0 }
			set_variable = { which = ship_battleship_recovered value = 0 }
			set_variable = { which = ship_titan_recovered value = 0 }
		}
	}
}

# From = owner
planet_event = {
	id = UniqueAscensionPerksEvents.3053
	title = "RECYCLE_PERFORM_SHIPS"
	desc = "RECYCLE_PERFORM_SHIPS_DESC"
	show_sound = event_construction
	picture = GFX_evt_scavenger_bot
	location = root
	pre_triggers = { has_owner = yes }
	is_triggered_only = yes
	trigger = {
		exists = from
	}
	immediate = {
		from = { set_country_flag = ap_recycling_drones_project_upgrade_added }
	}
	option = { name = EXCELLENT enable_special_project = { name = RECYCLE_PERFORM_SHIPS location = root owner = root.from } }
}

planet_event = {
	id = UniqueAscensionPerksEvents.3054
	title = "RECYCLE_PERFORM_SHIPS"
	desc = "UniqueAscensionPerksEvents.3054.Desc"
	show_sound = event_construction
	picture = GFX_evt_scavenger_bot
	location = root
	pre_triggers = { has_owner = yes }
	trigger = {
		exists = owner # pre_trigger seems not sufficient
	}
	is_triggered_only = yes
	immediate = { owner = { set_country_flag = ap_recycling_drones_project_upgrade } }
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.3055
	title = "UniqueAscensionPerksEvents.3055.Name"
	desc = "UniqueAscensionPerksEvents.3055.Desc"
	show_sound = event_construction
	picture = GFX_evt_space_station
	is_triggered_only = yes
	immediate = {
		random_system_within_border = { limit = { exists = starbase starbase = { has_starbase_module = shipyard } }
			save_event_target_as = recycle_system_1
			root = { random_system_within_border = { limit = { exists = starbase starbase = { has_starbase_module = shipyard } NOT = { is_same_value = event_target:recycle_system_1 } }
				save_event_target_as = recycle_system_2
				root = { random_system_within_border = { limit = { exists = starbase starbase = { has_starbase_module = shipyard } NOR = { is_same_value = event_target:recycle_system_1 is_same_value = event_target:recycle_system_2 } }
					save_event_target_as = recycle_system_3
					root = { random_system_within_border = { limit = { exists = starbase starbase = { has_starbase_module = shipyard } NOR = { is_same_value = event_target:recycle_system_1 is_same_value = event_target:recycle_system_2 is_same_value = event_target:recycle_system_3 } }
						save_event_target_as = recycle_system_4
						root = { random_system_within_border = { limit = { exists = starbase starbase = { has_starbase_module = shipyard } NOR = { is_same_value = event_target:recycle_system_1 is_same_value = event_target:recycle_system_2 is_same_value = event_target:recycle_system_3 is_same_value = event_target:recycle_system_4 } }
							save_event_target_as = recycle_system_5
							root = { random_system_within_border = { limit = { exists = starbase starbase = { has_starbase_module = shipyard } NOR = { is_same_value = event_target:recycle_system_1 is_same_value = event_target:recycle_system_2 is_same_value = event_target:recycle_system_3 is_same_value = event_target:recycle_system_4 is_same_value = event_target:recycle_system_5 } } save_event_target_as = recycle_system_6 } }
						} }
					} }
				} }
			} }
		}
	}
	option = {
		name = UniqueAscensionPerksEvents.3055.System.1
		trigger = { exists = event_target:recycle_system_1 }
		hidden_effect = { every_system_within_border = { remove_star_flag = recycle_fleet_spawn_system } event_target:recycle_system_1 = { set_star_flag = recycle_fleet_spawn_system } }
	}
	option = {
		name = UniqueAscensionPerksEvents.3055.System.2
		trigger = { exists = event_target:recycle_system_2 }
		hidden_effect = { every_system_within_border = { remove_star_flag = recycle_fleet_spawn_system } event_target:recycle_system_2 = { set_star_flag = recycle_fleet_spawn_system } }
	}
	option = {
		name = UniqueAscensionPerksEvents.3055.System.3
		trigger = { exists = event_target:recycle_system_3 }
		hidden_effect = { every_system_within_border = { remove_star_flag = recycle_fleet_spawn_system } event_target:recycle_system_3 = { set_star_flag = recycle_fleet_spawn_system } }
	}
	option = {
		name = UniqueAscensionPerksEvents.3055.System.4
		trigger = { exists = event_target:recycle_system_4 }
		hidden_effect = { every_system_within_border = { remove_star_flag = recycle_fleet_spawn_system } event_target:recycle_system_4 = { set_star_flag = recycle_fleet_spawn_system } }
	}
	option = {
		name = UniqueAscensionPerksEvents.3055.System.5
		trigger = { exists = event_target:recycle_system_5 }
		hidden_effect = { every_system_within_border = { remove_star_flag = recycle_fleet_spawn_system } event_target:recycle_system_5 = { set_star_flag = recycle_fleet_spawn_system } }
	}
	option = {
		name = UniqueAscensionPerksEvents.3055.System.6
		trigger = { exists = event_target:recycle_system_6 }
		hidden_effect = { every_system_within_border = { remove_star_flag = recycle_fleet_spawn_system } event_target:recycle_system_6 = { set_star_flag = recycle_fleet_spawn_system } }
	}
	option = { name = "UniqueAscensionPerksEvents.3055.Select" ai_chance = { factor = 0.1 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.3055 } } }
	option = { name = CANCEL ai_chance = { factor = 0.1 } }
}

######################################
#									 #
####### Emergency Calculation ########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.53
	title = "ap_emergency_calculation"
	desc = "ap_emergency_calculation_desc"
	show_sound = event_ship_thrusters
	picture = GFX_evt_emergency_calculation
	location = capital_scope
	is_triggered_only = yes
	option = {
		name = EXCELLENT
		add_research_option = tech_jump_drive_1
		if = { limit = { has_distar = yes }
			add_research_option = tech_nanite_gate
			generate_lcluster_clue = yes
		}
	}
}
# LEGACY
country_event = {
	id = UniqueAscensionPerksEvents.8054
	title = "UniqueAscensionPerksEvents.8054.Name"
	desc = "UniqueAscensionPerksEvents.8054.Desc"
	picture = GFX_evt_drifting_gateway
	show_sound = event_mystic_reveal
	location = from
	is_triggered_only = yes
	# immediate = { from = { save_event_target_as = gateway_system } }
	option = { name = EXCELLENT }
}

######################################
#									 #
######## Economic Prosperity #########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.54
	title = "ap_economic_prospertity"
	desc = "ap_economic_prospertity_desc"
	show_sound = event_galactic_market
	picture = GFX_evt_financial_instruments
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

######################################
#									 #
####### Security Strike Forces #######
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.55
	title = "ap_advanced_security"
	desc = "ap_advanced_security_desc"
	show_sound = event_public_unrest
	picture = GFX_evt_security_forces
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT add_resource = { unity = 1000 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.56
	title = "UniqueAscensionPerksEvents.56.Name"
	desc = "UniqueAscensionPerksEvents.56.Desc"
	show_sound = event_public_unrest
	picture = GFX_evt_security_forces
	is_triggered_only = yes
	# mean_time_to_happen = { months = 1 }
	location = event_target:spawn_location_system
	trigger = {
		has_ascension_perk = ap_advanced_security
		any_system_within_border = {
			NOT = { has_star_flag = recent_security_strike_force }
			any_fleet_in_system = {
				exists = owner
				owner = {
					OR = {
						is_pirate_country = yes
						is_country_type = dormant_marauders
						is_country_type = awakened_marauders
					}
				}
			}
		}
	}
	immediate = {
		# deploy_secury_strike_forces = yes
		create_security_forces_country = yes
		random_system_within_border = {
			limit = {
				NOT = { has_star_flag = recent_security_strike_force }
				any_fleet_in_system = { exists = owner owner = { OR = { is_pirate_country = yes is_country_type = dormant_marauders is_country_type = awakened_marauders } } }
			}
			save_event_target_as = spawn_location_system
			set_timed_star_flag = { flag = recent_security_strike_force years = 1 }
			# star = { save_event_target_as = spawn_location }
			create_fleet = {
				name = "Security Strike Forces"
				effect = {
					set_owner = root # event_target:main_country
					while = { count = 10 create_ship = { name = random random_existing_design = corvette } }
					while = { count = 10 random = { chance = 50 create_ship = { name = random random_existing_design = corvette } } }
					set_location = { target = prev.star distance = 325 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 5000
					save_event_target_as = security_fleet
					fleet_event = { id = UniqueAscensionPerksEvents.57 days = 360 } # destroy_fleet
				}
			}
			event_target:security_fleet = { set_owner = event_target:security_forces_country }
		}
	}
	option = { name = OK }
}

fleet_event = {
	id = UniqueAscensionPerksEvents.57
	is_triggered_only = yes
	hide_window = yes
	immediate = { destroy_fleet = this }
}

country_event = {
	id = UniqueAscensionPerksEvents.58
	title = "UniqueAscensionPerksEvents.58.Name"
	desc = "UniqueAscensionPerksEvents.58.Desc"
	show_sound = event_conversation
	picture = GFX_evt_security_place
	location = event_target:preventive_strike_planet # root
	mean_time_to_happen = { months = 6 }
	# pre_triggers = { has_owner = yes }
	trigger = {
		has_ascension_perk = ap_advanced_security
		any_owned_planet = {
			is_colony = yes
			OR = {
				planet_crime > 75
				has_modifier = has_criminal_branch_office
				has_modifier = criminal_underworld
				has_modifier = drone_deviancy
				has_modifier = drone_corruption
			}
			NOR = {
				has_planet_flag = recent_security_preventive_strike
				has_planet_flag = recent_security_preventive_strike_energy_small
				has_planet_flag = recent_security_preventive_strike_energy_medium
				has_planet_flag = recent_security_preventive_strike_energy_big
				has_planet_flag = recent_security_preventive_strike_energy_huge
				has_planet_flag = recent_security_preventive_strike_energy_minerals
				has_planet_flag = recent_security_preventive_strike_energy_consumers
				has_planet_flag = recent_security_preventive_strike_energy_members
				has_planet_flag = recent_security_preventive_strike_energy_leaders
				has_planet_flag = recent_security_preventive_strike_energy_weapons
				has_planet_flag = recent_security_preventive_strike_energy_ships
			}
		}
	}
	immediate = {
		random_owned_planet = {
			limit = {
				is_colony = yes
				OR = {
					planet_crime > 75
					has_modifier = has_criminal_branch_office
					has_modifier = criminal_underworld
					has_modifier = drone_deviancy
					has_modifier = drone_corruption
				}
				NOR = {
					has_planet_flag = recent_security_preventive_strike
					has_planet_flag = recent_security_preventive_strike_energy_small
					has_planet_flag = recent_security_preventive_strike_energy_medium
					has_planet_flag = recent_security_preventive_strike_energy_big
					has_planet_flag = recent_security_preventive_strike_energy_huge
					has_planet_flag = recent_security_preventive_strike_energy_minerals
					has_planet_flag = recent_security_preventive_strike_energy_consumers
					has_planet_flag = recent_security_preventive_strike_energy_members
					has_planet_flag = recent_security_preventive_strike_energy_leaders
					has_planet_flag = recent_security_preventive_strike_energy_weapons
					has_planet_flag = recent_security_preventive_strike_energy_ships
				}
			}
			set_timed_planet_flag = { flag = recent_security_preventive_strike years = 2 }
			random_list = {
				20 = { set_planet_flag = recent_security_preventive_strike_energy_small }
				10 = { set_planet_flag = recent_security_preventive_strike_energy_medium }
				5 = { set_planet_flag = recent_security_preventive_strike_energy_big }
				1 = { set_planet_flag = recent_security_preventive_strike_energy_huge }
				10 = { set_planet_flag = recent_security_preventive_strike_energy_minerals }
				10 = { modifier = { factor = 0 owner = { is_gestalt = yes } } set_planet_flag = recent_security_preventive_strike_energy_consumers }
				10 = { set_planet_flag = recent_security_preventive_strike_energy_members }
				10 = { set_planet_flag = recent_security_preventive_strike_energy_leaders }
				10 = { set_planet_flag = recent_security_preventive_strike_energy_weapons }
				10 = { set_planet_flag = recent_security_preventive_strike_energy_ships }
			}
			save_event_target_as = preventive_strike_planet
		}
	}
	option = {
		name = EXCELLENT
		event_target:preventive_strike_planet = {
			if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_small } owner = { add_resource = { energy = 250 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_medium } owner = { add_resource = { energy = 500 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_big } owner = { add_resource = { energy = 750 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_huge } owner = { add_resource = { energy = 1000 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_minerals } owner = { add_resource = { minerals = 500 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_consumers } owner = { add_resource = { consumer_goods = 500 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_members } owner = { add_resource = { unity = 500 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_leaders } owner = { add_resource = { influence = 30 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_weapons } owner = { add_resource = { engineering_research = 600 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_ships } owner = { add_resource = { alloys = 300 } } }
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.8059
	title = "UniqueAscensionPerksEvents.8059.Name"
	desc = "UniqueAscensionPerksEvents.8059.Desc"
	show_sound = event_public_unrest
	picture = GFX_evt_security_forces
	location = from
	is_triggered_only = yes
	immediate = {
		random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship } save_event_target_as = ship_1
			root = { random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship NOT = { is_same_value = event_target:ship_1 } } save_event_target_as = ship_2 }
				root = { random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship NOR = { is_same_value = event_target:ship_1 is_same_value = event_target:ship_2 } } save_event_target_as = ship_3 }
					root = { random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship NOR = { is_same_value = event_target:ship_1 is_same_value = event_target:ship_2 is_same_value = event_target:ship_3 } } save_event_target_as = ship_4 }
						root = { random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship NOR = { is_same_value = event_target:ship_1 is_same_value = event_target:ship_2 is_same_value = event_target:ship_3 is_same_value = event_target:ship_4 } } save_event_target_as = ship_5 }
							root = { random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship NOR = { is_same_value = event_target:ship_1 is_same_value = event_target:ship_2 is_same_value = event_target:ship_3 is_same_value = event_target:ship_4 is_same_value = event_target:ship_5 } } save_event_target_as = ship_6 }
								root = { random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship NOR = { is_same_value = event_target:ship_1 is_same_value = event_target:ship_2 is_same_value = event_target:ship_3 is_same_value = event_target:ship_4 is_same_value = event_target:ship_5 is_same_value = event_target:ship_6 } } save_event_target_as = ship_7 }
									root = { random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship NOR = { is_same_value = event_target:ship_1 is_same_value = event_target:ship_2 is_same_value = event_target:ship_3 is_same_value = event_target:ship_4 is_same_value = event_target:ship_5 is_same_value = event_target:ship_6 is_same_value = event_target:ship_7 } } save_event_target_as = ship_8 } }
								}
							}
						}
					}
				}
			}
		}
		no_scope = { save_event_target_as = ship_escorted }
	}
	after = {
		if = { limit = { exists = event_target:ship_escorted }
			create_security_forces_country = yes
			event_target:ship_escorted = {
				solar_system = { star = { save_event_target_as = spawn_location } }
				ship_event = { id = UniqueAscensionPerksEvents.8060 }
				fleet = { save_event_target_as = ship_escorted }
			}
			create_fleet = {
				name = "Security Strike Forces"
				effect = {
					set_owner = root # event_target:main_country
					while = { count = 10 create_ship = { name = random random_existing_design = corvette } }
					while = { count = 10 random = { chance = 50 create_ship = { name = random random_existing_design = corvette } } }
					set_location = { target = event_target:spawn_location distance = 325 angle = random }
					set_fleet_stance = passive
					set_fleet_flag = security_escort_fleet
					save_event_target_as = security_fleet
				}
			}
			if = { limit = { NOT = { exists = event_target:security_forces_country } last_created_country = { has_country_flag = security_strike_force } }
				last_created_country = { save_event_target_as = security_forces_country }
			}
			# event_target:security_fleet = {
			last_created_fleet = {
				set_owner = event_target:security_forces_country auto_follow_fleet = { target = event_target:ship_escorted attack_fleet = no }
			}
		}
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.1
		allow = { resource_stockpile_compare = { resource = energy value > 500 } resource_stockpile_compare = { resource = influence value > 10 } }
		trigger = { exists = event_target:ship_3 exists = event_target:ship_3.solar_system }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_1 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.2
		allow = { resource_stockpile_compare = { resource = energy value > 500 } resource_stockpile_compare = { resource = influence value > 10 } }
		trigger = { exists = event_target:ship_3 exists = event_target:ship_3.solar_system }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_2 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.3
		allow = { resource_stockpile_compare = { resource = energy value > 500 } resource_stockpile_compare = { resource = influence value > 10 } }
		trigger = { exists = event_target:ship_3 exists = event_target:ship_3.solar_system }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_3 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.4
		allow = { resource_stockpile_compare = { resource = energy value > 500 } resource_stockpile_compare = { resource = influence value > 10 } }
		trigger = { exists = event_target:ship_3 exists = event_target:ship_3.solar_system }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_4 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.5
		allow = { resource_stockpile_compare = { resource = energy value > 500 } resource_stockpile_compare = { resource = influence value > 10 } }
		trigger = { exists = event_target:ship_3 exists = event_target:ship_3.solar_system }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_5 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.6
		allow = { resource_stockpile_compare = { resource = energy value > 500 } resource_stockpile_compare = { resource = influence value > 10 } }
		trigger = { exists = event_target:ship_3 exists = event_target:ship_3.solar_system }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_6 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.7
		allow = { resource_stockpile_compare = { resource = energy value > 500 } resource_stockpile_compare = { resource = influence value > 10 } }
		trigger = { exists = event_target:ship_3 exists = event_target:ship_3.solar_system }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_7 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.8
		allow = { resource_stockpile_compare = { resource = energy value > 500 } resource_stockpile_compare = { resource = influence value > 10 } }
		trigger = { exists = event_target:ship_3 exists = event_target:ship_3.solar_system }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_8 = { save_event_target_as = ship_escorted } }
	}
	option = { name = "UniqueAscensionPerksEvents.8059.Select" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.8059 } } }
	option = { name = ABORT }
}

ship_event = {
	id = UniqueAscensionPerksEvents.8060
	title = "UniqueAscensionPerksEvents.8060.Name"
	desc = "UniqueAscensionPerksEvents.8060.Desc"
	show_sound = event_public_unrest
	picture = GFX_evt_security_forces
	location = root
	is_triggered_only = yes
	immediate = {
		# save_event_target_as = ship_escorted
	}
	option = { name = EXCELLENT }
}

# destroy_fleet
country_event = {
	id = UniqueAscensionPerksEvents.8061
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { years = 1 }
	trigger = { is_country_type = security_forces any_owned_fleet = { has_fleet_flag = security_escort_fleet is_fleet_idle = yes } }
	immediate = {
		random_owned_fleet = { limit = { has_fleet_flag = security_escort_fleet is_fleet_idle = yes } destroy_fleet = this }
	}
}

######################################
#									 #
########## Friendly Nature  ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.59
	title = "ap_friendly_nature"
	desc = "ap_friendly_nature_desc"
	show_sound = event_alien_nature
	picture = GFX_evt_friendly_nature
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

planet_event = {
	id = UniqueAscensionPerksEvents.60
	title = "decision_nature_pacification"
	desc = "UniqueAscensionPerksEvents.60.Desc"
	show_sound = event_alien_nature
	picture = GFX_evt_friendly_nature
	location = root
	is_triggered_only = yes
	option = { name = EXCELLENT }
}
# on_yearly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.3061
	title = "UniqueAscensionPerksEvents.3061.Name"
	desc = "UniqueAscensionPerksEvents.3061.Desc"
	show_sound = event_alien_nature
	picture = GFX_evt_friendly_nature
	location = event_target:friendly_nature_discovery # root
	is_triggered_only = yes
	# mean_time_to_happen = { months = 3 }
	# pre_triggers = { has_owner = yes }
	trigger = {
		has_ascension_perk = ap_friendly_nature
		# NOT = { has_country_flag = friendly_nature_discovery_cooldown }
		any_owned_planet = {
			NOT = { has_planet_flag = friendly_nature_discovery }
			can_find_rare_deposits = yes
		}
	}
	immediate = {
		random_owned_planet = {
			limit = {
				can_find_rare_deposits = yes
				NOT = { has_planet_flag = friendly_nature_discovery }
			}
			set_planet_flag = friendly_nature_discovery
			save_event_target_as = friendly_nature_discovery
		}
		# set_timed_country_flag = { flag = friendly_nature_discovery_cooldown years = 1 }
	}
	option = {
		name = EXCELLENT
		custom_tooltip = "UniqueAscensionPerksEvents.3061.a.tooltip"
		# nature_rare_deposits_found = yes
		hidden_effect = {
			event_target:friendly_nature_discovery = {
				random_list = {
					30 = { while = { count = 1 add_deposit = d_alien_pets_deposit } }
					20 = { while = { count = 2 add_deposit = d_alien_pets_deposit } }
					10 = { while = { count = 3 add_deposit = d_alien_pets_deposit } }
					10 = {}
				}
				random_list = {
					30 = { while = { count = 1 add_deposit = d_betharian_deposit } }
					20 = { while = { count = 2 add_deposit = d_betharian_deposit } }
					10 = { while = { count = 3 add_deposit = d_betharian_deposit } }
					10 = {}
				}
				random_list = {
					30 = { while = { count = 1 add_deposit = d_crystalline_caverns } }
					20 = { while = { count = 2 add_deposit = d_crystalline_caverns } }
					10 = { while = { count = 3 add_deposit = d_crystalline_caverns } }
					10 = {}
				}
				random_list = {
					30 = { while = { count = 1 add_deposit = d_dust_caverns } }
					20 = { while = { count = 2 add_deposit = d_dust_caverns } }
					10 = { while = { count = 3 add_deposit = d_dust_caverns } }
					10 = {}
				}
				random_list = {
					30 = { while = { count = 1 add_deposit = d_bubbling_swamp } }
					20 = { while = { count = 2 add_deposit = d_bubbling_swamp } }
					10 = { while = { count = 3 add_deposit = d_bubbling_swamp } }
					10 = {}
				}
			}
		}
	}
}

######################################
#									 #
########### The Recomposer ###########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.63
	title = "ap_recomposer"
	desc = "ap_recomposer_desc"
	show_sound = event_ai_started
	picture = GFX_evt_recomposer
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT enable_special_project = { name = RECOMPOSER location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.64
	title = "UniqueAscensionPerksEvents.64.Name"
	desc = "UniqueAscensionPerksEvents.64.Desc"
	show_sound = event_ai_started
	picture = GFX_evt_recomposer
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = { has_ascension_perk = ap_recomposer }
	immediate = { set_country_flag = recomposer_project get_capital_planet = yes }
	option = {
		name = EXCELLENT
		add_monthly_resource_mult = { resource = engineering_research value = 22 min = 5000 max = 15000 }
		custom_tooltip = "ap_recomposer_tooltip"
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.65
	title = "UniqueAscensionPerksEvents.65.Name"
	desc = "UniqueAscensionPerksEvents.65.Desc"
	show_sound = event_ai_started
	picture = GFX_evt_recomposer
	location = root
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

planet_event = {
	id = UniqueAscensionPerksEvents.66
	title = "UniqueAscensionPerksEvents.66.Name"
	desc = "UniqueAscensionPerksEvents.66.Desc"
	show_sound = event_ai_started
	picture = GFX_evt_recomposer
	location = root
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

######################################
#									 #
########## Imposed Megacorp ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.67
	title = "ap_megacorp"
	desc = "ap_megacorp_desc"
	show_sound = event_galactic_market
	picture = GFX_evt_megacorp
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT }
}
# on_yearly_pulse
event = {
	id = UniqueAscensionPerksEvents.8068
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_playable_country = {
			is_gestalt = no
			has_ascension_perk = ap_megacorp
			OR = {
				has_modifier = aggressive_marketing_target
				any_relation = {
					merg_is_default_empire = yes
					NOR = { is_gestalt = yes has_ascension_perk = ap_megacorp has_modifier = aggressive_marketing_target }
				}
			}
		}
	}
	immediate = {
		random_playable_country = {
			limit = { merg_is_default_empire = yes is_gestalt = no has_ascension_perk = ap_megacorp }
			weights = { base = 1 modifier = { add = 1 has_modifier = aggressive_marketing_target } }
			if = { limit = { has_modifier = aggressive_marketing_target }
				remove_modifier = aggressive_marketing_target
			}
			random_relation = {
				limit = {
					merg_is_default_empire = yes
					NOR = {
						is_gestalt = yes
						has_ascension_perk = ap_megacorp
						has_modifier = aggressive_marketing_target
						is_at_war_with = prev
						is_hostile = prev
					}
				}
				weights = {
					base = 1
					modifier = { add = 2 is_friendly_to = prev }
					modifier = { add = 1 is_protective_to = prev }
				}
				add_modifier = { modifier = aggressive_marketing_target }
			}
		}
	}
}

######################################
#									 #
########### Fallen Disciple ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.68
	title = "ap_fallen_disciple"
	desc = "ap_fallen_disciple_desc"
	show_sound = event_cityscape
	picture = GFX_evt_fallen_disciple
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT enable_special_project = { name = AWAKEN_FALLEN_EMPIRE_PROJECT location = event_target:capital_planet owner = root } }
}

# on_five_year_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.69
	title = "UniqueAscensionPerksEvents.69.Name"
	desc = "UniqueAscensionPerksEvents.69.Desc"
	show_sound = event_cityscape
	picture = GFX_evt_fallen_disciple
	is_triggered_only = yes
	# mean_time_to_happen = { years = 6 }
	trigger = {
		has_ascension_perk = ap_fallen_disciple
		any_country = { is_valid_fallen_empire_for_fallen_disciple = yes }
	}
	immediate = {
		random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes }
			save_event_target_as = fallen_empire_1
			random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOT = { is_same_empire = event_target:fallen_empire_1 } }
				save_event_target_as = fallen_empire_2
				random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 } }
					save_event_target_as = fallen_empire_3
					random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 is_same_empire = event_target:fallen_empire_3 } }
						save_event_target_as = fallen_empire_4
						random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 is_same_empire = event_target:fallen_empire_3 is_same_empire = event_target:fallen_empire_4 } }
							save_event_target_as = fallen_empire_5
							random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 is_same_empire = event_target:fallen_empire_3 is_same_empire = event_target:fallen_empire_4 is_same_empire = event_target:fallen_empire_5 } } save_event_target_as = fallen_empire_6 }
						}
					}
				}
			}
		}
		no_scope = { save_event_target_as = FallenEmpireTaskOrigin } # clear hack
	}
	after = {
		hidden_effect = {
			if = { limit = { exists = event_target:FallenEmpireTaskOrigin }
				# fe_select_gift = yes
				random_list = {
					50 = { if = { limit = { mid_game_years_passed >= 0 } set_country_flag = fe_gift_resources_large } else = { set_country_flag = fe_gift_resources_small } }
					20 = { set_country_flag = fe_gift_databanks }
					15 = { set_country_flag = fe_gift_rare_tech }
					10 = { if = { limit = { mid_game_years_passed >= 0 } set_country_flag = fe_gift_escorts } else = { set_country_flag = fe_gift_resources_large } }
					5 = { if = { limit = { mid_game_years_passed >= 0 } set_country_flag = fe_gift_battlecruiser } else = { set_country_flag = fe_gift_resources_large } }
					15 = { modifier = { factor = 3.0 is_at_war = yes } set_country_flag = fe_gift_resources_alloys }
					10 = { modifier = { factor = 0 OR = { is_at_war = yes is_gestalt = yes } } set_country_flag = fe_gift_resources_consumer }
				}
				country_event = { id = UniqueAscensionPerksEvents.70 }
			}
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.1"
		trigger = { exists = event_target:fallen_empire_1 }
		hidden_effect = { event_target:fallen_empire_1 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.2"
		trigger = { exists = event_target:fallen_empire_2 }
		hidden_effect = { event_target:fallen_empire_2 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.3"
		trigger = { exists = event_target:fallen_empire_3 }
		hidden_effect = { event_target:fallen_empire_3 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.4"
		trigger = { exists = event_target:fallen_empire_4 }
		hidden_effect = { event_target:fallen_empire_4 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.5"
		trigger = { exists = event_target:fallen_empire_5 }
		hidden_effect = { event_target:fallen_empire_5 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.6"
		trigger = { exists = event_target:fallen_empire_6 }
		hidden_effect = { event_target:fallen_empire_6 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = { name = "UniqueAscensionPerksEvents.69.Select" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.69 } } }
	option = { name = "UniqueAscensionPerksEvents.69.b" ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.70
	title = fallen_empires_tasks.2.name
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin.ruler
	}
	desc = { text = fallen_empires_tasks.2.desc.a.materialist	trigger = { fe_gift_resources = yes event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist } } }
	desc = { text = fallen_empires_tasks.2.desc.a.xenophile		trigger = { fe_gift_resources = yes event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile } } }
	desc = { text = fallen_empires_tasks.2.desc.a.spiritualist	trigger = { fe_gift_resources = yes event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_spiritualist } } }
	desc = { text = fallen_empires_tasks.2.desc.a.machine.o		trigger = { fe_gift_resources = yes fe_gift_target_is_not_machine = yes event_target:FallenEmpireTaskOrigin = { is_machine_empire = yes } } }
	desc = { text = fallen_empires_tasks.2.desc.a.machine.s		trigger = { fe_gift_resources = yes fe_gift_target_is_machine = yes event_target:FallenEmpireTaskOrigin = { is_machine_empire = yes } } }
	desc = { text = fallen_empires_tasks.2.desc.b.materialist	trigger = { fe_gift_tech = yes event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist } } }
	desc = { text = fallen_empires_tasks.2.desc.b.xenophile		trigger = { fe_gift_tech = yes event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile } } }
	desc = { text = fallen_empires_tasks.2.desc.b.spiritualist	trigger = { fe_gift_tech = yes event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_spiritualist } } }
	desc = { text = fallen_empires_tasks.2.desc.b.machine.o		trigger = { fe_gift_tech = yes fe_gift_target_is_not_machine = yes event_target:FallenEmpireTaskOrigin = { is_machine_empire = yes } } }
	desc = { text = fallen_empires_tasks.2.desc.b.machine.s		trigger = { fe_gift_tech = yes fe_gift_target_is_machine = yes event_target:FallenEmpireTaskOrigin = { is_machine_empire = yes } } }
	desc = { text = fallen_empires_tasks.2.desc.c.materialist	trigger = { has_country_flag = fe_gift_escorts event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist } } }
	desc = { text = fallen_empires_tasks.2.desc.c.xenophile		trigger = { has_country_flag = fe_gift_escorts event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile } } }
	desc = { text = fallen_empires_tasks.2.desc.c.spiritualist	trigger = { has_country_flag = fe_gift_escorts event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_spiritualist } } }
	desc = { text = fallen_empires_tasks.2.desc.c.machine.o		trigger = { fe_gift_ships = yes fe_gift_target_is_not_machine = yes event_target:FallenEmpireTaskOrigin = { is_machine_empire = yes } } }
	desc = { text = fallen_empires_tasks.2.desc.c.machine.s		trigger = { fe_gift_ships = yes fe_gift_target_is_machine = yes	event_target:FallenEmpireTaskOrigin = { is_machine_empire = yes } } }
	desc = { text = fallen_empires_tasks.2.desc.d.materialist	trigger = { has_country_flag = fe_gift_battlecruiser event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist } } }
	desc = { text = fallen_empires_tasks.2.desc.d.xenophile		trigger = { has_country_flag = fe_gift_battlecruiser event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile } } }
	desc = { text = fallen_empires_tasks.2.desc.d.spiritualist	trigger = { has_country_flag = fe_gift_battlecruiser event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_spiritualist } } }
	location = event_target:capital_planet
	immediate = { get_capital_planet = yes }
	after = {
		# fe_clear_gift_flags = yes
		remove_country_flag = fe_gift_escorts
		remove_country_flag = fe_gift_resources_small
		remove_country_flag = fe_gift_battlecruiser
		remove_country_flag = fe_gift_resources_large
		remove_country_flag = fe_gift_databanks
		remove_country_flag = fe_gift_rare_tech
		remove_country_flag = fe_gift_resources_alloys
		remove_country_flag = fe_gift_resources_consumer
	}
	option = { name = fallen_empires_tasks.2.a
		# fe_gift_action = yes
		hidden_effect = { set_country_flag = fe_gift_received }
		if = { limit = { has_country_flag = fe_gift_resources_small } add_resource = { minerals = 1500 energy = 500 } }
		if = { limit = { has_country_flag = fe_gift_resources_large } add_resource = { minerals = 3000 energy = 1000 } }
		if = { limit = { has_country_flag = fe_gift_resources_alloys } add_resource = { alloys = 750 } }
		if = { limit = { has_country_flag = fe_gift_resources_consumer } add_resource = { consumer_goods = 750 } }
		if = { limit = { has_country_flag = fe_gift_databanks } add_modifier = { modifier = fallen_empire_gift_databanks years = 10 } }
		if = { limit = { has_country_flag = fe_gift_rare_tech }
			if = { limit = { NOT = { has_technology = tech_planetary_shield_generator } } give_tech_option_or_progress_effect = { TECH = tech_planetary_shield_generator } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
			else_if = { limit = { NOT = { has_technology = tech_synchronized_defences } } give_tech_option_or_progress_effect = { TECH = tech_synchronized_defences } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
			else_if = { limit = { NOT = { has_technology = tech_selected_lineages } } give_tech_option_or_progress_effect = { TECH = tech_selected_lineages } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
			else_if = { limit = { NOT = { has_technology = tech_space_defense_station_improvement } } give_tech_option_or_progress_effect = { TECH = tech_space_defense_station_improvement } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
			else_if = { limit = { NOT = { has_technology = tech_gene_banks } } give_tech_option_or_progress_effect = { TECH = tech_gene_banks } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
			else_if = { limit = { NOT = { has_technology = tech_modular_engineering } } give_tech_option_or_progress_effect = { TECH = tech_modular_engineering } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
			else_if = { limit = { NOT = { has_technology = tech_construction_templates } } give_tech_option_or_progress_effect = { TECH = tech_construction_templates } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
			else_if = { limit = { NOT = { has_technology = tech_gateway_activation } } give_tech_option_or_progress_effect = { TECH = tech_gateway_activation } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
			# (MOD ADD MORE TECHS GIFT IN FUTURE)
			# Just give databanks instead
			add_modifier = { modifier = fallen_empire_gift_databanks years = 10 }
		}
		if = { limit = { has_country_flag = fe_gift_escorts }
			custom_tooltip = fallen_empires_tasks.2.escorts_tooltip
			hidden_effect = {
				event_target:capital_planet = {
					create_fleet = {
						settings = { spawn_debris = no }
						effect = {
							set_owner = root
							if = { limit = { event_target:FallenEmpireTaskOrigin = { is_machine_empire = yes } } while = { count = 3 create_ship = { name = "NAME_Surplus_I" design = "NAME_Surplus_Gamma" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } } }
							if = { limit = { event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist } } while = { count = 3 create_ship = { name = "NAME_Surplus_I" design = "NAME_Surplus_Sage" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } } }
							if = { limit = { event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile } } while = { count = 3 create_ship = { name = "NAME_Surplus_I" design = "NAME_Surplus_Warden" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } } }
							if = { limit = { event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_spiritualist } } while = { count = 3 create_ship = { name = "NAME_Surplus_I" design = "NAME_Surplus_Zealot" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } } }
							set_location = prev
						}
					}
				}
			}
		}
		if = { limit = { has_country_flag = fe_gift_battlecruiser }
			custom_tooltip = fallen_empires_tasks.2.battlecruiser_tooltip
			hidden_effect = {
				event_target:capital_planet = {
					create_fleet = {
						settings = { spawn_debris = no }
						effect = {
							set_owner = root
							if = { limit = { event_target:FallenEmpireTaskOrigin = { is_machine_empire = yes } } create_ship = { name = "NAME_Progress" design = "NAME_Surplus_Beta" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } }
							if = { limit = { event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist } } create_ship = { name = "NAME_Progress" design = "NAME_Surplus_Scholar" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } }
							if = { limit = { event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile } } create_ship = { name = "NAME_Benevolence" design = "NAME_Surplus_Custodian" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } }
							if = { limit = { event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_spiritualist } } create_ship = { name = "NAME_Benevolence" design = "NAME_Surplus_Avatar" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } }
							set_location = prev
						}
					}
				}
			}
		}
	}
	option = { name = fallen_empires_tasks.2.b ai_chance = { factor = 0.1 }
		# fe_refuse_gift_action = yes
		hidden_effect = {
			event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_spurned_fallen_empire_gift } }
		}
		if = { limit = { event_target:FallenEmpireTaskOrigin = { is_enigmatic_to = root } } custom_tooltip = fallen_empire_enigmatic_tooltip }
		else = { custom_tooltip = fallen_empire_unhappy_tooltip }

	}
}

country_event = {
	id = UniqueAscensionPerksEvents.71
	title = "AWAKEN_FALLEN_EMPIRE_PROJECT"
	desc = "UniqueAscensionPerksEvents.71.Desc"
	show_sound = event_cityscape
	picture = GFX_evt_fallen_disciple
	location = capital_scope
	is_triggered_only = yes
	immediate = { set_country_flag = fallen_disciple_project }
	option = { name = EXCELLENT custom_tooltip = "ap_fallen_disciple_tooltip_3" }
}

country_event = {
	id = UniqueAscensionPerksEvents.72
	title = "UniqueAscensionPerksEvents.72.Name"
	desc = "UniqueAscensionPerksEvents.72.Desc"
	show_sound = event_cityscape
	picture = GFX_evt_fallen_disciple
	is_triggered_only = yes
	immediate = {
		random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes }
			save_event_target_as = fallen_empire_1
			random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOT = { is_same_empire = event_target:fallen_empire_1 } }
				save_event_target_as = fallen_empire_2
				random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 } }
					save_event_target_as = fallen_empire_3
					random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 is_same_empire = event_target:fallen_empire_3 } }
						save_event_target_as = fallen_empire_4
						random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 is_same_empire = event_target:fallen_empire_3 is_same_empire = event_target:fallen_empire_4 } }
							save_event_target_as = fallen_empire_5
							random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 is_same_empire = event_target:fallen_empire_3 is_same_empire = event_target:fallen_empire_4 is_same_empire = event_target:fallen_empire_5 } } save_event_target_as = fallen_empire_6 }
						}
					}
				}
			}
		}
		no_scope = { save_event_target_as = FallenEmpireTaskOrigin } # clear hack
	}
	after = {
		if = { limit = { exists = event_target:FallenEmpireTaskOrigin }
			country_event = { id = UniqueAscensionPerksEvents.73 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.1"
		trigger = { exists = event_target:fallen_empire_1 }
		hidden_effect = { event_target:fallen_empire_1 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.2"
		trigger = { exists = event_target:fallen_empire_2 }
		hidden_effect = { event_target:fallen_empire_2 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.3"
		trigger = { exists = event_target:fallen_empire_3 }
		hidden_effect = { event_target:fallen_empire_3 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.4"
		trigger = { exists = event_target:fallen_empire_4 }
		hidden_effect = { event_target:fallen_empire_4 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.5"
		trigger = { exists = event_target:fallen_empire_5 }
		hidden_effect = { event_target:fallen_empire_5 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.6"
		trigger = { exists = event_target:fallen_empire_6 }
		hidden_effect = { event_target:fallen_empire_6 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Abort"
		hidden_effect = { add_resource = { influence = 950 } }
		ai_chance = { factor = 0.1 }
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.73
	title = fallen_empires_tasks.2.name
	desc = UniqueAscensionPerksEvents.73.Desc
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin.ruler
	}
	immediate = {
		event_target:FallenEmpireTaskOrigin = {
			add_opinion_modifier = { modifier = opinion_influenced_awaken_fallen_empire who = prevprev }
			if = {
				limit = { merg_is_fallen_empire = yes is_machine_empire = yes }
				country_event = { id = fallen_machine_empire.1 days = 360 random = 180 } else = { country_event = { id = UniqueAscensionPerksEvents.74 days = 360 random = 180 } }
			}
		}
	}
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.74
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = sleepers_awake_happened
		country_event = { id = fallen_empires_awakening.3 }
		# Notify players
		every_playable_country = { limit = { is_ai = no } country_event = { id = fallen_empires_awakening.2 } }
		observer_event = { id = observer.73 }
		# War in Heaven
		if = {
			limit = { has_leviathans = yes }
			random_list = {
				40 = { # War in Heaven with Fallen Empire of opposing ethos.
					random_country = {
						limit = {
							merg_is_fallen_empire = yes # merg_is_fallen_empire = yes
							NOR = { is_same_empire = root has_ethic = ethic_gestalt_consciousness }
							OR = {
								AND = { has_ethic = ethic_fanatic_xenophobe ROOT = { has_ethic = ethic_fanatic_xenophile } }
								AND = { has_ethic = ethic_fanatic_xenophile ROOT = { has_ethic = ethic_fanatic_xenophobe } }
								AND = { has_ethic = ethic_fanatic_spiritualist ROOT = { has_ethic = ethic_fanatic_materialist } }
								AND = { has_ethic = ethic_fanatic_materialist ROOT = { has_ethic = ethic_fanatic_spiritualist } }
							}
						}
						set_country_flag = sleepers_awake_ancient_rival
						set_timed_country_flag = { flag = timed_ancient_rival years = 10 }
						set_timed_country_flag = { flag = ai_no_wars years = 10 }
						root = { set_timed_country_flag = { flag = ai_no_wars years = 10 } }
						every_playable_country = {
							set_timed_country_flag = { flag = ai_no_wars years = 10 }
						}
					}
				}
				20 = { # War in Heaven with Fallen Empire of different ethos.
					random_country = {
						limit = {
							NOT = { is_same_value = root }
							merg_is_fallen_empire = yes
							NOT = { has_ethic = ethic_gestalt_consciousness }
						}
						set_country_flag = sleepers_awake_ancient_rival
						set_timed_country_flag = { flag = timed_ancient_rival years = 10 }
						set_timed_country_flag = { flag = ai_no_wars years = 10 }
						root = { set_timed_country_flag = { flag = ai_no_wars years = 10 } }
						every_playable_country = {
							set_timed_country_flag = { flag = ai_no_wars years = 10 }
						}
					}
				}
				40 = { } # No War in Heaven
			}
		}
	}
}

######################################
#									 #
######## Stability Celebration #######
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.80
	title = "ap_stability_celebration"
	desc = "ap_stability_celebration_desc"
	show_sound = event_celebration
	picture = GFX_evt_stability_celebration
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT add_resource = { unity = 2000 influence = 100 } }
}

planet_event = {
	id = UniqueAscensionPerksEvents.81
	title = "UniqueAscensionPerksEvents.81.Name"
	desc = "UniqueAscensionPerksEvents.81.Desc"
	show_sound = event_celebration
	picture = GFX_evt_stability_celebration
	location = root
	pre_triggers = { has_owner = yes is_ai = no }
	is_triggered_only = yes
	trigger = { owner = { NOR = { is_ai = yes has_country_flag = ap_stability_celebration_no_warning } } }
	option = { name = EXCELLENT }
	option = {
		name = "UniqueAscensionPerks.no_message"
		custom_tooltip = "UniqueAscensionPerks.no_message.tooltip"
		owner = { set_country_flag = ap_stability_celebration_no_warning }
	}
}

# v3.3 performance opt
country_event = {
	id = UniqueAscensionPerksEvents.8082
	hide_window = yes
	mean_time_to_happen = { months = 6 }
	# pre_triggers = { has_owner = yes }
	trigger = {
		has_ascension_perk = ap_stability_celebration
		NOT = { has_country_flag = stability_celebration_message }
		any_owned_planet = {
			NOR = {
				has_modifier = stability_celebration
				has_modifier = stability_celebration_gestalt
			}
			planet_stability > 55
			planet_crime < 20
			free_housing > 0
			free_jobs > 0
			free_amenities > 0
			num_pops > 20
			OR = {
				AND = {
					root = {
						OR = {
							has_policy_flag = ai_full_rights
							is_synthetic_empire = yes
						}
					}
					count_owned_pop = {
						count > 20
						limit = {
							is_enslaved = no
							is_being_purged = no
							is_being_assimilated = no
							is_unemployed = no
							is_robot_pop = yes
						}
					}
				}
				count_owned_pop = {
					count > 20
					limit = {
						is_enslaved = no
						is_being_purged = no
						is_being_assimilated = no
						is_unemployed = no
						is_robot_pop = no
					}
				}
			}
		}
	}
	immediate = {
		random_owned_planet = {
			limit = {
				NOR = {
					has_modifier = stability_celebration
					has_modifier = stability_celebration_gestalt
				}
				planet_stability > 55
				planet_crime < 20
				free_housing > 0
				free_jobs > 0
				free_amenities > 0
				num_pops > 20
				OR = {
					AND = {
						root = {
							OR = {
								has_policy_flag = ai_full_rights
								is_synthetic_empire = yes
							}
						}
						count_owned_pop = {
							count > 20
							limit = {
								is_enslaved = no
								is_being_purged = no
								is_being_assimilated = no
								is_unemployed = no
								is_robot_pop = yes
							}
						}
					}
					count_owned_pop = {
						count > 20
						limit = {
							is_enslaved = no
							is_being_purged = no
							is_being_assimilated = no
							is_unemployed = no
							is_robot_pop = no
						}
					}
				}
			}
			if = { limit = { root = { is_gestalt = yes } }
				add_modifier = { modifier = stability_celebration_gestalt years = 10 }
			} else = {
				add_modifier = { modifier = stability_celebration years = 10 }
			}
			if = { limit = { root = { NOR = { is_ai = yes has_country_flag = ap_stability_celebration_no_warning } } }
				planet_event = { id = UniqueAscensionPerksEvents.81 }
			}
		}
		set_timed_country_flag = { flag = stability_celebration_message years = 3 }
		add_monthly_resource_mult = { resource = energy value = 4 min = 500 max = 2000 }
		add_monthly_resource_mult = { resource = minerals value = 4 min = 500 max = 2000 }
		add_monthly_resource_mult = { resource = influence value = 2 min = 15 max = 35 }
		add_monthly_resource_mult = { resource = unity value = 6 min = 100 max = 500 }
	}
}

######################################
#									 #
########### Galaxy Center ############
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.82
	title = "ap_galaxy_center"
	desc = "ap_galaxy_center_desc"
	show_sound = event_cityscape
	picture = GFX_evt_galaxy_center
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

planet_event = {
	id = UniqueAscensionPerksEvents.83
	title = "UniqueAscensionPerksEvents.83.Name"
	desc = "UniqueAscensionPerksEvents.83.Desc"
	show_sound = event_administrative_work
	picture = GFX_evt_galaxy_center
	location = root
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

planet_event = {
	id = UniqueAscensionPerksEvents.84
	show_sound = event_cityscape
	title = "ap_galaxy_center"
	desc = {
		trigger = {
			text = "UniqueAscensionPerksEvents.84.Desc"
			text = newline
			text = "UniqueAscensionPerksEvents.84.Energy"
			text = "UniqueAscensionPerksEvents.84.Mineral"
			text = "UniqueAscensionPerksEvents.84.Food"
			text = "UniqueAscensionPerksEvents.84.Research"
			success_text = { text = "UniqueAscensionPerksEvents.84.Trade" owner = { is_gestalt = no } }
			success_text = { text = "UniqueAscensionPerksEvents.84.Hive" owner = { is_hive_empire = yes } }
			success_text = { text = "UniqueAscensionPerksEvents.84.Auto" owner = { is_machine_empire = yes } }
			success_text = { text = "UniqueAscensionPerksEvents.84.Entrepot" owner = { is_machine_empire = yes } }
			text = newline
			success_text = { text = "UniqueAscensionPerksEvents.84.Casino.title" has_planet_flag = galaxy_center_casino }
			success_text = { text = "UniqueAscensionPerksEvents.84.Administration.title" has_planet_flag = galaxy_center_administration }
			success_text = { text = "UniqueAscensionPerksEvents.84.Museum.title" has_planet_flag = galaxy_center_museum }
			success_text = { text = "UniqueAscensionPerksEvents.84.Shipyard.Off" NOT = { has_planet_flag = galaxy_center_super_shipyard } }
			success_text = { text = "UniqueAscensionPerksEvents.84.Shipyard.On" has_planet_flag = galaxy_center_super_shipyard }
		}
	}
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = galaxy_center_room }
	is_triggered_only = yes
	location = root
	option = { name = "DEPOSITS_TITLE" hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.85 } } }
	option = {
		name = "UniqueAscensionPerksEvents.84.Casino"
		trigger = { NOT = { has_planet_flag = galaxy_center_casino } }
		allow = {
			custom_tooltip = { fail_text = UniqueAscensionPerksEvents.84.Req01 NOT = { has_planet_flag = galaxy_center_casino } }
			owner = { resource_stockpile_compare = { resource = energy value > 20000 } }
		}
		owner = { add_resource = { energy = -20000 } }
		hidden_effect = {
			set_planet_flag = galaxy_center_casino
			change_variable = { which = galaxy_center_casino value = 28000 }
			planet_event = { id = UniqueAscensionPerksEvents.84 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.84.Administration"
		trigger = { NOT = { has_planet_flag = galaxy_center_administration } }
		allow = {
			custom_tooltip = { fail_text = UniqueAscensionPerksEvents.84.Req02 NOT = { has_planet_flag = galaxy_center_administration } }
			owner = { resource_stockpile_compare = { resource = minerals value > 15000 } }
		}
		owner = { add_resource = { minerals = -15000 } }
		hidden_effect = {
			set_planet_flag = galaxy_center_administration
			change_variable = { which = galaxy_center_administration value = 35 }
			planet_event = { id = UniqueAscensionPerksEvents.84 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.84.Museum"
		trigger = { NOT = { has_planet_flag = galaxy_center_museum } }
		allow = {
			custom_tooltip = { fail_text = UniqueAscensionPerksEvents.84.Req03 NOT = { has_planet_flag = galaxy_center_museum } }
			owner = { resource_stockpile_compare = { resource = minerals value > 15000 } }
		}
		owner = { add_resource = { minerals = -15000 } }
		hidden_effect = {
			set_planet_flag = galaxy_center_museum
			change_variable = { which = galaxy_center_museum value = 7500 }
			planet_event = { id = UniqueAscensionPerksEvents.84 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.84.Shipyard"
		trigger = { NOT = { has_planet_flag = galaxy_center_super_shipyard } }
		allow = { owner = { resource_stockpile_compare = { resource = minerals value > 15000 } } }
		owner = { add_resource = { minerals = -15000 } }
		hidden_effect = {
			set_planet_flag = galaxy_center_super_shipyard
			planet_event = { id = UniqueAscensionPerksEvents.84 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.84.Menu"
		trigger = { has_planet_flag = galaxy_center_super_shipyard }
		custom_tooltip = "UniqueAscensionPerksEvents.84.Menu.tooltip"
		hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.3086 } }
	}
	option = { name = EXIT default_hide_option = yes }
}

planet_event = {
	id = UniqueAscensionPerksEvents.85
	title = "UniqueAscensionPerksEvents.85.Name"
	desc = {
		trigger = {
			text = "UniqueAscensionPerksEvents.85.Desc"
			text = newline
			text = "UniqueAscensionPerksEvents.84.Energy"
			text = "UniqueAscensionPerksEvents.84.Mineral"
			text = "UniqueAscensionPerksEvents.84.Food"
			text = "UniqueAscensionPerksEvents.84.Research"
			success_text = { text = "UniqueAscensionPerksEvents.84.Trade" owner = { is_gestalt = no } }
			success_text = { text = "UniqueAscensionPerksEvents.84.Hive" owner = { is_hive_empire = yes } }
			success_text = { text = "UniqueAscensionPerksEvents.84.Auto" owner = { is_machine_empire = yes } }
			success_text = { text = "UniqueAscensionPerksEvents.84.Entrepot" owner = { is_machine_empire = yes } }
		}
	}
	show_sound = event_cityscape
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = galaxy_center_room }
	is_triggered_only = yes
	location = root
	option = {
		name = "d_energy_generator"
		allow = { owner = { resource_stockpile_compare = { resource = minerals value > 850 } } }
		owner = { add_resource = { minerals = -850 } }
		add_deposit = d_energy_generator
		hidden_effect = { change_variable = { which = energy_generator value = 1 } }# planet_event = { id = UniqueAscensionPerksEvents.85 }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_mineral_replicator"
		allow = { owner = { resource_stockpile_compare = { resource = minerals value > 850 } } }
		owner = { add_resource = { minerals = -850 } }
		add_deposit = d_mineral_replicator
		hidden_effect = { change_variable = { which = mineral_replicator value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_house_farming"
		allow = { owner = { resource_stockpile_compare = { resource = minerals value > 850 } } }
		owner = { add_resource = { minerals = -850 } }
		add_deposit = d_house_farming
		hidden_effect = { change_variable = { which = house_farming value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_research_center"
		allow = { owner = { resource_stockpile_compare = { resource = minerals value > 850 } } }
		owner = { add_resource = { minerals = -850 } }
		add_deposit = d_research_center
		hidden_effect = { change_variable = { which = research_center value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_trade_depot"
		allow = { owner = { is_gestalt = no resource_stockpile_compare = { resource = minerals value > 850 } } }
		owner = { add_resource = { minerals = -850 } }
		add_deposit = d_trade_depot
		hidden_effect = { change_variable = { which = trade_depot value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_hivemind_node"
		allow = { owner = { is_hive_empire = yes resource_stockpile_compare = { resource = food value > 850 } } }
		owner = { add_resource = { food = -850 } }
		add_deposit = d_hivemind_node
		hidden_effect = { change_variable = { which = hivemind_node value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_auto_factory"
		allow = { owner = { is_machine_empire = yes resource_stockpile_compare = { resource = minerals value > 850 } } }
		owner = { add_resource = { minerals = -850 } }
		add_deposit = d_auto_factory
		hidden_effect = { change_variable = { which = auto_factory value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_unit_entrepot"
		allow = { owner = { is_machine_empire = yes resource_stockpile_compare = { resource = minerals value > 850 } } }
		owner = { add_resource = { minerals = -850 } }
		add_deposit = d_unit_entrepot
		hidden_effect = { change_variable = { which = unity_entrepot value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = { name = BACK hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.84 } } ai_chance = { factor = 0.1 } }
}

planet_event = {
	id = UniqueAscensionPerksEvents.3086
	title = "UniqueAscensionPerksEvents.3086.Name"
	desc = "UniqueAscensionPerksEvents.3086.Desc"
	show_sound = event_cityscape
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = galaxy_center_room }
	is_triggered_only = yes
	location = root
	pre_triggers = { has_owner = yes }
	option = {
		name = "CORVETTE"
		allow = { owner = { resource_stockpile_compare = { resource = alloys value > 150 } } }
		owner = { add_resource = { alloys = -150 } }
		# galaxy_center_build_corvette = yes
		create_fleet = {
			effect = {
				set_owner = root.owner
				create_ship = { name = random design = "Standard Basic Corvette" }
				set_location = { target = root distance = 8 angle = random }
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 1000
				set_fleet_flag = recovery_fleet
			}
		}
		# hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.3086 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.3086.Desc"
	}
	option = {
		name = "DESTROYER"
		allow = { owner = { resource_stockpile_compare = { resource = alloys value > 300 } has_technology = tech_destroyers } }
		owner = { add_resource = { alloys = -300 } }
		# galaxy_center_build_destroyer = yes
		create_fleet = {
			effect = {
				set_owner = root.owner
				create_ship = { name = random design = "Standard Basic Destroyer" }
				set_location = { target = root distance = 8 angle = random }
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 1000
				set_fleet_flag = recovery_fleet
			}
		}
		# hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.3086 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.3086.Desc"
	}
	option = {
		name = "CRUISER"
		allow = { owner = { resource_stockpile_compare = { resource = alloys value > 550 } has_technology = tech_cruisers } }
		owner = { add_resource = { alloys = -550 } }
		# galaxy_center_build_cruiser = yes
		create_fleet = {
			effect = {
				set_owner = root.owner
				create_ship = { name = random design = "Standard Basic Cruiser" }
				set_location = { target = root distance = 8 angle = random }
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 1000
				set_fleet_flag = recovery_fleet
			}
		}
		# hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.3086 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.3086.Desc"
	}
	option = {
		name = "BATTLESHIP"
		allow = { owner = { resource_stockpile_compare = { resource = alloys value > 900 } has_technology = tech_battleships } }
		owner = { add_resource = { alloys = -900 } }
		# galaxy_center_build_battleship = yes
		create_fleet = {
			effect = {
				set_owner = root.owner
				create_ship = { name = random design = "Standard Basic Battleship" }
				set_location = { target = root distance = 8 angle = random }
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 1000
				set_fleet_flag = recovery_fleet
			}
		}
		# hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.3086 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.3086.Desc"
	}
	option = { name = BACK hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.84 } } ai_chance = { factor = 0.1 } }
}
# on_bi_yearly_pulse
event = {
	id = UniqueAscensionPerksEvents.86
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_playable_country = {
			has_ascension_perk = ap_galaxy_center
			any_owned_planet = { has_planet_flag = galaxy_center_planet }
		}
	}
	immediate = {
		# galaxy_center_yearly_effect = yes
		random_playable_country = {
			limit = {
				has_ascension_perk = ap_galaxy_center
				any_owned_planet = {
					has_planet_flag = galaxy_center_planet
					OR = {
						has_planet_flag = galaxy_center_casino
						has_planet_flag = galaxy_center_administration
						has_planet_flag = galaxy_center_museum
					}
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = galaxy_center_planet
					OR = {
						has_planet_flag = galaxy_center_casino
						has_planet_flag = galaxy_center_administration
						has_planet_flag = galaxy_center_museum
					}
				}
				if = {
					limit = { has_planet_flag = galaxy_center_casino }
					set_variable = { which = galaxy_center_casino value = 0 }
					while = {
						count = 750
						random_list = {
							1 = {}
							2 = { change_variable = { which = galaxy_center_casino value = 1 } }
							1 = { change_variable = { which = galaxy_center_casino value = 2 } }
							1 = { change_variable = { which = galaxy_center_casino value = 3 } }
							1 = { change_variable = { which = galaxy_center_casino value = -1 } }
						}
					}
					owner = { add_resource = { energy = 100 mult = galaxy_center_casino } }
				}
				if = {
					limit = { has_planet_flag = galaxy_center_administration }
					set_variable = { which = galaxy_center_administration value = 0 }
					while = {
						count = 75
						random_list = {
							1 = {}
							2 = { change_variable = { which = galaxy_center_administration value = 1 } }
							1 = { change_variable = { which = galaxy_center_administration value = 2 } }
							1 = { change_variable = { which = galaxy_center_administration value = 3 } }
							1 = { change_variable = { which = galaxy_center_administration value = -1 } }
						}
					}
					owner = { add_resource = { influence = 1 mult = galaxy_center_administration } }
				}
				if = {
					limit = { has_planet_flag = galaxy_center_museum }
					set_variable = { which = galaxy_center_museum value = 0 }
					while = {
						count = 250
						random_list = {
							1 = {}
							2 = { change_variable = { which = galaxy_center_museum value = 1 } }
							1 = { change_variable = { which = galaxy_center_museum value = 2 } }
							1 = { change_variable = { which = galaxy_center_museum value = 3 } }
							1 = { change_variable = { which = galaxy_center_museum value = -1 } }
						}
					}
					owner = { add_resource = { unity = 100 mult = galaxy_center_museum } }
				}
			}
		}
	}
}

######################################
#									 #
###### Influenceable Population ######
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.87
	title = "ap_advanced_government_1"
	desc = "ap_advanced_government_1_desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_galactic_senate
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT }
}
# on_monthly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.4088
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 1 }
	# pre_triggers = { has_owner = yes }
	trigger = {
		has_ascension_perk = ap_advanced_government_1
		any_owned_pop = { exists = planet pop_has_right_ethics = no }
	}
	immediate = {
		# shift_all_pops_ethics while = { limit = { any_owned_pop = { pop_has_right_ethics = no } }
		every_owned_planet = {
			limit = { any_owned_pop = { pop_has_right_ethics = no } }
			random_owned_pop = {
				limit = { pop_has_right_ethics = no }
				clear_ethos = yes
				random_list = {
					1 = { modifier = { factor = 500 owner = { has_ethic = ethic_materialist } } modifier = { factor = 100 owner = { has_ethic = ethic_fanatic_materialist } } pop_change_ethic = ethic_materialist }
					1 = { modifier = { factor = 500 owner = { has_ethic = ethic_spiritualist } } modifier = { factor = 100 owner = { has_ethic = ethic_fanatic_spiritualist } } pop_change_ethic = ethic_spiritualist }
					1 = { modifier = { factor = 500 owner = { has_ethic = ethic_xenophile } } modifier = { factor = 100 owner = { has_ethic = ethic_fanatic_xenophile } } pop_change_ethic = ethic_xenophile }
					1 = { modifier = { factor = 500 owner = { has_ethic = ethic_xenophobe } } modifier = { factor = 100 owner = { has_ethic = ethic_fanatic_xenophobe } } pop_change_ethic = ethic_xenophobe }
					1 = { modifier = { factor = 500 owner = { has_ethic = ethic_militarist } } modifier = { factor = 100 owner = { has_ethic = ethic_fanatic_militarist } } pop_change_ethic = ethic_militarist }
					1 = { modifier = { factor = 500 owner = { has_ethic = ethic_pacifist } } modifier = { factor = 100 owner = { has_ethic = ethic_fanatic_pacifist } } pop_change_ethic = ethic_pacifist }
					1 = { modifier = { factor = 500 owner = { has_ethic = ethic_egalitarian } } modifier = { factor = 100 owner = { has_ethic = ethic_fanatic_egalitarian } } pop_change_ethic = ethic_egalitarian }
					1 = { modifier = { factor = 500 owner = { has_ethic = ethic_authoritarian } } modifier = { factor = 100 owner = { has_ethic = ethic_fanatic_authoritarian } } pop_change_ethic = ethic_authoritarian }
				}
			}
		}
	}
}

# Root = event_target:ethic_planet
planet_event = {
	id = UniqueAscensionPerksEvents.4089
	title = "decision_ethic_shift"
	desc = "UniqueAscensionPerksEvents.4089.Desc"
	show_sound = event_celebration
	picture = GFX_evt_alien_propaganda
	location = event_target:ethic_planet
	is_triggered_only = yes
	immediate = {
		# set_variable = { which = num_ethic_pop_on_planet value = value:num_ethic_pop_on_planet }
		export_trigger_value_to_variable = {
			trigger = count_owned_pop
			parameters = {
				limit = { pop_has_right_ethics = no }
			}
			variable = num_ethic_pop_on_planet
		}
	}
	after = { clear_variable = num_ethic_pop_on_planet }
	option = {
		name = EXCELLENT
		owner = {
			add_resource = { influence = 1 mult = num_ethic_pop_on_planet }
			add_resource = { unity = -5 mult = num_ethic_pop_on_planet }
		}
		# hidden_effect = {
		# 	if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 10 } } owner = { add_resource = { influence = 10 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 20 } } owner = { add_resource = { influence = 20 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 30 } } owner = { add_resource = { influence = 30 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 40 } } owner = { add_resource = { influence = 40 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 50 } } owner = { add_resource = { influence = 50 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 60 } } owner = { add_resource = { influence = 60 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 70 } } owner = { add_resource = { influence = 70 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 80 } } owner = { add_resource = { influence = 80 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 90 } } owner = { add_resource = { influence = 90 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 100 } } owner = { add_resource = { influence = 100 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 110 } } owner = { add_resource = { influence = 110 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 120 } } owner = { add_resource = { influence = 120 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 130 } } owner = { add_resource = { influence = 130 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 140 } } owner = { add_resource = { influence = 140 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 150 } } owner = { add_resource = { influence = 150 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 160 } } owner = { add_resource = { influence = 160 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 170 } } owner = { add_resource = { influence = 170 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 180 } } owner = { add_resource = { influence = 180 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 190 } } owner = { add_resource = { influence = 190 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 200 } } owner = { add_resource = { influence = 200 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count >= 200 } } owner = { add_resource = { influence = 200 } } }
		# }
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.4090
	title = "UniqueAscensionPerksEvents.4090.Name"
	desc = "UniqueAscensionPerksEvents.4090.Desc"
	picture = GFX_evt_galactic_senate
	show_sound = event_conversation
	location = root # event_target:ethic_planet
	is_triggered_only = yes
	option = { name = OK }
}

country_event = {
	id = UniqueAscensionPerksEvents.88
	title = "ap_advanced_government_2"
	desc = "ap_advanced_government_2_desc"
	show_sound = event_psionic
	picture = GFX_evt_unity_symbol
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.89 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.89
	show_sound = event_administrative_work
	title = "ap_advanced_government_2"
	desc = {
		trigger = {
			text = "UniqueAscensionPerksEvents.89.Desc"
			text = newline
			success_text = { text = "Unity.Gain.Militarist" is_militarist = yes }
			success_text = { text = "Unity.Gain.Pacifist" is_pacifist = yes }
			success_text = { text = "Unity.Gain.Xenophile" is_xenophile = yes }
			success_text = { text = "Unity.Gain.Xenophobe" is_xenophobe = yes }
			success_text = { text = "Unity.Gain.Materialist" is_materialist = yes }
			success_text = { text = "Unity.Gain.Spiritualist" is_spiritualist = yes }
			success_text = { text = "Unity.Gain.Authoritarian" is_authoritarian = yes }
			success_text = { text = "Unity.Gain.Egalitarian" is_egalitarian = yes }
			success_text = { text = "Unity.Gain.Gestalt" has_ethic = ethic_gestalt_consciousness }
		}
	}
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = ethic_spaceship_room }
	is_triggered_only = yes
	option = { name = "distar.7.b" }
}

country_event = {
	id = UniqueAscensionPerksEvents.90
	title = "UniqueAscensionPerksEvents.90.Name"
	desc = "UniqueAscensionPerksEvents.90.Desc"
	picture = GFX_evt_unity_symbol
	show_sound = event_think_tank_build_upgrade
	location = from
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

######################################
#									 #
######### Eternal Vigilance ##########
#									 #
######################################

event = {
	id = UniqueAscensionPerksEvents.128
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		random_playable_country = {
			limit = { has_ascension_perk = ap_eternal_vigilance NOT = { has_country_flag = ap_eternal_vigilance_project_available } }
			country_event = { id = UniqueAscensionPerksEvents.129 }
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.129
	title = "ap_eternal_vigilance"
	desc = "ap_eternal_vigilance_desc"
	show_sound = event_ship_bridge
	picture = GFX_evt_eternal_vigilance
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes set_country_flag = ap_eternal_vigilance_project_available }
	option = { name = EXCELLENT enable_special_project = { name = ETERNAL_VIGILANCE location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.130
	title = "ETERNAL_VIGILANCE"
	desc = "UniqueAscensionPerksEvents.130.Desc"
	show_sound = event_ship_bridge
	picture = GFX_evt_eternal_vigilance
	location = capital_scope
	is_triggered_only = yes
	immediate = { set_country_flag = ap_eternal_vigilance_project }
	option = { name = EXCELLENT }
}

# on_bi_yearly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.131
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { years = 2 }
	trigger = {
		has_country_flag = ap_eternal_vigilance_project
		any_system_within_border = { NOR = { any_fleet_in_system = { has_fleet_flag = eternal_vigilance_fleet exists = owner is_owned_by = root } has_star_flag = vigilance_system } }
	}
	immediate = {
		random_system_within_border = {
			limit = { NOR = { any_fleet_in_system = { has_fleet_flag = eternal_vigilance_fleet exists = owner is_owned_by = root } has_star_flag = vigilance_system } }
			set_timed_star_flag = { flag = vigilance_system years = 15 }
			star = { save_event_target_as = spawn_location }
			create_fleet = {
				name = "Eternal Vigilance Fleet"
				settings = { spawn_debris = no uses_naval_capacity = no }
				effect = {
					set_owner = root
					create_ship = { name = random random_existing_design = military_station_small }
					set_location = { target = event_target:spawn_location distance = 100 angle = random }
					set_fleet_flag = eternal_vigilance_fleet
					add_modifier = { modifier = eternal_vigilance_fleet }
				}
			}
			while = {
				count = 3
				random = {
					chance = 50
					create_fleet = {
						name = "Eternal Vigilance Fleet"
						settings = { spawn_debris = no uses_naval_capacity = no }
						effect = {
							set_owner = root
							create_ship = { name = random random_existing_design = military_station_small }
							set_location = { target = event_target:spawn_location distance = 100 angle = random }
							set_fleet_flag = eternal_vigilance_fleet
							add_modifier = { modifier = eternal_vigilance_fleet }
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.132
	hide_window = yes
	mean_time_to_happen = { months = 6 }
	trigger = {
		host_has_dlc = "Apocalypse"
		has_country_flag = ap_eternal_vigilance_project
		has_technology = tech_titans
		any_owned_planet = { NOT = { has_planet_flag = vigilance_planet } }
	}
	immediate = {
		random_owned_planet = {
			limit = { NOT = { has_planet_flag = vigilance_planet } }
			save_event_target_as = spawn_location
			set_timed_planet_flag = { flag = vigilance_planet years = 15 }
			create_fleet = {
				name = "Eternal Vigilance Fleet"
				settings = { spawn_debris = no uses_naval_capacity = no }
				effect = {
					set_owner = root
					create_ship = { name = random random_existing_design = ion_cannon }
					set_location = { target = event_target:spawn_location distance = 8 angle = random }
					set_fleet_flag = eternal_vigilance_fleet_ion_cannon
					add_modifier = { modifier = eternal_vigilance_fleet }
				}
			}
		}
	}
}

######################################
#									 #
######### Primitive Creation #########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.140
	title = "ap_primitives_creation"
	desc = "ap_primitives_creation_desc"
	show_sound = event_primitive_civilization
	picture = GFX_evt_medieval_alien_civilization
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.141
	title = "UniqueAscensionPerksEvents.141.Name"
	desc = "UniqueAscensionPerksEvents.141.Desc"
	show_sound = event_primitive_civilization
	picture = GFX_evt_medieval_alien_civilization
	location = event_target:new_primitive_world
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.3142
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 24 }
	# pre_triggers = { has_owner = yes }
	trigger = {
		is_country_type = primitive
		any_owned_planet = {
			has_planet_flag = primitive_creation_done
			NOT = { has_planet_flag = primitive_creation_planet_cooldown }
			has_observation_outpost = yes
			observation_outpost_owner = { has_ascension_perk = ap_primitives_creation }
		}
	}

	immediate = {
		random_owned_planet = {
			limit = {
				has_planet_flag = primitive_creation_done
				NOT = { has_planet_flag = primitive_creation_planet_cooldown }
				has_observation_outpost = yes
				observation_outpost_owner = { has_ascension_perk = ap_primitives_creation }
			}
			save_event_target_as = primitive_creation_planet
			owner = { save_event_target_as = primitive_creation_country }
			set_timed_planet_flag = { flag = primitive_creation_planet_cooldown months = 60 }
			observation_outpost_owner = {
				random_list = {
					5 = { modifier = { factor = 0 is_primitive_stage_one = no } country_event = { id = UniqueAscensionPerksEvents.3143 } }
					15 = { modifier = { factor = 0 is_primitive_stage_one = no } country_event = { id = UniqueAscensionPerksEvents.3144 } }
					20 = { modifier = { factor = 0 is_primitive_stage_one = no } country_event = { id = UniqueAscensionPerksEvents.3145 } }
					10 = { modifier = { factor = 0 is_primitive_stage_two = no } country_event = { id = UniqueAscensionPerksEvents.3146 } }
					10 = { modifier = { factor = 0 is_primitive_stage_two = no } country_event = { id = UniqueAscensionPerksEvents.3147 } }
					10 = { modifier = { factor = 0 is_primitive_stage_two = no } country_event = { id = UniqueAscensionPerksEvents.3148 } }
					3 = { modifier = { factor = 0 is_primitive_stage_three = yes } country_event = { id = UniqueAscensionPerksEvents.3149 } }
					5 = { modifier = { factor = 0 is_primitive_stage_three = no } country_event = { id = UniqueAscensionPerksEvents.3150 } }
				}
			}
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.3143
	title = "UniqueAscensionPerksEvents.3143.Name"
	desc = "UniqueAscensionPerksEvents.3143.Desc"
	show_sound = event_primitive_civilization
	picture = GFX_evt_medieval_alien_civilization
	location = event_target:primitive_creation_planet
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.3143.a" ai_chance = { factor = 0.1 } add_resource = { alloys = 350 } }
	option = { name = "UniqueAscensionPerksEvents.3143.b" random = { chance = 20 primitive_country_into_next_age = yes } }
}

country_event = {
	id = UniqueAscensionPerksEvents.3144
	title = "UniqueAscensionPerksEvents.3144.Name"
	desc = "UniqueAscensionPerksEvents.3144.Desc"
	show_sound = event_primitive_civilization
	picture = GFX_evt_medieval_alien_civilization
	location = event_target:primitive_creation_planet
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.3144.a" ai_chance = { factor = 0.1 } add_resource = { food = 500 } }
	option = { name = "UniqueAscensionPerksEvents.3143.b" random = { chance = 40 primitive_country_into_next_age = yes } }
}

country_event = {
	id = UniqueAscensionPerksEvents.3145
	title = "UniqueAscensionPerksEvents.3145.Name"
	desc = "UniqueAscensionPerksEvents.3145.Desc"
	show_sound = event_primitive_civilization
	picture = GFX_evt_medieval_alien_civilization
	location = event_target:primitive_creation_planet
	is_triggered_only = yes
	option = { name = INTERESTING ai_chance = { factor = 0.1 } add_monthly_resource_mult = { resource = society_research value = 5 min = 250 max = 1000 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.3146
	title = "UniqueAscensionPerksEvents.3146.Name"
	desc = "UniqueAscensionPerksEvents.3146.Desc"
	show_sound = event_cityscape
	picture = GFX_evt_metropolis
	location = event_target:primitive_creation_planet
	is_triggered_only = yes
	option = { name = INTERESTING ai_chance = { factor = 0.1 } add_monthly_resource_mult = { resource = unity value = 5 min = 500 max = 1500 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.3147
	title = "UniqueAscensionPerksEvents.3147.Name"
	desc = "UniqueAscensionPerksEvents.3147.Desc"
	show_sound = event_cityscape
	picture = GFX_evt_mining_operations
	location = event_target:primitive_creation_planet
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.3147.a" ai_chance = { factor = 0.1 } add_resource = { minerals = 1000 } }
	option = { name = "UniqueAscensionPerksEvents.3143.b" random_list = { 95 = {} 5 = { modifier = { factor = 0 is_primitive_stage_three = yes } primitive_country_into_next_age = yes } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.3148
	title = "UniqueAscensionPerksEvents.3148.Name"
	desc = "UniqueAscensionPerksEvents.3148.Desc"
	show_sound = event_cityscape
	picture = GFX_evt_drilling_for_gas
	location = event_target:primitive_creation_planet
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.3148.a" ai_chance = { factor = 0.1 } add_resource = { energy = 1000 } }
	option = { name = "UniqueAscensionPerksEvents.3143.b" random_list = { 95 = {} 5 = { modifier = { factor = 0 is_primitive_stage_three = yes } primitive_country_into_next_age = yes } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.3149
	title = "UniqueAscensionPerksEvents.3149.Name"
	desc = "UniqueAscensionPerksEvents.3149.Desc"
	show_sound = event_primitive_civilization
	picture = GFX_evt_medieval_alien_civilization
	location = event_target:primitive_creation_planet
	is_triggered_only = yes
	option = { name = AMAZING ai_chance = { factor = 0.1 } add_resource = { influence = 30 } primitive_country_into_next_age = yes }
}

country_event = {
	id = UniqueAscensionPerksEvents.3150
	title = "UniqueAscensionPerksEvents.3150.Name"
	desc = "UniqueAscensionPerksEvents.3150.Desc"
	show_sound = event_radio_chatter
	picture = GFX_evt_star_chart
	location = event_target:primitive_creation_planet
	is_triggered_only = yes
	option = {
		name = "SEISMIC_DISTURBANCE_1_PROJECT"
		hidden_effect = {
			random_list = {
				999 = { modifier = { factor = 0 is_primitive_stage_three_contact = yes } country_event = { id = UniqueAscensionPerksEvents.3151 } }
				1 = { country_event = { id = UniqueAscensionPerksEvents.3152 } }
				1 = { country_event = { id = UniqueAscensionPerksEvents.3153 } }
				# 5 = { country_event = { id = UniqueAscensionPerksEvents.3154 } }
				# 5 = { country_event = { id = UniqueAscensionPerksEvents.3155 } }
				# 5 = { country_event = { id = UniqueAscensionPerksEvents.3156 } }
			}
		}
	}
	option = { name = "first_contact.400.B" ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.3151
	title = "UniqueAscensionPerksEvents.3152.Name"
	desc = "UniqueAscensionPerksEvents.3151.Desc"
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:primitive_creation_country
		planet_background = event_target:primitive_creation_country
		graphical_culture = event_target:primitive_creation_country
		city_level = event_target:primitive_creation_country
		room = event_target:primitive_creation_country.ruler
	}
	immediate = {
		event_target:primitive_creation_country = {
			set_country_flag = early_space_age_contact
			random_owned_pop = { species = { save_event_target_as = primitive_creation_species } }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.3151.a"
		allow = {
			any_owned_pop = { is_same_species = event_target:primitive_creation_species }
			NOR = { has_country_flag = early_space_age_contact_same_species_confirmed has_country_flag = early_space_age_contact_not_same_species_confirmed }
		}
		is_dialog_only = yes
		hidden_effect = { set_country_flag = early_space_age_contact_same_species_confirmed }
		add_resource = { influence = 50 }
		response_text = "UniqueAscensionPerksEvents.3151.Same.Species"
	}
	option = {
		name = "UniqueAscensionPerksEvents.3151.b"
		allow = { NOR = { has_country_flag = early_space_age_contact_not_same_species_confirmed has_country_flag = early_space_age_contact_same_species_confirmed } }
		is_dialog_only = yes
		hidden_effect = { set_country_flag = early_space_age_contact_not_same_species_confirmed }
		response_text = "UniqueAscensionPerksEvents.3151.NotSame.Species"
	}
	option = { name = "cara_home_exit" ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.3152
	title = "UniqueAscensionPerksEvents.3152.Name"
	desc = "UniqueAscensionPerksEvents.3152.Desc"
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:primitive_creation_country
		planet_background = event_target:primitive_creation_country
		graphical_culture = event_target:primitive_creation_country
		city_level = event_target:primitive_creation_country
		room = event_target:primitive_creation_country.ruler
	}
	option = { name = "precursor.314.a" add_resource = { consumer_goods = 500 } }
	option = { name = "cara_home_exit" ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.3153
	title = "UniqueAscensionPerksEvents.3152.Name"
	desc = "UniqueAscensionPerksEvents.3153.Desc"
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:primitive_creation_country
		planet_background = event_target:primitive_creation_country
		graphical_culture = event_target:primitive_creation_country
		city_level = event_target:primitive_creation_country
		room = event_target:primitive_creation_country.ruler
	}
	option = {
		name = "UniqueAscensionPerksEvents.3153.a"
		custom_tooltip = "UniqueAscensionPerksEvents.3153.a.tooltip"
		hidden_effect = {
			create_fleet = {
				name = "Primitive Corvette Fleet"
				settings = { spawn_debris = no }
				effect = {
					set_owner = root
					while = { count = 5 create_ship = { name = random design = "Standard Basic Corvette" } }
					set_location = { target = event_target:primitive_creation_planet distance = 8 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 1000
					set_fleet_flag = recovery_fleet
				}
			}
		}
	}
	option = { name = "cara_home_exit" ai_chance = { factor = 0.1 } }
}

planet_event = {
	id = UniqueAscensionPerksEvents.3160
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		save_event_target_as = primitive_creation_planet
		owner = { save_event_target_as = primitive_creation_country }
		primitive_country_into_next_age = yes
	}
}

######################################
#									 #
########## Powerful Vassals ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.142
	title = "ap_powerful_vassals"
	desc = "ap_powerful_vassals_desc"
	show_sound = event_mystic_reveal_light
	picture = GFX_evt_powerful_vassals
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.8143
	title = "UniqueAscensionPerksEvents.8143.Name"
	desc = "UniqueAscensionPerksEvents.8143.Desc"
	show_sound = event_construction
	picture = GFX_evt_hangar_bay
	is_triggered_only = yes
	immediate = {
		random_subject = { limit = { is_valid_vassal = yes }
			save_event_target_as = country_1
			root = { random_subject = { limit = { is_valid_vassal = yes NOT = { is_same_empire = event_target:country_1 } }
				save_event_target_as = country_2
				root = { random_subject = { limit = { is_valid_vassal = yes NOR = { is_same_empire = event_target:country_1 is_same_empire = event_target:country_2 } }
					save_event_target_as = country_3
					root = { random_subject = { limit = { is_valid_vassal = yes NOR = { is_same_empire = event_target:country_1 is_same_empire = event_target:country_2 is_same_empire = event_target:country_3 } }
						save_event_target_as = country_4
						root = { random_subject = { limit = { is_valid_vassal = yes NOR = { is_same_empire = event_target:country_1 is_same_empire = event_target:country_2 is_same_empire = event_target:country_3 is_same_empire = event_target:country_4 } }
							save_event_target_as = country_5
							root = { random_subject = { limit = { is_valid_vassal = yes NOR = { is_same_empire = event_target:country_1 is_same_empire = event_target:country_2 is_same_empire = event_target:country_3 is_same_empire = event_target:country_4 is_same_empire = event_target:country_5 } } save_event_target_as = country_6 } }
						} }
					} }
				} }
			} }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.1"
		trigger = { exists = event_target:country_1 }
		hidden_effect = { event_target:country_1 = { save_event_target_as = VassalNavyInvestmentTarget } country_event = { id = UniqueAscensionPerksEvents.8144 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.2"
		trigger = { exists = event_target:country_2 }
		hidden_effect = { event_target:country_2 = { save_event_target_as = VassalNavyInvestmentTarget } country_event = { id = UniqueAscensionPerksEvents.8144 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.3"
		trigger = { exists = event_target:country_3 }
		hidden_effect = { event_target:country_3 = { save_event_target_as = VassalNavyInvestmentTarget } country_event = { id = UniqueAscensionPerksEvents.8144 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.4"
		trigger = { exists = event_target:country_4 }
		hidden_effect = { event_target:country_4 = { save_event_target_as = VassalNavyInvestmentTarget } country_event = { id = UniqueAscensionPerksEvents.8144 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.5"
		trigger = { exists = event_target:country_5 }
		hidden_effect = { event_target:country_5 = { save_event_target_as = VassalNavyInvestmentTarget } country_event = { id = UniqueAscensionPerksEvents.8144 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.6"
		trigger = { exists = event_target:country_6 }
		hidden_effect = { event_target:country_6 = { save_event_target_as = VassalNavyInvestmentTarget } country_event = { id = UniqueAscensionPerksEvents.8144 } }
	}
	option = { name = "UniqueAscensionPerks.select_country" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.8143 } } }
	option = { name = ABORT ai_chance = { factor = 0 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.8144
	title = "UniqueAscensionPerksEvents.8144.Name"
	desc = "UniqueAscensionPerksEvents.8144.Desc"
	show_sound = event_construction
	picture = GFX_evt_hangar_bay
	is_triggered_only = yes
	immediate = { event_target:VassalNavyInvestmentTarget = { save_event_target_as = VassalNavyInvestmentTarget } }
	option = {
		name = UniqueAscensionPerksEvents.8144.Investment.1
		allow = { resource_stockpile_compare = { resource = alloys value > 2000 } resource_stockpile_compare = { resource = energy value > 1000 } }
		add_resource = { alloys = -2000 energy = -1000 }
		hidden_effect = { event_target:VassalNavyInvestmentTarget = { save_event_target_as = VassalNavyInvestmentTarget set_country_flag = subject_navy_investment_1 } country_event = { id = UniqueAscensionPerksEvents.8145 days = 30 random = 15 } country_event = { id = UniqueAscensionPerksEvents.8146 } }
		custom_tooltip = "UniqueAscensionPerksEvents.8144.Investment.1.tooltip"
	}
	option = {
		name = UniqueAscensionPerksEvents.8144.Investment.2
		allow = { resource_stockpile_compare = { resource = alloys value > 5000 } resource_stockpile_compare = { resource = energy value > 2000 } }
		add_resource = { alloys = -5000 energy = -2000 }
		hidden_effect = { event_target:VassalNavyInvestmentTarget = { save_event_target_as = VassalNavyInvestmentTarget set_country_flag = subject_navy_investment_2 } country_event = { id = UniqueAscensionPerksEvents.8145 days = 60 random = 30 } country_event = { id = UniqueAscensionPerksEvents.8146 } }
		custom_tooltip = "UniqueAscensionPerksEvents.8144.Investment.2.tooltip"
	}
	option = {
		name = UniqueAscensionPerksEvents.8144.Investment.3
		allow = { resource_stockpile_compare = { resource = alloys value > 10000 } resource_stockpile_compare = { resource = energy value > 4000 } }
		add_resource = { alloys = -10000 energy = -4000 }
		hidden_effect = { event_target:VassalNavyInvestmentTarget = { save_event_target_as = VassalNavyInvestmentTarget set_country_flag = subject_navy_investment_3 } country_event = { id = UniqueAscensionPerksEvents.8145 days = 120 random = 60 } country_event = { id = UniqueAscensionPerksEvents.8146 } }
		custom_tooltip = "UniqueAscensionPerksEvents.8144.Investment.3.tooltip"
	}
	option = {
		name = UniqueAscensionPerksEvents.8144.Investment.4
		allow = { resource_stockpile_compare = { resource = alloys value > 20000 } resource_stockpile_compare = { resource = energy value > 8000 } }
		add_resource = { alloys = -20000 energy = -8000 }
		hidden_effect = { event_target:VassalNavyInvestmentTarget = { save_event_target_as = VassalNavyInvestmentTarget set_country_flag = subject_navy_investment_4 } country_event = { id = UniqueAscensionPerksEvents.8145 days = 240 random = 120 } country_event = { id = UniqueAscensionPerksEvents.8146 } }
		custom_tooltip = "UniqueAscensionPerksEvents.8144.Investment.4.tooltip"
	}
	option = {
		name = UniqueAscensionPerksEvents.8144.Investment.5
		allow = { resource_stockpile_compare = { resource = alloys value > 40000 } resource_stockpile_compare = { resource = energy value > 16000 } }
		add_resource = { alloys = -40000 energy = -16000 }
		hidden_effect = { event_target:VassalNavyInvestmentTarget = { save_event_target_as = VassalNavyInvestmentTarget set_country_flag = subject_navy_investment_5 } country_event = { id = UniqueAscensionPerksEvents.8145 days = 480 random = 240 } country_event = { id = UniqueAscensionPerksEvents.8146 } }
		custom_tooltip = "UniqueAscensionPerksEvents.8144.Investment.5.tooltip"
	}
	option = { name = BACK ai_chance = { factor = 0 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.8143 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.8145
	title = "UniqueAscensionPerksEvents.8145.Name"
	desc = "UniqueAscensionPerksEvents.8145.Desc"
	show_sound = event_ship_thrusters
	picture = GFX_evt_fleet_neutral
	is_triggered_only = yes
	location = event_target:camera_location
	immediate = {
		event_target:VassalNavyInvestmentTarget = {
			save_event_target_as = VassalNavyInvestmentTarget
			# add_modifier = { modifier = vassal_navy_capacity_boost }
			random_owned_planet = { limit = { is_capital = yes } save_event_target_as = camera_location }
			if = {
				limit = { has_country_flag = subject_navy_investment_1 }
				ROOT = {
					create_navy_fleet_for_subject = yes # create_fleet_from_naval_cap = 0.1
					last_created_fleet = { set_owner = event_target:VassalNavyInvestmentTarget add_modifier = { modifier = eternal_vigilance_fleet } }
					event_target:VassalNavyInvestmentTarget = { random_owned_planet = { limit = { is_capital = yes } last_created_fleet = { set_location = prev } } }
				}
				remove_country_flag = subject_navy_investment_1
			} else_if = {
				limit = { has_country_flag = subject_navy_investment_2 }
				ROOT = {
					create_navy_fleet_for_subject = yes # create_fleet_from_naval_cap = 0.2
					last_created_fleet = { set_owner = event_target:VassalNavyInvestmentTarget add_modifier = { modifier = eternal_vigilance_fleet } }
					event_target:VassalNavyInvestmentTarget = { random_owned_planet = { limit = { is_capital = yes } last_created_fleet = { set_location = prev } } }
				}
				remove_country_flag = subject_navy_investment_2
			} else_if = {
				limit = { has_country_flag = subject_navy_investment_3 }
				ROOT = {
					create_navy_fleet_for_subject = yes # create_fleet_from_naval_cap = 0.35
					last_created_fleet = { set_owner = event_target:VassalNavyInvestmentTarget add_modifier = { modifier = eternal_vigilance_fleet } }
					event_target:VassalNavyInvestmentTarget = { random_owned_planet = { limit = { is_capital = yes } last_created_fleet = { set_location = prev } } }
				}
				remove_country_flag = subject_navy_investment_3
			} else_if = {
				limit = { has_country_flag = subject_navy_investment_4 }
				ROOT = {
					create_navy_fleet_for_subject = yes # create_fleet_from_naval_cap = 0.55
					last_created_fleet = { set_owner = event_target:VassalNavyInvestmentTarget add_modifier = { modifier = eternal_vigilance_fleet } }
					event_target:VassalNavyInvestmentTarget = { random_owned_planet = { limit = { is_capital = yes } last_created_fleet = { set_location = prev } } }
				}
				remove_country_flag = subject_navy_investment_4
			} else_if = {
				limit = { has_country_flag = subject_navy_investment_5 }
				ROOT = {
					create_navy_fleet_for_subject = yes # create_fleet_from_naval_cap = 0.75
					last_created_fleet = { set_owner = event_target:VassalNavyInvestmentTarget add_modifier = { modifier = eternal_vigilance_fleet } }
					event_target:VassalNavyInvestmentTarget = { random_owned_planet = { limit = { is_capital = yes } last_created_fleet = { set_location = prev } } }
				}
				remove_country_flag = subject_navy_investment_5
			}
		}
	}
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.8146
	title = "UniqueAscensionPerksEvents.8146.Name"
	desc = "UniqueAscensionPerksEvents.8146.Desc"
	show_sound = event_construction
	picture = GFX_evt_hangar_bay
	location = capital_scope
	is_triggered_only = yes
	immediate = { event_target:VassalNavyInvestmentTarget = { save_event_target_as = VassalNavyInvestmentTarget } }
	# option = { name = "Let's select another subject." hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.8143 } } }
	option = { name = OK }
}

######################################
#									 #
########## Defense Sentinels #########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.230
	title = "ap_defense_sentinels"
	desc = "ap_defense_sentinels_desc"
	show_sound = event_ai_started
	picture = GFX_evt_defense_sentinels
	location = capital_scope
	is_triggered_only = yes
	immediate = { create_defense_sentinels_country = yes }
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.231
	hide_window = yes
	mean_time_to_happen = { days = 14 }
	trigger = {
		has_ascension_perk = ap_defense_sentinels
		any_relation = { is_country_type = defense_sentinels has_relation_flag = { who = root flag = defense_sentinels } }
	}
	immediate =	{
		# defense_sentinels_idle_fleet_selection = yes
		save_event_target_as = main_country
		random_relation = {
			limit = {
				is_country_type = defense_sentinels
				has_country_flag = defense_sentinels
				has_relation_flag = { who = root flag = defense_sentinels }
			}
			# save_event_target_as = domesticated_spaceborn_alien
			every_owned_fleet = { # Select Fleets
				limit = {
					has_fleet_flag = defense_sentinels_fleet
					NOT = { has_fleet_flag = defense_sentinels_fleet_defending_order }
					OR = {
						AND = {
							has_fleet_flag = defense_sentinels_fleet_patroling
							OR = {
								is_fleet_idle = yes
								NOT = { has_fleet_flag = defense_sentinels_fleet_patroling_order }
								root = { any_system_within_border = { any_ship_in_system = { is_valid_target_for_domesticated_aliens_security = yes } } }
							}
						}
						AND = {
							has_fleet_flag = defense_sentinels_fleet_defending
							is_fleet_idle = yes
						}
						AND = {
							NOR = {
								has_fleet_flag = defense_sentinels_fleet_patroling
								has_fleet_flag = defense_sentinels_fleet_defending
							}
							is_fleet_idle = yes
						}
					}
				}
				fleet_event = { id = UniqueAscensionPerksEvents.232 days = 1 random = 2 }
			}
		}
	}
}
# MTTH days = 14
fleet_event = {
	id = UniqueAscensionPerksEvents.232
	hide_window = yes
	is_triggered_only = yes
	immediate =	{
		# defense_sentinels_idle_fleet_action = yes
		owner = {
			# save_event_target_as = domesticated_spaceborn_alien
			if = { limit = { NOT = { exists = event_target:main_country } }
				if = { limit = { exists = from from = { reverse_has_relation_flag = { who = prev flag = defense_sentinels } } }
					from = { save_event_target_as = main_country }
				} else = {
					random_relation = {
						limit = { reverse_has_relation_flag = { who = prev flag = defense_sentinels } }
						save_event_target_as = main_country
					}
				}
			}
		}
		if = { # Defense & Patrol
			limit = { has_fleet_flag = defense_sentinels_fleet NOT = { has_fleet_flag = defense_sentinels_fleet_defending_order } }
			if = {
				limit = { event_target:main_country = { any_system_within_border = { any_ship_in_system = { is_valid_target_for_domesticated_aliens_security = yes } } } }
				event_target:main_country = {
					random_system_within_border = {
						limit = { any_ship_in_system = { is_valid_target_for_domesticated_aliens_security = yes } }
						random_fleet_in_system = {
							limit = { is_valid_target_for_domesticated_aliens_security = yes }
							save_event_target_as = defense_sentinels_fleet_defend_against
							random = { chance = 10 set_timed_fleet_flag = { flag = defense_sentinels_fleet_defend_against_no_more_defenders months = 6 } }
						}
					}
				}
				save_event_target_as = defense_sentinels_fleet_defending
				set_fleet_flag = defense_sentinels_fleet_defending
				set_timed_fleet_flag = { flag = defense_sentinels_fleet_defending_order days = 45 }
				remove_auto_move_target = yes
				auto_follow_fleet = { target = event_target:defense_sentinels_fleet_defend_against attack_fleet = yes } else = {
					event_target:main_country = { random_planet_within_border = { save_event_target_as = defense_sentinels_fleet_destination } }
					save_event_target_as = defense_sentinels_fleet_patroling
					set_fleet_flag = defense_sentinels_fleet_patroling
					set_timed_fleet_flag = { flag = defense_sentinels_fleet_defending_order days = 10 }
					set_timed_fleet_flag = { flag = defense_sentinels_fleet_patroling_order months = 4 }
					auto_move_to_planet = { target = event_target:defense_sentinels_fleet_destination clear_auto_move_on_arrival = no }
				}
			}
		}
	}
}

# MERGED with UniqueAscensionPerksEvents.239
country_event = {
	id = UniqueAscensionPerksEvents.233
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 2 } # 14
	# trigger = {
	# 	has_ascension_perk = ap_defense_sentinels
	# 	any_relation = {
	# 		is_country_type = defense_sentinels
	# 		has_relation_flag = { who = root flag = defense_sentinels }
	# 		OR = {
	# 			# AND = { num_fleets < 5 ROOT = { NOT = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 } } }
	# 			# AND = { num_fleets < 10 ROOT = { has_technology = tech_defense_sentinels_1 NOT = { has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 } } }
	# 			# AND = { num_fleets < 20 ROOT = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 NOT = { has_technology = tech_defense_sentinels_3 } } }
	# 			# AND = { num_fleets < 30 ROOT = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 } }
	# 			AND = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 75 } ROOT = { NOT = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 } } }
	# 			AND = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 150 } ROOT = { has_technology = tech_defense_sentinels_1 NOT = { has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 } } }
	# 			AND = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 300 } ROOT = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 NOT = { has_technology = tech_defense_sentinels_3 } } }
	# 			AND = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 450 } ROOT = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 } }
	# 			# event_target:the_ally_faction = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 50 } }
	# 		}
	# 	}
	# }
	immediate =	{
		# create_defense_sentinels_fleet = yes
		create_defense_sentinels_country = yes
		random_planet_within_border = {
			limit = { has_planet_flag = defense_sentinels_home }
			weights = { base = 1 modifier = { add = 5 is_sector_capital = no } }
			save_event_target_as = spawn_location
		}
		event_target:defense_sentinels = {
			create_fleet = {
				name = NAME_defense_sentinels
				settings = { spawn_debris = no }
				effect = {
					set_owner = prev
					defense_sentinels_spawn_default_fleet = yes
					set_location = { target = event_target:spawn_location distance = 10 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 5000
					set_formation_scale = 1.0
					save_event_target_as = defense_sentinels_fleet
					set_fleet_flag = defense_sentinels_fleet
				}
			}
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.239
	hide_window = yes
	# is_triggered_only = yes
	mean_time_to_happen = { months = 2 } # 14
	trigger = {
		has_ascension_perk = ap_defense_sentinels
		any_relation = {
			is_country_type = defense_sentinels
			has_relation_flag = { who = root flag = defense_sentinels }
			count_owned_ship = { limit = { is_ship_size = large_ship_ai } count < 20 }
		}
	}
	immediate =	{
		if = { limit = { has_country_flag = ap_defense_sentinels_retriever_project }
			create_retriever_sentinels_fleet = yes
		}
		if = { limit = { NOT = { exists = event_target:defense_sentinels } }
			if = {
				limit = {
					any_relation = { has_relation_flag = { who = root flag = defense_sentinels } }
				}
				random_relation = {
					limit = { has_relation_flag = { who = root flag = defense_sentinels } }
					save_event_target_as = defense_sentinels
				}
			} else_if = {
				limit = {
					is_overlord = yes
					any_subject = { has_relation_flag = { who = root flag = defense_sentinels } }
				}
				random_subject = {
					limit = { has_relation_flag = { who = root flag = defense_sentinels } }
					save_event_target_as = defense_sentinels
				}
			} else_if = {
				limit = {
					any_country = { has_relation_flag = { who = root flag = defense_sentinels } }
				}
				random_country = {
					limit = { has_relation_flag = { who = root flag = defense_sentinels } }
					save_event_target_as = defense_sentinels
				}
			}
		}
		if = {
			limit = {
				exists = event_target:defense_sentinels
				event_target:defense_sentinels = {
					OR = {
						# AND = { num_fleets < 5 ROOT = { NOT = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 } } }
						# AND = { num_fleets < 10 ROOT = { has_technology = tech_defense_sentinels_1 NOT = { has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 } } }
						# AND = { num_fleets < 20 ROOT = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 NOT = { has_technology = tech_defense_sentinels_3 } } }
						# AND = { num_fleets < 30 ROOT = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 } }
						AND = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 75 } ROOT = { NOR = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 } } }
						AND = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 150 } ROOT = { has_technology = tech_defense_sentinels_1 NOR = { has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 } } }
						AND = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 300 } ROOT = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 NOT = { has_technology = tech_defense_sentinels_3 } } }
						AND = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 450 } ROOT = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 } }
						# event_target:the_ally_faction = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 50 } }
					}
				}
			}
			country_event = { id = UniqueAscensionPerksEvents.233 days = 5 random = 5 }
		}
	}
}

# on_yearly_pulse
# event = {
# 	id = UniqueAscensionPerksEvents.234
# 	hide_window = yes
# 	is_triggered_only = yes
# 	immediate = {
# 		random_playable_country = {
# 			limit = {
# 				has_ascension_perk = ap_defense_sentinels
# 				has_technology = tech_defense_sentinels_2
# 				NOT = { has_country_flag = ap_defense_sentinels_retriever_project_check }
# 			}
# 			set_country_flag = ap_defense_sentinels_retriever_project_check
# 			country_event = { id = UniqueAscensionPerksEvents.235 }
# 		}
# 	}
# }
# on_yearly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.235
	title = "RETRIEVER_SENTINEL"
	desc = "RETRIEVER_SENTINEL_DESC"
	show_sound = event_ai_started
	picture = GFX_evt_retriever_sentinel
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = {
		has_ascension_perk = ap_defense_sentinels
		has_technology = tech_defense_sentinels_2
		NOR = {
			has_country_flag = ap_defense_sentinels_retriever_project_check
			has_country_flag = ap_defense_sentinels_retriever_project
		}
	}
	immediate = { set_country_flag = ap_defense_sentinels_retriever_project_check get_capital_planet = yes }
	option = { name = EXCELLENT enable_special_project = { name = RETRIEVER_SENTINEL location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.236
	title = "UniqueAscensionPerksEvents.236.Name"
	desc = "UniqueAscensionPerksEvents.236.Desc"
	show_sound = event_ai_started
	picture = GFX_evt_retriever_sentinel
	location = capital_scope
	is_triggered_only = yes
	immediate =	{
		set_country_flag = ap_defense_sentinels_retriever_project
		remove_country_flag = ap_defense_sentinels_retriever_project_check # TODO TEST BUG REPORT
		while = { count = 3 create_retriever_sentinels_fleet = yes }
	}
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.237
	hide_window = yes
	mean_time_to_happen = { months = 6 }
	trigger = {
		has_country_flag = ap_defense_sentinels_retriever_project
		any_owned_planet = { NOT = { has_planet_flag = defense_sentinels_planet } }
		any_relation = { is_country_type = defense_sentinels has_relation_flag = { who = root flag = defense_sentinels } }
	}
	immediate = {
		create_defense_sentinels_country = yes
		random_owned_planet = {
			limit = { NOT = { has_planet_flag = defense_sentinels_planet } }
			weights = { base = 1 modifier = { add = 5 is_sector_capital = no } }
			save_event_target_as = spawn_location
			set_timed_planet_flag = { flag = defense_sentinels_planet years = 15 }
			event_target:defense_sentinels = {
				create_fleet = {
					name = NAME_defense_sentinels
					settings = { spawn_debris = no }
					effect = {
						set_owner = prev
						create_ship = { name = "" design = "Defense Sentinel - Fortress" graphical_culture = "ai_01" }
						set_location = { target = event_target:spawn_location distance = 8 angle = random }
						set_fleet_flag = defense_sentinels_fortress
					}
				}
			}
		}
	}
}

# on_yearly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.238
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { years = 1 }
	trigger = {
		has_ascension_perk = ap_defense_sentinels
		any_system_within_border = { NOR = { any_fleet_in_system = { has_fleet_flag = defense_sentinels_platforms } has_star_flag = defense_sentinels_system } }
	}
	immediate = {
		create_defense_sentinels_country = yes
		random_system_within_border = {
			limit = { NOR = { any_fleet_in_system = { has_fleet_flag = defense_sentinels_platforms } has_star_flag = defense_sentinels_system } }
			weights = { base = 1 modifier = { add = 5 is_capital_system = no } }
			set_timed_star_flag = { flag = defense_sentinels_system years = 15 }
			star = { save_event_target_as = spawn_location }
			event_target:defense_sentinels = {
				create_fleet = {
					name = NAME_defense_sentinels
					settings = { spawn_debris = no }
					effect = {
						set_owner = prev
						create_ship = { name = "" design = "Defense Sentinel - Platform" graphical_culture = "ai_01" }
						set_location = { target = event_target:spawn_location distance = 100 angle = random }
						set_fleet_flag = defense_sentinels_platforms
					}
				}
				while = {
					count = 2
					random = {
						chance = 40
						create_fleet = {
							name = NAME_defense_sentinels
							settings = { spawn_debris = no }
							effect = {
								set_owner = prev
								create_ship = { name = "" design = "Defense Sentinel - Platform" graphical_culture = "ai_01" }
								set_location = { target = event_target:spawn_location distance = 100 angle = random }
								set_fleet_flag = defense_sentinels_platforms
							}
						}
					}
				}
			}
		}
	}
}

######################################
#									 #
########## Leadership Upload #########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.250
	title = "ap_leadership_transfer"
	desc = "ap_leadership_transfer_desc"
	picture = GFX_evt_machine_sapience
	show_sound = event_psionic
	location = from
	is_triggered_only = yes
	option = { name = EXCELLENT hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.251 } } add_resource = { energy = 800 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.251
	title = "UniqueAscensionPerksEvents.251.Name"
	desc = "UniqueAscensionPerksEvents.251.Desc"
	picture = GFX_evt_machine_sapience
	show_sound = event_psionic
	location = from
	is_triggered_only = yes
	immediate = {
		random_owned_leader = { limit = { NOT = { leader_class = ruler } } save_event_target_as = leader_1 }
		random_owned_leader = { limit = { NOR = { leader_class = ruler is_same_value = event_target:leader_1 } } save_event_target_as = leader_2 }
		random_owned_leader = { limit = { NOR = { leader_class = ruler is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 } } save_event_target_as = leader_3 }
		random_owned_leader = { limit = { NOR = { leader_class = ruler is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 } } save_event_target_as = leader_4 }
		random_owned_leader = { limit = { NOR = { leader_class = ruler is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 is_same_value = event_target:leader_4 } } save_event_target_as = leader_5 }
		random_owned_leader = { limit = { NOR = { leader_class = ruler is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 is_same_value = event_target:leader_4 is_same_value = event_target:leader_5 } } save_event_target_as = leader_6 }
		random_owned_leader = { limit = { NOR = { leader_class = ruler is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 is_same_value = event_target:leader_4 is_same_value = event_target:leader_5 is_same_value = event_target:leader_6 } } save_event_target_as = leader_7 }
		random_owned_leader = { limit = { NOR = { leader_class = ruler is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 is_same_value = event_target:leader_4 is_same_value = event_target:leader_5 is_same_value = event_target:leader_6 is_same_value = event_target:leader_7 } } save_event_target_as = leader_8 }
	}
	option = { name = "UniqueAscensionPerksEvents.251.Leader.1" trigger = { exists = event_target:leader_1 } hidden_effect = { event_target:leader_1 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.2" trigger = { exists = event_target:leader_2 } hidden_effect = { event_target:leader_2 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.3" trigger = { exists = event_target:leader_3 } hidden_effect = { event_target:leader_3 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.4" trigger = { exists = event_target:leader_4 } hidden_effect = { event_target:leader_4 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.5" trigger = { exists = event_target:leader_5 } hidden_effect = { event_target:leader_5 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.6" trigger = { exists = event_target:leader_6 } hidden_effect = { event_target:leader_6 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.7" trigger = { exists = event_target:leader_7 } hidden_effect = { event_target:leader_7 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.8" trigger = { exists = event_target:leader_8 } hidden_effect = { event_target:leader_8 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerks.select_leader" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.251 } } }
	option = { name = ABORT ai_chance = { factor = 0 } hidden_effect = { if = { limit = { exists = from } hidden_effect = { add_resource = { energy = 100 } } } } }
}

leader_event = {
	id = UniqueAscensionPerksEvents.252
	title = "UniqueAscensionPerksEvents.252.Name"
	desc = "UniqueAscensionPerksEvents.252.Desc"
	picture = GFX_evt_machine_sapience
	show_sound = event_psionic
	location = from
	is_triggered_only = yes
	immediate = {
		# save_event_target_as = leader_uploaded
	}
	after = {
		from = {
			if = { limit = { is_variable_set = cloned_leader_number }
				add_resource = { energy = -800 mult = cloned_leader_number }
				root = {
					while = { count = prev.cloned_leader_number
						switch = {
							trigger = leader_class
							scientist = { from = { clone_leader = { target = prev class = scientist } } }
							admiral = { from = { clone_leader = { target = prev class = admiral } } }
							governor = { from = { clone_leader = { target = prev class = governor } } }
							general = { from = { clone_leader = { target = prev class = general } } }
						}
						from = {
							last_created_leader = { set_age = 1 set_name = "CLONED_LEADER_NAME" }
							change_variable = { which = "cloned_leader_number" value = -1 }
						}
					}
					leader_event = { id = UniqueAscensionPerksEvents.253 days = 1 }
				}
				clear_variable = cloned_leader_number
			}
		}
	}
	option = { name = "UniqueAscensionPerksEvents.252.1" allow = { from = { resource_stockpile_compare = { resource = energy value > 800 } } }  hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 1 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.2" allow = { from = { resource_stockpile_compare = { resource = energy value > 1600 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 2 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.3" allow = { from = { resource_stockpile_compare = { resource = energy value > 2400 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 3 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.4" allow = { from = { resource_stockpile_compare = { resource = energy value > 3200 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 4 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.5" allow = { from = { resource_stockpile_compare = { resource = energy value > 4000 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 5 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.6" allow = { from = { resource_stockpile_compare = { resource = energy value > 4800 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 6 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.7" allow = { from = { resource_stockpile_compare = { resource = energy value > 5600 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 7 } } } }
	option = {
		name = ABORT ai_chance = { factor = 0 }
		hidden_effect = {
			if = { limit = { exists = fromfrom } from = { add_resource = { energy = 100 } } }
		}
	}
}

# fromfrom = owner
leader_event = {
	id = UniqueAscensionPerksEvents.253
	title = "UniqueAscensionPerksEvents.253.Name"
	desc = "UniqueAscensionPerksEvents.253.Desc"
	picture = GFX_evt_machine_sapience
	show_sound = event_psionic
	location = owner.capital_scope
	is_triggered_only = yes
	immediate = {
		# save_event_target_as = leader_uploaded
	}
	option = { name = "UniqueAscensionPerks.lets_again" hidden_effect = { owner = { country_event = { id = UniqueAscensionPerksEvents.251 } } } }
	option = { name = EXCELLENT }
}

######################################
#									 #
############ Sector Z749 #############
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.270
	title = "ap_sector_z749"
	desc = "ap_sector_z749_desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = sector_z749_room }
	location = event_target:sector_z749_system_capital_system
	is_triggered_only = yes
	immediate = {
		if = { limit = { NOT = { exists = capital_scope } }
			random_system_within_border = {
				limit = { has_natural_wormhole = no }
				save_event_target_as = sector_z749_system_capital_system
			}
		} else_if = { limit = { capital_scope = { solar_system = { has_natural_wormhole = yes } } }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_natural_wormhole = no exists = space_owner space_owner = { is_same_empire = root } }
						save_event_target_as = sector_z749_system_capital_system
					}
				}
			}
		} else = { capital_scope = { solar_system = { save_event_target_as = sector_z749_system_capital_system } } }
		event_target:sector_z749_system_capital_system = {
			set_spawn_system_batch = begin
			spawn_system = { min_distance > 20 max_distance <= 50 min_orientation_angle = 0 max_orientation_angle = 359 initializer = "sector_z749_system" hyperlane = no }
			if = { limit = { NOT = { exists = event_target:sector_z749_system } }
				if = {
					limit = { exists = last_created_system last_created_system = { has_star_flag = sector_z749_system } }
					last_created_system = { save_event_target_as = sector_z749_system }
				} else = {
					random_system = {
						limit = { has_star_flag = sector_z749_system }
						save_event_target_as = sector_z749_system
					}
				}
			}
			event_target:sector_z749_system = {
				# isolate_system = yes
				prev = { spawn_natural_wormhole = { bypass_type = wormhole random_pos = yes orbit_angle = 170 } }
				spawn_natural_wormhole = { bypass_type = wormhole random_pos = yes orbit_angle = 350 }
				link_wormholes = prev
			}
			set_spawn_system_batch = end
		}
	}
	option = {
		name = EXCELLENT
		hidden_effect = {
			country_event = { id = distar.13060 scopes = { from = event_target:sector_z749_system_capital_system } }
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.271
	title = "Sector_Z749"
	desc = "UniqueAscensionPerksEvents.271.Desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = sector_z749_room }
	is_triggered_only = yes
	option = {
		name = UniqueAscensionPerksEvents.271.Gate
		allow = {
			custom_tooltip = {
				fail_text = UniqueAscensionPerksEvents.271.Req01
				NAND = {
					is_variable_set = invasion_gate_type
					check_variable = { which = invasion_gate_type value > 0 }
				}
			}
		}
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.272 } }
	}
	option = { name = EXIT default_hide_option = yes }
}

country_event = {
	id = UniqueAscensionPerksEvents.272
	title = "UniqueAscensionPerksEvents.272.Name"
	desc = "UniqueAscensionPerksEvents.272.Desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = sector_z749_room }
	is_triggered_only = yes
	immediate = {
		set_variable = { which = invasion_gate_type value = 0 }
	}
	after = {
		if = { limit = { check_variable = { which = invasion_gate_type value > 0 } }
			country_event = { id = UniqueAscensionPerksEvents.273 }
		}
	}
	option = { name = UniqueAscensionPerksEvents.272.Alpha	hidden_effect = { set_variable = { which = invasion_gate_type value = 1 } } }
	option = { name = UniqueAscensionPerksEvents.272.Beta	 trigger = { hidden_trigger = { check_variable = { which = invasion_gate_wave_type value > 1 } } } hidden_effect = { set_variable = { which = invasion_gate_type value = 2 } } }
	option = { name = UniqueAscensionPerksEvents.272.Gamma	 trigger = { hidden_trigger = { check_variable = { which = invasion_gate_wave_type value > 2 } } } hidden_effect = { set_variable = { which = invasion_gate_type value = 3 } } }
	option = { name = UniqueAscensionPerksEvents.272.Delta	 trigger = { hidden_trigger = { check_variable = { which = invasion_gate_wave_type value > 3 } } } hidden_effect = { set_variable = { which = invasion_gate_type value = 4 } } }
	option = { name = UniqueAscensionPerksEvents.272.Epsilon trigger = { hidden_trigger = { check_variable = { which = invasion_gate_wave_type value > 4 } } } hidden_effect = { set_variable = { which = invasion_gate_type value = 5 } } }
	option = { name = UniqueAscensionPerksEvents.272.Zeta	 trigger = { hidden_trigger = { check_variable = { which = invasion_gate_wave_type value > 5 } } } hidden_effect = { set_variable = { which = invasion_gate_type value = 6 } } }
	option = { name = UniqueAscensionPerksEvents.272.Kappa	 trigger = { hidden_trigger = { check_variable = { which = invasion_gate_wave_type value > 6 } } } hidden_effect = { set_variable = { which = invasion_gate_type value = 7 } } }
	option = { name = UniqueAscensionPerksEvents.272.Omega	 trigger = { hidden_trigger = { check_variable = { which = invasion_gate_wave_type value > 7 } } } hidden_effect = { set_variable = { which = invasion_gate_type value = 8 } } }
	option = { name = BACK hidden_effect = { set_variable = { which = invasion_gate_type value = 0 } country_event = { id = UniqueAscensionPerksEvents.271 } } ai_chance = { factor = 0.1 } }
}
# TODO
country_event = {
	id = UniqueAscensionPerksEvents.273
	title = "UniqueAscensionPerksEvents.272.Name"
	desc = {
		trigger = {
			success_text = { text = "UniqueAscensionPerksEvents.273.Alpha" check_variable = { which = invasion_gate_type value = 1 } }
			success_text = { text = "UniqueAscensionPerksEvents.273.Beta" check_variable = { which = invasion_gate_type value = 2 } }
			success_text = { text = "UniqueAscensionPerksEvents.273.Gamma" check_variable = { which = invasion_gate_type value = 3 } }
			success_text = { text = "UniqueAscensionPerksEvents.273.Delta" check_variable = { which = invasion_gate_type value = 4 } }
			success_text = { text = "UniqueAscensionPerksEvents.273.Epsilon" check_variable = { which = invasion_gate_type value = 5 } }
			success_text = { text = "UniqueAscensionPerksEvents.273.Zeta" check_variable = { which = invasion_gate_type value = 6 } }
			success_text = { text = "UniqueAscensionPerksEvents.273.Kappa" check_variable = { which = invasion_gate_type value = 7 } }
			success_text = { text = "UniqueAscensionPerksEvents.273.Omega" check_variable = { which = invasion_gate_type value = 8 } }
		}
	}
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = sector_z749_room }
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.273.a"
		# activate_invasion_gate = yes
		if = {		limit = { check_variable = { which = invasion_gate_type value = 1 } } add_resource = { energy = -1000 } }
		else_if = { limit = { check_variable = { which = invasion_gate_type value = 2 } } add_resource = { energy = -2000 } }
		else_if = { limit = { check_variable = { which = invasion_gate_type value = 3 } } add_resource = { energy = -3400 } }
		else_if = { limit = { check_variable = { which = invasion_gate_type value = 4 } } add_resource = { energy = -5000 } }
		else_if = { limit = { check_variable = { which = invasion_gate_type value = 5 } } add_resource = { energy = -6600 } }
		else_if = { limit = { check_variable = { which = invasion_gate_type value = 6 } } add_resource = { energy = -8800 } }
		else_if = { limit = { check_variable = { which = invasion_gate_type value = 7 } } add_resource = { energy = -12000 } }
		else_if = { limit = { check_variable = { which = invasion_gate_type value = 8 } } add_resource = { energy = -18000 } }
		country_event = { id = UniqueAscensionPerksEvents.274 }
	}
	option = { name = BACK hidden_effect = { set_variable = { which = invasion_gate_type value = 0 } country_event = { id = UniqueAscensionPerksEvents.272 } } ai_chance = { factor = 0.1 } }
}

# TODO a lot, eg different fleets.
country_event = {
	id = UniqueAscensionPerksEvents.274
	hide_window = yes
	is_triggered_only = yes
	immediate =	{
		# create_invasion_gave_country = yes
		# save_event_target_as = main_country

		if = {
			limit = { any_country = { has_country_flag = sector_z749_country } }
			random_country = {
				limit = { has_country_flag = sector_z749_country }
				save_event_target_as = sector_z749_country
			}
		} else = {
			event_target:sector_z749_system = {
				random_system_planet = {
					limit = { is_star = no }
					weights = { base = 1 modifier = { add = 3 is_planet_class = pc_habitat } }
					create_country = {
						name = "Sector Z-749"
						type = faction
						ignore_initial_colony_error = yes
						day_zero_contact = no
						flag = {
							icon = { category = "domination" file = "domination_20.dds" }
							background= { category = "backgrounds" file = "circle.dds" }
							colors = { "red" "black" "null" "null" }
						}
						effect = {
							# set_name = "Sector_Z749"
							every_country = { establish_communications_no_message = prev }
							save_event_target_as = sector_z749_country
							set_country_flag = sector_z749_country
							set_faction_hostility = { set_hostile = yes set_neutral = no set_friendly = no }
						}
					}
				}
			}
		}
		# invasion_gate_create_fleet = yes
		# random_system = {
		# 	limit = { has_star_flag = sector_z749_system }
		# 	star = { save_event_target_as = spawn_location }
		# }
		event_target:sector_z749_system.star = { save_event_target_as = spawn_location }
		event_target:sector_z749_country = {
			set_variable = { which = invasion_gate_wave_type value = prev.invasion_gate_type }
			set_variable = { which = invasion_gate_wave_count value = invasion_gate_wave_type }
			multiply_variable = { which = invasion_gate_wave_count value = 1.75 }
			round_variable = invasion_gate_wave_count
			while = {
				count = 9
				create_fleet = {
					name = "Invasion Gate Fleet"
					settings = { spawn_debris = no }
					effect = {
						set_owner = prev
						while = {
							count = prev.invasion_gate_wave_count
							if = { limit = { PREV = { check_variable = { which = invasion_gate_wave_type value = 1 } } } while = { count = 10 create_ship = { design = "NAME_Outrider" graphical_culture = "pirate_01" } } } # Pirate Corvette
							if = { limit = { PREV = { check_variable = { which = invasion_gate_wave_type value = 2 } } } while = { count = 6 create_ship = { design = "NAME_Lancer" graphical_culture = "pirate_01" } } } # Pirate Destroyer
							if = { limit = { PREV = { check_variable = { which = invasion_gate_wave_type value = 3 } } } while = { count = 3 create_ship = { design = "NAME_Void_Champion" graphical_culture = "pirate_01" } } } # Pirate Cruiser
							if = { limit = { PREV = { check_variable = { which = invasion_gate_wave_type value = 4 } } } while = { count = 1 create_ship = { design = "NAME_Ancestral_Glory" graphical_culture = "pirate_01" } } } # Marauder Galleon
						}
						set_location = { target = event_target:spawn_location distance = 1000 angle = random }
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 5000
						set_formation_scale = 1.0
						save_event_target_as = invasion_gate_fleet
						set_fleet_flag = invasion_gate_fleet
					}
				}
			}
			# set_variable = { which = invasion_gate_wave_type value = 0 }
		}
	}
}

# on_country_destroyed
# TODO different rewards + DESC
# country_event = {
# 	id = UniqueAscensionPerksEvents.275
# 	hide_window = yes
# 	is_triggered_only = yes
# 	trigger = {
# 		is_country_type = faction
# 		has_country_flag = sector_z749_country
# 		exists = from
# 		from = { has_ascension_perk = ap_sector_z749 }
# 	}
# 	immediate =	{
#		# give_fe_tech = yes
# 		change_variable = { which = invasion_gate_wave_type value = 1 }
# 		from = {
# 			set_variable = { which = invasion_gate_wave_type value = prev.invasion_gate_wave_type }
# 			add_resource = {
# 				energy = 1000
# 				alloys = 1000
# 				unity = 1000
# 				minerals = 1000
# 				influence = 10
# 				consumer_goods = 100
# 				exotic_gases = 10
# 				volatile_motes = 10
# 				rare_crystals = 10
# 				sr_living_metal = 5
# 				nanites = 5
# 				sr_dark_matter = 2
# 				sr_zro = 1
# 				mult = invasion_gate_wave_type
# 			}
# 		}
# 	}
# }

######################################
#									 #
########## Pinnacle Society ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.300
	title = "ap_pyramidal_society"
	desc = "ap_pyramidal_society_desc"
	show_sound = event_administrative_work
	picture = GFX_evt_pyramidal_society
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT country_event = { id = UniqueAscensionPerksEvents.301 days = 3 } }
}

# v3.3: chance & amount 2/3
country_event = {
	id = UniqueAscensionPerksEvents.301
	hide_window = yes
	mean_time_to_happen = { days = 42 } # days = 30
	trigger = {
		merg_is_default_empire = yes
		OR = { has_ascension_perk = ap_pyramidal_society has_country_flag = ap_pyramidal_society }
		OR = {
			AND = { is_common_empire = yes any_owned_planet = { NOR = { has_deposit = d_district_governor has_deposit = d_district_university has_deposit = d_district_defense has_deposit = d_district_industry } } }
			AND = { is_hive_empire = yes any_owned_planet = { NOR = { has_deposit = d_district_queen has_deposit = d_district_nursery has_deposit = d_district_forest has_deposit = d_district_entrepot } } }
			AND = { is_machine_empire = yes any_owned_planet = { NOR = { has_deposit = d_district_foundry has_deposit = d_district_security has_deposit = d_district_upgrade has_deposit = d_district_recycling } } }
			AND = { is_megacorp = yes any_owned_planet = { NOR = { has_deposit = d_district_finance has_deposit = d_district_casino has_deposit = d_district_bank has_deposit = d_district_journalism } } }
		}
	}
	immediate = {
		# pinnacle_society_deposit_spawn = yes
		if = { limit = { is_common_empire = yes }
			if = { limit = { any_owned_planet = { NOR = { has_deposit = d_district_governor has_deposit = d_district_university has_deposit = d_district_defense has_deposit = d_district_industry } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_governor } } while = { count = 4 random = { chance = 50 add_deposit = d_district_governor } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_university } } while = { count = 10 random = { chance = 70 add_deposit = d_district_university } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_defense } } while = { count = 6 random = { chance = 60 add_deposit = d_district_defense } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_industry } } while = { count = 6 random = { chance = 60 add_deposit = d_district_industry } } }
			}
			if = { limit = { any_owned_planet = { has_deposit = yes OR = {
						has_deposit = d_district_queen
						has_deposit = d_district_nursery
						has_deposit = d_district_entrepot
						has_deposit = d_district_forest
						has_deposit = d_district_foundry
						has_deposit = d_district_security
						has_deposit = d_district_upgrade
						has_deposit = d_district_recycling
						has_deposit = d_district_finance
						has_deposit = d_district_casino
						has_deposit = d_district_bank
						has_deposit = d_district_journalism
				} } }
				every_owned_planet = { limit = { has_deposit = yes OR = {
						has_deposit = d_district_queen
						has_deposit = d_district_nursery
						has_deposit = d_district_entrepot
						has_deposit = d_district_forest
						has_deposit = d_district_foundry
						has_deposit = d_district_security
						has_deposit = d_district_upgrade
						has_deposit = d_district_recycling
						has_deposit = d_district_finance
						has_deposit = d_district_casino
						has_deposit = d_district_bank
						has_deposit = d_district_journalism
					} }
					planet_event = { id = UniqueAscensionPerksEvents.302 days = 5 }
				}
			}
		} else_if = { limit = { is_hive_empire = yes }
			if = { limit = { any_owned_planet = { NOR = { has_deposit = d_district_queen has_deposit = d_district_nursery has_deposit = d_district_forest has_deposit = d_district_entrepot } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_queen } } while = { count = 4 random = { chance = 50 add_deposit = d_district_queen } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_nursery } } while = { count = 10 random = { chance = 70 add_deposit = d_district_nursery } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_forest } } while = { count = 10 random = { chance = 70 add_deposit = d_district_forest } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_entrepot } } while = { count = 4 random = { chance = 50 add_deposit = d_district_entrepot } } }
			}
			if = { limit = { any_owned_planet = { has_deposit = yes OR = {
						has_deposit = d_district_governor
						has_deposit = d_district_university
						has_deposit = d_district_defense
						has_deposit = d_district_industry
						has_deposit = d_district_foundry
						has_deposit = d_district_security
						has_deposit = d_district_upgrade
						has_deposit = d_district_recycling
						has_deposit = d_district_finance
						has_deposit = d_district_casino
						has_deposit = d_district_bank
						has_deposit = d_district_journalism
				} } }
				every_owned_planet = { limit = { has_deposit = yes OR = {
						has_deposit = d_district_governor
						has_deposit = d_district_university
						has_deposit = d_district_defense
						has_deposit = d_district_industry
						has_deposit = d_district_foundry
						has_deposit = d_district_security
						has_deposit = d_district_upgrade
						has_deposit = d_district_recycling
						has_deposit = d_district_finance
						has_deposit = d_district_casino
						has_deposit = d_district_bank
						has_deposit = d_district_journalism
					} }
					planet_event = { id = UniqueAscensionPerksEvents.302 days = 5 }
				}
			}
		} else_if = { limit = { is_machine_empire = yes }
			if = { limit = { any_owned_planet = { NOR = { has_deposit = d_district_foundry has_deposit = d_district_security has_deposit = d_district_upgrade has_deposit = d_district_recycling } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_security } } while = { count = 6 random = { chance = 60 add_deposit = d_district_security } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_foundry } } while = { count = 10 random = { chance = 70 add_deposit = d_district_foundry } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_upgrade } } while = { count = 6 random = { chance = 60 add_deposit = d_district_upgrade } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_recycling } } while = { count = 10 random = { chance = 70 add_deposit = d_district_recycling } } }
			}
			if = { limit = { any_owned_planet = { has_deposit = yes OR = {
						has_deposit = d_district_governor
						has_deposit = d_district_university
						has_deposit = d_district_defense
						has_deposit = d_district_industry
						has_deposit = d_district_queen
						has_deposit = d_district_nursery
						has_deposit = d_district_entrepot
						has_deposit = d_district_forest
						has_deposit = d_district_finance
						has_deposit = d_district_casino
						has_deposit = d_district_bank
						has_deposit = d_district_journalism
				} } }
				every_owned_planet = { limit = { has_deposit = yes OR = {
						has_deposit = d_district_governor
						has_deposit = d_district_university
						has_deposit = d_district_defense
						has_deposit = d_district_industry
						has_deposit = d_district_queen
						has_deposit = d_district_nursery
						has_deposit = d_district_entrepot
						has_deposit = d_district_forest
						has_deposit = d_district_finance
						has_deposit = d_district_casino
						has_deposit = d_district_bank
						has_deposit = d_district_journalism
					} }
					planet_event = { id = UniqueAscensionPerksEvents.302 days = 5 }
				}
			}
		} else_if = { limit = { is_megacorp = yes }
			if = { limit = { any_owned_planet = { NOR = { has_deposit = d_district_finance has_deposit = d_district_casino has_deposit = d_district_bank has_deposit = d_district_journalism } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_finance } } while = { count = 10 random = { chance = 70 add_deposit = d_district_finance } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_casino } } while = { count = 10 random = { chance = 70 add_deposit = d_district_casino } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_bank } } while = { count = 4 random = { chance = 50 add_deposit = d_district_bank } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_journalism } } while = { count = 6 random = { chance = 60 add_deposit = d_district_journalism } } }
			}
			if = { limit = { any_owned_planet = { has_deposit = yes OR = {
						has_deposit = d_district_governor
						has_deposit = d_district_university
						has_deposit = d_district_defense
						has_deposit = d_district_industry
						has_deposit = d_district_queen
						has_deposit = d_district_nursery
						has_deposit = d_district_entrepot
						has_deposit = d_district_forest
						has_deposit = d_district_foundry
						has_deposit = d_district_security
						has_deposit = d_district_upgrade
						has_deposit = d_district_recycling
				} } }
				every_owned_planet = { limit = { has_deposit = yes OR = {
						has_deposit = d_district_governor
						has_deposit = d_district_university
						has_deposit = d_district_defense
						has_deposit = d_district_industry
						has_deposit = d_district_queen
						has_deposit = d_district_nursery
						has_deposit = d_district_entrepot
						has_deposit = d_district_forest
						has_deposit = d_district_foundry
						has_deposit = d_district_security
						has_deposit = d_district_upgrade
						has_deposit = d_district_recycling
					} }
					planet_event = { id = UniqueAscensionPerksEvents.302 days = 5 }
				}
			}
		}
	}
}

# Remove deposits
# From = owner = country
planet_event = {
	id = UniqueAscensionPerksEvents.302
	hide_window = yes
	# mean_time_to_happen = { days = 42 } # days = 30 planet MTTH is worst
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	trigger = {
		has_deposit = yes
		exists = from
		from = {
			OR = { has_ascension_perk = ap_pyramidal_society has_country_flag = ap_pyramidal_society }
		}
		OR = {
			AND = {
				from = { is_common_empire = no }
				OR = {
					has_deposit = d_district_governor
					has_deposit = d_district_university
					has_deposit = d_district_defense
					has_deposit = d_district_industry
				}
			}
			AND = {
				from = { is_hive_empire = no }
				OR = {
					has_deposit = d_district_queen
					has_deposit = d_district_nursery
					has_deposit = d_district_entrepot
					has_deposit = d_district_forest
				}
			}
			AND = {
				from = { is_machine_empire = no }
				OR = {
					has_deposit = d_district_foundry
					has_deposit = d_district_security
					has_deposit = d_district_upgrade
					has_deposit = d_district_recycling
				}
			}
			AND = {
				from = { is_megacorp = no }
				OR = {
					has_deposit = d_district_finance
					has_deposit = d_district_casino
					has_deposit = d_district_bank
					has_deposit = d_district_journalism
				}
			}
		}
	}
	immediate = {
		# pinnacle_society_deposit_removal = yes
		if = { limit = { from = { is_common_empire = no } }
			if = { limit = { has_deposit = d_district_governor} while = { limit = { has_deposit = d_district_governor } remove_deposit = d_district_governor } }
			if = { limit = { has_deposit = d_district_university} while = { limit = { has_deposit = d_district_university } remove_deposit = d_district_university } }
			if = { limit = { has_deposit = d_district_defense} while = { limit = { has_deposit = d_district_defense } remove_deposit = d_district_defense } }
			if = { limit = { has_deposit = d_district_industry} while = { limit = { has_deposit = d_district_industry } remove_deposit = d_district_industry } }
		}
		if = { limit = { from = { is_hive_empire = no } }
			if = { limit = { has_deposit = d_district_queen } while = { limit = { has_deposit = d_district_queen } remove_deposit = d_district_queen } }
			if = { limit = { has_deposit = d_district_nursery } while = { limit = { has_deposit = d_district_nursery } remove_deposit = d_district_nursery } }
			if = { limit = { has_deposit = d_district_forest } while = { limit = { has_deposit = d_district_forest } remove_deposit = d_district_forest } }
			if = { limit = { has_deposit = d_district_entrepot } while = { limit = { has_deposit = d_district_entrepot } remove_deposit = d_district_entrepot } }
		}
		if = { limit = { from = { is_machine_empire = no } }
			if = { limit = { has_deposit = d_district_security } while = { limit = { has_deposit = d_district_security } remove_deposit = d_district_security } }
			if = { limit = { has_deposit = d_district_foundry } while = { limit = { has_deposit = d_district_foundry } remove_deposit = d_district_foundry } }
			if = { limit = { has_deposit = d_district_upgrade } while = { limit = { has_deposit = d_district_upgrade } remove_deposit = d_district_upgrade } }
			if = { limit = { has_deposit = d_district_recycling } while = { limit = { has_deposit = d_district_recycling } remove_deposit = d_district_recycling } }
		}
		if = { limit = { from = { is_megacorp = no } }
			if = { limit = { has_deposit = d_district_finance } while = { limit = { has_deposit = d_district_finance } remove_deposit = d_district_finance } }
			if = { limit = { has_deposit = d_district_casino } while = { limit = { has_deposit = d_district_casino } remove_deposit = d_district_casino } }
			if = { limit = { has_deposit = d_district_bank } while = { limit = { has_deposit = d_district_bank } remove_deposit = d_district_bank } }
			if = { limit = { has_deposit = d_district_journalism } while = { limit = { has_deposit = d_district_journalism } remove_deposit = d_district_journalism } }
		}
	}
}

######################################
#									 #
###### Surgical Orbital Strike #######
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.310
	title = "ap_orbital_surgical_strike"
	desc = "ap_orbital_surgical_strike_desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_surgical_strike
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

planet_event = {
	id = UniqueAscensionPerksEvents.311
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		NOT = { has_planet_flag = had_surgical_strike }
		from = {
			has_ascension_perk = ap_orbital_surgical_strike
			has_country_flag = surgical_strike_active
			any_owned_fleet = {
				is_ship_class = shipclass_military
				orbit = { is_same_value = root }
				fleet_size > 20
			}
		}
 	}
	immediate = {
		random = {
			chance = 5
			save_event_target_as = surgical_strike_planet
			set_timed_planet_flag = { flag = had_surgical_strike months = 4 }
			from = {
				random_owned_fleet = {
					limit = {
						is_ship_class = shipclass_military
						orbit = { is_same_value = event_target:surgical_strike_planet }
					}
					save_event_target_as = surgical_strike_fleet
				}
				country_event = { id = UniqueAscensionPerksEvents.312 }
			}
		}
		# random_list = { 15 = { from = { random_owned_pop = { kill_pop = yes } } } 85 = {} }
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.312
	title = "UniqueAscensionPerksEvents.312.Name"
	desc = "UniqueAscensionPerksEvents.312.Desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_surgical_strike
	location = event_target:surgical_strike_planet
	is_triggered_only = yes
	option = {
		name = "UniqueAscensionPerksEvents.312.Raid"
		allow = { has_technology = tech_raid_resources }
		trigger = { event_target:surgical_strike_planet = { NOT = { has_planet_flag = had_surgical_strike_resources_raid } } }
		custom_tooltip = "UniqueAscensionPerksEvents.312.Raid.tooltip"
		hidden_effect = {
			event_target:surgical_strike_planet = {
				# surgical_strike_take_resources = yes
				set_timed_planet_flag = { flag = had_surgical_strike_resources_raid years = 5 }
				surgical_strike_resources = yes
				if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 50 } } surgical_strike_resources = yes
					if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 100 } } surgical_strike_resources = yes
						if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 150 } } surgical_strike_resources = yes
							if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 200 } } surgical_strike_resources = yes
								if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 250 } } surgical_strike_resources = yes
									if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 300 } } surgical_strike_resources = yes }
								}
							}
						}
					}
				}
			}
			country_event = { id = UniqueAscensionPerksEvents.313 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.312.District"
		trigger = { event_target:surgical_strike_planet = { num_districts = { type = any value > 0 } } } # has_district = yes
		custom_tooltip = "UniqueAscensionPerksEvents.312.District.tooltip"
		hidden_effect = {
			event_target:surgical_strike_planet = {
				# surgical_strike_destroy_districts = yes
				surgical_strike_districts = yes
				while = { count = 3 random = { chance = 50 surgical_strike_districts = yes } }
				if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 40  } } random = { chance = 50 surgical_strike_districts = yes }
					if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 80  } } random = { chance = 50 surgical_strike_districts = yes }
						if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 120 } } random = { chance = 50 surgical_strike_districts = yes }
							if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 160 } } random = { chance = 50 surgical_strike_districts = yes }
								if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 200 } } random = { chance = 50 surgical_strike_districts = yes }
									if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 240 } } random = { chance = 50 surgical_strike_districts = yes }
										if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 280 } } random = { chance = 50 surgical_strike_districts = yes }
											if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 320 } } random = { chance = 50 surgical_strike_districts = yes } }
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.312.Building"
		trigger = { event_target:surgical_strike_planet = { has_building = yes } }
		custom_tooltip = "UniqueAscensionPerksEvents.312.Building.tooltip"
		hidden_effect = {
			event_target:surgical_strike_planet = {
				# surgical_strike_destroy_buildings = yes
				surgical_strike_buildings = yes
				while = { count = 1 random = { chance = 50 surgical_strike_buildings = yes } }
				if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 60  } } random = { chance = 50 surgical_strike_buildings = yes }
					if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 120 } } random = { chance = 50 surgical_strike_buildings = yes }
						if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 180 } } random = { chance = 50 surgical_strike_buildings = yes }
							if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 240 } } random = { chance = 50 surgical_strike_buildings = yes }
								if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 300 } } random = { chance = 50 surgical_strike_buildings = yes } }
							}
						}
					}
				}
			}
		}
	}
	option = {
		allow = { OR = { has_ascension_perk = ap_nihilistic_acquisition has_valid_civic = civic_barbaric_despoilers is_homicidal = yes has_valid_civic = civic_machine_assimilator } }
		name = "UniqueAscensionPerksEvents.312.Abduct"
		custom_tooltip = "UniqueAscensionPerksEvents.312.Abduct.tooltip"
		hidden_effect = {
			event_target:surgical_strike_planet = {
				# surgical_strike_abduct_pop = yes
				random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes
				while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
				if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 40  } } while = { count = 2 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
					if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 80  } } while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
						if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 120 } } while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
							if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 160 } } while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
								if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 200 } } while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
									if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 240 } } while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
										if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 280 } } while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
											if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 320 } } while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } } }
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.312.Pop"
		custom_tooltip = "UniqueAscensionPerksEvents.312.Pop.tooltip"
		hidden_effect = {
			event_target:surgical_strike_planet = {
				# surgical_strike_kill_pop = yes
				random_owned_pop = { surgical_strike_killed_pop = yes }
				while = { count = 9 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
				if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 40  } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
					if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 80  } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
						if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 120 } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
							if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 160 } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
								if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 200 } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
									if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 240 } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
										if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 280 } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
											if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 320 } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } } }
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.312.Ragnarok"
		custom_tooltip = "ragnarok_strike_tooltip"
		allow = { has_technology = tech_ragnarok_strike event_target:surgical_strike_fleet = { fleet_size > 200 any_owned_ship = { is_ship_size = titan } } }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.314 } }
	}
	option = { name = ABORT ai_chance = { factor = 0 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.313
	title = "UniqueAscensionPerksEvents.313.Name"
	desc = "UniqueAscensionPerksEvents.313.Desc"
	picture = GFX_evt_victorious_army
	show_sound = event_ground_battle
	is_triggered_only = yes
	location = event_target:surgical_strike_planet
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.314
	show_sound = event_red_alert
	title = "UniqueAscensionPerksEvents.314.Name"
	desc = "UniqueAscensionPerksEvents.314.Desc"
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = surgical_strike_room }
	location = event_target:surgical_strike_planet
	is_triggered_only = yes
	option = {
		name = "UniqueAscensionPerksEvents.314.a"
		custom_tooltip = "ragnarok_strike_tooltip"
		hidden_effect = {
			event_target:surgical_strike_fleet = { set_event_locked = yes }
			country_event = { id = UniqueAscensionPerksEvents.315 days = 30 }
		}
	}
	option = { name = ABORT ai_chance = { factor = 0 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.312 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.315
	show_sound = event_super_explosion
	title = "UniqueAscensionPerksEvents.315.Name"
	desc = "UniqueAscensionPerksEvents.315.Desc"
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = surgical_strike_room }
	location = event_target:surgical_strike_planet
	is_triggered_only = yes
	immediate = {
		event_target:surgical_strike_fleet = { set_event_locked = no }
		event_target:surgical_strike_planet = {
			every_owned_pop = { surgical_strike_killed_pop = yes }
			remove_all_buildings = yes
			destroy_colony = yes
			change_pc = pc_broken
			add_threat = { who = root amount = 2 }
		}
	}
	option = { name = EXCELLENT }
}

######################################
#									 #
############ Chosen Ruler ############
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.320
	title = "ap_chosen_ruler"
	desc = "ap_chosen_ruler_desc"
	show_sound = event_radio_chatter
	picture = GFX_evt_khan_throne_room
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.321
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 1 }
	trigger = {
		# is_ai = no
		has_ascension_perk = ap_chosen_ruler
		exists = ruler
	}
	immediate = {
		if = { limit = { ruler = { has_skill < 10 } }
			ruler = {
				random_list = {
					10 = { add_experience = 40 }
					8 = { add_experience = 100 }
					8 = { add_experience = 150 }
					6 = { add_experience = 200 }
					6 = { add_experience = 300 }
					2 = { add_experience = 400 }
					2 = { add_experience = 800 }
				}
			}
		} else_if = {
			limit = {
				ruler = { has_skill > 9 }
				NOT = { has_country_flag = ap_chosen_ruler_inactivity }
			}
			if = {
				limit = { NOT = { has_country_flag = ap_chosen_ruler_no_warning } }
				country_event = { id = UniqueAscensionPerksEvents.322 days = 1 }
				country_event = { id = UniqueAscensionPerksEvents.323 days = 2 }
				country_event = { id = UniqueAscensionPerksEvents.324 days = 3 }
				country_event = { id = UniqueAscensionPerksEvents.325 days = 4 }
				country_event = { id = UniqueAscensionPerksEvents.326 days = 5 }
			} else_if = {
				limit = {
					has_country_flag = ap_chosen_ruler_no_warning
					NOT = { has_country_flag = ap_chosen_ruler_bi_month }
				}
				set_country_flag = ap_chosen_ruler_bi_month
				country_event = { id = UniqueAscensionPerksEvents.332 days = 1 }
				country_event = { id = UniqueAscensionPerksEvents.333 days = 2 }
				country_event = { id = UniqueAscensionPerksEvents.334 days = 3 }
				country_event = { id = UniqueAscensionPerksEvents.335 days = 4 }
				country_event = { id = UniqueAscensionPerksEvents.336 days = 5 }
			} else = {
				remove_country_flag = ap_chosen_ruler_bi_month
			}
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.322
	show_sound = event_conversation
	title = "UniqueAscensionPerksEvents.322.Name"
	desc = "UniqueAscensionPerksEvents.322.Desc"
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = event_target:ruler planet_background = root graphical_culture = root city_level = root room = root }
	location = event_target:target_planet
	is_triggered_only = yes
	# mean_time_to_happen = { months = 1 }
	trigger = {
		# is_ai = no
		has_ascension_perk = ap_chosen_ruler
		exists = ruler
		ruler = { has_skill > 9 }
		NOR = {
			has_country_flag = ap_chosen_ruler_no_warning
			has_country_flag = ap_chosen_ruler_inactivity
		}
		any_owned_planet = {
			planet_crime > 10
			NOR = {
				has_modifier = chosen_ruler_crime_preventive_counterstrike
				has_planet_flag = chosen_ruler_crime_preventive_counterstrike_suggestion
			}
		}
	}
	immediate = {
		ruler = { save_event_target_as = ruler }
		random_owned_planet = {
			limit = {
				planet_crime > 10
				NOR = {
					has_modifier = chosen_ruler_crime_preventive_counterstrike
					has_planet_flag = chosen_ruler_crime_preventive_counterstrike_suggestion
				}
			}
			set_timed_planet_flag = { flag = chosen_ruler_crime_preventive_counterstrike_suggestion years = 1 }
			save_event_target_as = target_planet
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.322.a"
		allow = { resource_stockpile_compare = { resource = energy value > 200 } }
		add_resource = { energy = -200 influence = 1 }
		event_target:target_planet = { add_modifier = { modifier = chosen_ruler_crime_preventive_counterstrike years = 3 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.322.b"
		allow = { resource_stockpile_compare = { resource = energy value > 200 } }
		custom_tooltip = "UniqueAscensionPerksEvents.322.b.tooltip"
		set_country_flag = ap_chosen_ruler_no_warning
		add_resource = { energy = -200 influence = 1 }
		event_target:target_planet = { add_modifier = { modifier = chosen_ruler_crime_preventive_counterstrike years = 3 } }
	}
	option = { name = "UniqueAscensionPerksEvents.322.c" hidden_effect = { set_timed_country_flag = { flag = ap_chosen_ruler_inactivity years = 5 } } }
	option = { name = "UniqueAscensionPerksEvents.322.Abort" ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.323
	show_sound = event_conversation
	title = "UniqueAscensionPerksEvents.323.Name"
	desc = "UniqueAscensionPerksEvents.323.Desc"
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = event_target:ruler planet_background = root graphical_culture = root city_level = root room = root }
	location = event_target:target_planet
	is_triggered_only = yes
	# mean_time_to_happen = { months = 1 }
	trigger = {
		# is_ai = no
		has_ascension_perk = ap_chosen_ruler
		exists = ruler
		ruler = { has_skill > 9 }
		NOR = {
			has_country_flag = ap_chosen_ruler_no_warning
			has_country_flag = ap_chosen_ruler_inactivity
		}
		any_owned_planet = {
			planet_stability <= 45
			NOR = {
				has_modifier = chosen_ruler_stability_local_meeting
				has_planet_flag = chosen_ruler_stability_local_meeting_suggestion
			}
		}
	}
	immediate = {
		ruler = { save_event_target_as = ruler }
		random_owned_planet = {
			limit = {
				planet_stability <= 45
				NOR = {
					has_modifier = chosen_ruler_stability_local_meeting
					has_planet_flag = chosen_ruler_stability_local_meeting_suggestion
				}
			}
			set_timed_planet_flag = { flag = chosen_ruler_stability_local_meeting_suggestion years = 1 }
			save_event_target_as = target_planet
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.322.a"
		allow = { resource_stockpile_compare = { resource = unity value > 200 } }
		add_resource = { unity = -200 influence = 1 }
		event_target:target_planet = { add_modifier = { modifier = chosen_ruler_stability_local_meeting years = 3 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.322.b"
		allow = { resource_stockpile_compare = { resource = unity value > 200 } }
		custom_tooltip = "UniqueAscensionPerksEvents.322.b.tooltip"
		set_country_flag = ap_chosen_ruler_no_warning
		add_resource = { unity = -200 influence = 1 }
		event_target:target_planet = { add_modifier = { modifier = chosen_ruler_stability_local_meeting years = 3 } }
	}
	option = { name = "UniqueAscensionPerksEvents.322.c" hidden_effect = { set_timed_country_flag = { flag = ap_chosen_ruler_inactivity years = 5 } } }
	option = { name = "UniqueAscensionPerksEvents.322.Abort" ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.324
	show_sound = event_conversation
	title = "UniqueAscensionPerksEvents.324.Name"
	desc = "UniqueAscensionPerksEvents.324.Desc"
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = event_target:ruler planet_background = root graphical_culture = root city_level = root room = root }
	location = event_target:target_planet
	is_triggered_only = yes
	# mean_time_to_happen = { months = 1 }
	trigger = {
		# is_ai = no
		has_ascension_perk = ap_chosen_ruler
		exists = ruler
		ruler = { has_skill > 9 }
		NOR = {
			has_country_flag = ap_chosen_ruler_no_warning
			has_country_flag = ap_chosen_ruler_inactivity
		}
		any_owned_planet = {
			free_housing <= -3
			NOR = {
				has_modifier = chosen_ruler_temporal_housing
				has_planet_flag = chosen_ruler_temporal_housing_suggestion
			}
		}
	}
	immediate = {
		ruler = { save_event_target_as = ruler }
		random_owned_planet = {
			limit = {
				free_housing <= -3
				NOR = {
					has_modifier = chosen_ruler_temporal_housing
					has_planet_flag = chosen_ruler_temporal_housing_suggestion
				}
			}
			set_timed_planet_flag = { flag = chosen_ruler_temporal_housing_suggestion years = 1 }
			save_event_target_as = target_planet
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.322.a"
		allow = { resource_stockpile_compare = { resource = minerals value > 200 } }
		add_resource = { minerals = -200 influence = 1 }
		event_target:target_planet = { add_modifier = { modifier = chosen_ruler_temporal_housing years = 3 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.322.b"
		allow = { resource_stockpile_compare = { resource = minerals value > 200 } }
		custom_tooltip = "UniqueAscensionPerksEvents.322.b.tooltip"
		set_country_flag = ap_chosen_ruler_no_warning
		add_resource = { minerals = -200 influence = 1 }
		event_target:target_planet = { add_modifier = { modifier = chosen_ruler_temporal_housing years = 3 } }
	}
	option = { name = "UniqueAscensionPerksEvents.322.c" hidden_effect = { set_timed_country_flag = { flag = ap_chosen_ruler_inactivity years = 5 } } }
	option = { name = "UniqueAscensionPerksEvents.322.Abort" ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.325
	show_sound = event_conversation
	title = "UniqueAscensionPerksEvents.325.Name"
	desc = {
		trigger = {
			success_text = { text = "UniqueAscensionPerksEvents.325.1.Desc" is_gestalt = no }
			success_text = { text = "UniqueAscensionPerksEvents.325.2.Desc" is_gestalt = yes }
		}
	}
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = event_target:ruler planet_background = root graphical_culture = root city_level = root room = root }
	location = event_target:target_planet
	is_triggered_only = yes
	# mean_time_to_happen = { months = 1 }
	trigger = {
		# is_ai = no
		has_ascension_perk = ap_chosen_ruler
		exists = ruler
		ruler = { has_skill > 9 }
		NOR = {
			has_country_flag = ap_chosen_ruler_no_warning
			has_country_flag = ap_chosen_ruler_inactivity
		}
		any_owned_planet = {
			free_amenities <= -3
			NOR = {
				has_modifier = chosen_ruler_amenities_distribution
				has_modifier = chosen_ruler_maintenance_campaign
				has_planet_flag = chosen_ruler_amenities_distribution_suggestion
			}
		}
	}
	immediate = {
		ruler = { save_event_target_as = ruler }
		random_owned_planet = {
			limit = {
				free_amenities <= -3
				NOR = {
					has_modifier = chosen_ruler_amenities_distribution
					has_modifier = chosen_ruler_maintenance_campaign
					has_planet_flag = chosen_ruler_amenities_distribution_suggestion
				}
			}
			set_timed_planet_flag = { flag = chosen_ruler_amenities_distribution_suggestion years = 1 }
			save_event_target_as = target_planet
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.322.a"
		allow = { resource_stockpile_compare = { resource = energy value > 200 } }
		add_resource = { energy = -200 influence = 1 }
		if = { limit = { is_gestalt = no }
			event_target:target_planet = { add_modifier = { modifier = chosen_ruler_amenities_distribution years = 3 } }
		} else = { event_target:target_planet = { add_modifier = { modifier = chosen_ruler_maintenance_campaign years = 3 } } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.322.b"
		allow = { resource_stockpile_compare = { resource = energy value > 200 } }
		custom_tooltip = "UniqueAscensionPerksEvents.322.b.tooltip"
		set_country_flag = ap_chosen_ruler_no_warning
		add_resource = { energy = -200 influence = 1 }
		if = { limit = { is_gestalt = no }
			event_target:target_planet = { add_modifier = { modifier = chosen_ruler_amenities_distribution years = 3 } }
		} else = { event_target:target_planet = { add_modifier = { modifier = chosen_ruler_maintenance_campaign years = 3 } } }
	}
	option = { name = "UniqueAscensionPerksEvents.322.c" hidden_effect = { set_timed_country_flag = { flag = ap_chosen_ruler_inactivity years = 5 } } }
	option = { name = "UniqueAscensionPerksEvents.322.Abort" ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.326
	show_sound = event_conversation
	title = "UniqueAscensionPerksEvents.326.Name"
	desc = "UniqueAscensionPerksEvents.326.Desc"
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = event_target:ruler planet_background = root graphical_culture = root city_level = root room = root }
	location = event_target:target_planet
	is_triggered_only = yes
	# mean_time_to_happen = { months = 1 }
	trigger = {
		# is_ai = no
		has_ascension_perk = ap_chosen_ruler
		exists = ruler
		ruler = { has_skill > 9 }
		NOR = {
			has_country_flag = ap_chosen_ruler_no_warning
			has_country_flag = ap_chosen_ruler_inactivity
		}
		any_owned_planet = {
			count_owned_pop = { limit = { has_job = unemployed } count > 3 }
			NOR = {
				has_modifier = chosen_ruler_job_orientation_normal
				has_modifier = chosen_ruler_job_orientation_gesalt
				has_planet_flag = chosen_ruler_job_orientation_suggestion
			}
		}
	}
	immediate = {
		ruler = { save_event_target_as = ruler }
		random_owned_planet = {
			limit = {
				count_owned_pop = { limit = { has_job = unemployed } count > 3 }
				NOR = {
					has_modifier = chosen_ruler_job_orientation_normal
					has_modifier = chosen_ruler_job_orientation_gesalt
					has_planet_flag = chosen_ruler_job_orientation_suggestion
				}
			}
			set_timed_planet_flag = { flag = chosen_ruler_job_orientation_suggestion years = 1 }
			save_event_target_as = target_planet
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.322.a"
		allow = { resource_stockpile_compare = { resource = minerals value > 200 } }
		add_resource = { minerals = -200 influence = 1 }
		if = { limit = { is_gestalt = no } event_target:target_planet = { add_modifier = { modifier = chosen_ruler_job_orientation_normal years = 3 } } } else = { event_target:target_planet = { add_modifier = { modifier = chosen_ruler_job_orientation_gesalt years = 3 } } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.322.b"
		allow = { resource_stockpile_compare = { resource = minerals value > 200 } }
		custom_tooltip = "UniqueAscensionPerksEvents.322.b.tooltip"
		set_country_flag = ap_chosen_ruler_no_warning
		add_resource = { minerals = -200 influence = 1 }
		if = { limit = { is_gestalt = no } event_target:target_planet = { add_modifier = { modifier = chosen_ruler_job_orientation_normal years = 3 } } } else = { event_target:target_planet = { add_modifier = { modifier = chosen_ruler_job_orientation_gesalt years = 3 } } }
	}
	option = { name = "UniqueAscensionPerksEvents.322.c" hidden_effect = { set_timed_country_flag = { flag = ap_chosen_ruler_inactivity years = 5 } } }
	option = { name = "UniqueAscensionPerksEvents.322.Abort" ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.332
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 2 }
	trigger = {
		# is_ai = no
		has_ascension_perk = ap_chosen_ruler
		exists = ruler
		ruler = { has_skill > 9 }
		has_country_flag = ap_chosen_ruler_no_warning
		NOT = { has_country_flag = ap_chosen_ruler_inactivity }
		resource_stockpile_compare = { resource = energy value > 5000 }
		any_owned_planet = {
			planet_crime > 10
			NOR = {
				has_modifier = chosen_ruler_crime_preventive_counterstrike
				has_planet_flag = chosen_ruler_crime_preventive_counterstrike_suggestion
			}
		}
	}
	immediate = {
		ruler = { save_event_target_as = ruler }
		random_owned_planet = {
			limit = {
				planet_crime > 10
				NOR = {
					has_modifier = chosen_ruler_crime_preventive_counterstrike
					has_planet_flag = chosen_ruler_crime_preventive_counterstrike_suggestion
				}
			}
			set_timed_planet_flag = { flag = chosen_ruler_crime_preventive_counterstrike_suggestion years = 1 }
			save_event_target_as = target_planet
		}
		add_resource = { energy = -200 influence = 1 }
		event_target:target_planet = { add_modifier = { modifier = chosen_ruler_crime_preventive_counterstrike years = 3 } }
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.333
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 2 }
	trigger = {
		# is_ai = no
		has_ascension_perk = ap_chosen_ruler
		exists = ruler
		ruler = { has_skill > 9 }
		has_country_flag = ap_chosen_ruler_no_warning
		NOT = { has_country_flag = ap_chosen_ruler_inactivity }
		resource_stockpile_compare = { resource = unity value > 5000 }
		any_owned_planet = {
			planet_stability <= 45
			NOR = {
				has_modifier = chosen_ruler_stability_local_meeting
				has_planet_flag = chosen_ruler_stability_local_meeting_suggestion
			}
		}
	}
	immediate = {
		ruler = { save_event_target_as = ruler }
		random_owned_planet = {
			limit = {
				planet_stability <= 45
				NOR = {
					has_modifier = chosen_ruler_stability_local_meeting
					has_planet_flag = chosen_ruler_stability_local_meeting_suggestion
				}
			}
			set_timed_planet_flag = { flag = chosen_ruler_stability_local_meeting_suggestion years = 1 }
			save_event_target_as = target_planet
		}
		add_resource = { unity = -200 influence = 1 }
		event_target:target_planet = { add_modifier = { modifier = chosen_ruler_stability_local_meeting years = 3 } }
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.334
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 2 }
	trigger = {
		# is_ai = no
		has_ascension_perk = ap_chosen_ruler
		exists = ruler
		ruler = { has_skill > 9 }
		has_country_flag = ap_chosen_ruler_no_warning
		NOT = { has_country_flag = ap_chosen_ruler_inactivity }
		resource_stockpile_compare = { resource = minerals value > 5000 }
		any_owned_planet = {
			free_housing <= -3
			NOR = {
				has_modifier = chosen_ruler_temporal_housing
				has_planet_flag = chosen_ruler_temporal_housing_suggestion
			}
		}
	}
	immediate = {
		ruler = { save_event_target_as = ruler }
		random_owned_planet = {
			limit = {
				free_housing <= -3
				NOR = {
					has_modifier = chosen_ruler_temporal_housing
					has_planet_flag = chosen_ruler_temporal_housing_suggestion
				}
			}
			set_timed_planet_flag = { flag = chosen_ruler_temporal_housing_suggestion years = 1 }
			save_event_target_as = target_planet
		}
		add_resource = { minerals = -200 influence = 1 }
		event_target:target_planet = { add_modifier = { modifier = chosen_ruler_temporal_housing years = 3 } }
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.335
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 2 }
	trigger = {
		# is_ai = no
		has_ascension_perk = ap_chosen_ruler
		exists = ruler
		ruler = { has_skill > 9 }
		has_country_flag = ap_chosen_ruler_no_warning
		NOT = { has_country_flag = ap_chosen_ruler_inactivity }
		resource_stockpile_compare = { resource = energy value > 5000 }
		any_owned_planet = {
			free_amenities <= -3
			NOR = {
				has_modifier = chosen_ruler_amenities_distribution
				has_modifier = chosen_ruler_maintenance_campaign
				has_planet_flag = chosen_ruler_amenities_distribution_suggestion
			}
		}
	}
	immediate = {
		ruler = { save_event_target_as = ruler }
		random_owned_planet = {
			limit = {
				free_amenities <= -3
				NOR = {
					has_modifier = chosen_ruler_amenities_distribution
					has_modifier = chosen_ruler_maintenance_campaign
					has_planet_flag = chosen_ruler_amenities_distribution_suggestion
				}
			}
			set_timed_planet_flag = { flag = chosen_ruler_amenities_distribution_suggestion years = 1 }
			save_event_target_as = target_planet
		}
		add_resource = { energy = -200 influence = 1 }
		if = { limit = { is_gestalt = no }
			event_target:target_planet = { add_modifier = { modifier = chosen_ruler_amenities_distribution years = 3 } }
		} else = { event_target:target_planet = { add_modifier = { modifier = chosen_ruler_maintenance_campaign years = 3 } } }
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.336
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 2 }
	trigger = {
		# is_ai = no
		has_ascension_perk = ap_chosen_ruler
		exists = ruler
		ruler = { has_skill > 9 }
		has_country_flag = ap_chosen_ruler_no_warning
		NOT = { has_country_flag = ap_chosen_ruler_inactivity }
		resource_stockpile_compare = { resource = minerals value > 5000 }
		any_owned_planet = {
			count_owned_pop = { limit = { has_job = unemployed } count > 3 }
			NOR = {
				has_modifier = chosen_ruler_job_orientation_normal
				has_modifier = chosen_ruler_job_orientation_gesalt
				has_planet_flag = chosen_ruler_job_orientation_suggestion
			}
		}
	}
	immediate = {
		ruler = { save_event_target_as = ruler }
		random_owned_planet = {
			limit = {
				count_owned_pop = { limit = { has_job = unemployed } count > 3 }
				NOR = {
					has_modifier = chosen_ruler_job_orientation_normal
					has_modifier = chosen_ruler_job_orientation_gesalt
					has_planet_flag = chosen_ruler_job_orientation_suggestion
				}
			}
			set_timed_planet_flag = { flag = chosen_ruler_job_orientation_suggestion years = 1 }
			save_event_target_as = target_planet
		}
		add_resource = { minerals = -200 influence = 1 }
		if = { limit = { is_gestalt = no } event_target:target_planet = { add_modifier = { modifier = chosen_ruler_job_orientation_normal years = 3 } } } else = { event_target:target_planet = { add_modifier = { modifier = chosen_ruler_job_orientation_gesalt years = 3 } } }
	}
}

######################################
#									 #
########## Wheel Of Fortune ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.340
	title = "ap_wheel_fortune"
	desc = "ap_wheel_fortune_desc"
	show_sound = event_finding_loot
	picture = GFX_evt_wheel_fortune
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT
		give_tech_option_or_progress_effect = { TECH = tech_treasures }
		add_resource = { treasures = 50 }
		hidden_effect = {
			country_event = { id = UniqueAscensionPerksEvents.342 }
			country_event = { id = UniqueAscensionPerksEvents.341 days = 90 }
		}
	}
}

# on_five_year_pulse_country MTTH
country_event = {
	id = UniqueAscensionPerksEvents.341
	title = "UniqueAscensionPerksEvents.341.Name"
	desc = "UniqueAscensionPerksEvents.341.Desc"
	show_sound = event_finding_loot
	picture = GFX_evt_treasure_pile
	location = event_target:spawn_location
	is_triggered_only = yes
	# mean_time_to_happen = { years = 1 } # months = 3
	trigger = {
		has_ascension_perk = ap_wheel_fortune
		# NOT = { has_country_flag = treasures_found_cooldown }
		any_planet_within_border = {
			NOR = { merg_is_gas_giant = yes has_deposit = yes has_owner = yes is_star = yes is_asteroid = yes is_colonizeable_colony = yes }
		}
	}
	immediate = {
		random_planet_within_border = {
			limit = {
				NOR = { merg_is_gas_giant = yes has_deposit = yes has_owner = yes is_star = yes is_asteroid = yes is_colonizeable_colony = yes }
			}
			save_event_target_as = spawn_location
		}
		# set_timed_country_flag = { flag = treasures_found_cooldown years = 6 }
	}
	option = {
		name = EXCELLENT
		add_resource = { treasures = 25 }
		event_target:spawn_location = {
			random_list = {
				10 = { add_deposit = d_treasures_1 }
				7 = { add_deposit = d_treasures_2 }
				7 = { add_deposit = d_treasures_3 }
				4 = { add_deposit = d_treasures_4 }
				4 = { add_deposit = d_treasures_5 }
				1 = { add_deposit = d_treasures_6 }
			}
		}
	}
}

# Edict treasures_menu
country_event = {
	id = UniqueAscensionPerksEvents.342
	title = "edict_treasures_menu"
	desc = "UniqueAscensionPerksEvents.342.Desc"
	show_sound = event_finding_loot
	picture = GFX_evt_wheel_fortune
	location = capital_scope
	is_triggered_only = yes
	option = {
		name = "UniqueAscensionPerksEvents.343.Name"
		allow = {
			custom_tooltip = {
				fail_text = UniqueAscensionPerksEvents.342.Req01
				# has_treasures_deal_gestalt = no
				NAND = {
					is_gestalt = yes
					OR = {
						has_modifier = treasures_trade_100_gesalt
						has_modifier = treasures_trade_250_gesalt
						has_modifier = treasures_trade_500_gesalt
						has_modifier = treasures_trade_1000_gesalt
						has_modifier = treasures_trade_2000_gesalt
					}
				}
			}
		}
		hidden_effect = {
			if = { limit = { is_gestalt = no } country_event = { id = UniqueAscensionPerksEvents.343 } }
			else = { country_event = { id = UniqueAscensionPerksEvents.346 } }
		}
	}
	option = {
		name = UniqueAscensionPerksEvents.348.Name
		allow = { custom_tooltip = { fail_text = UniqueAscensionPerksEvents.342.Req02 NOT = { has_country_flag = pirates_treasures_cooldown } } }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.348 } }
	}
	option = {
		name = UniqueAscensionPerksEvents.352.Name
		allow = { custom_tooltip = { fail_text = UniqueAscensionPerksEvents.342.Req03 NOT = { has_country_flag = artefacts_treasures_cooldown } } has_ancrel = yes }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.352 } }
	}
	option = {
		name = UniqueAscensionPerksEvents.357.Name
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.357 } }
	}
	option = {
		name = UniqueAscensionPerksEvents.359.Name
		allow = {
			resource_stockpile_compare = { resource = treasures value > 500 }
			NOR = { has_modifier = treasures_distribution has_modifier = treasures_distribution_gesalt }
		}
		add_resource = { treasures = -500 }
		if = { limit = { is_gestalt = no } add_modifier = { modifier = treasures_distribution years = 20 } }
		else_if = { limit = { is_gestalt = yes } add_modifier = { modifier = treasures_distribution_gesalt years = 20 } }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.342 } }
	}
	option = { name = EXIT default_hide_option = yes }
}

country_event = {
	id = UniqueAscensionPerksEvents.343
	title = "UniqueAscensionPerksEvents.343.Name"
	desc = "UniqueAscensionPerksEvents.343.Desc"
	show_sound = event_finding_loot
	picture = GFX_evt_wheel_fortune
	is_triggered_only = yes
	immediate = {
		random_owned_planet = { limit = { has_treasures_deal = no }
			save_event_target_as = planet_1
			root = { random_owned_planet = { limit = { has_treasures_deal = no NOT = { is_same_value = event_target:planet_1 } }
				save_event_target_as = planet_2
				root = { random_owned_planet = { limit = { has_treasures_deal = no NOR = { is_same_value = event_target:planet_1 is_same_value = event_target:planet_2 } }
					save_event_target_as = planet_3
					root = { random_owned_planet = { limit = { has_treasures_deal = no NOR = { is_same_value = event_target:planet_1 is_same_value = event_target:planet_2 is_same_value = event_target:planet_3 } }
						save_event_target_as = planet_4
						root = { random_owned_planet = { limit = { has_treasures_deal = no NOR = { is_same_value = event_target:planet_1 is_same_value = event_target:planet_2 is_same_value = event_target:planet_3 is_same_value = event_target:planet_4 } }
							save_event_target_as = planet_5
							root = { random_owned_planet = { limit = { has_treasures_deal = no NOR = { is_same_value = event_target:planet_1 is_same_value = event_target:planet_2 is_same_value = event_target:planet_3 is_same_value = event_target:planet_4 is_same_value = event_target:planet_5 } } save_event_target_as = planet_6 } }
						} }
					} }
				} }
			} }
		}
	}
	option = { name = UniqueAscensionPerksEvents.96.Planet.1 trigger = { exists = event_target:planet_1 } hidden_effect = { event_target:planet_1 = { save_event_target_as = PlanetTarget } country_event = { id = UniqueAscensionPerksEvents.344 } } }
	option = { name = UniqueAscensionPerksEvents.96.Planet.2 trigger = { exists = event_target:planet_2 } hidden_effect = { event_target:planet_2 = { save_event_target_as = PlanetTarget } country_event = { id = UniqueAscensionPerksEvents.344 } } }
	option = { name = UniqueAscensionPerksEvents.96.Planet.3 trigger = { exists = event_target:planet_3 } hidden_effect = { event_target:planet_3 = { save_event_target_as = PlanetTarget } country_event = { id = UniqueAscensionPerksEvents.344 } } }
	option = { name = UniqueAscensionPerksEvents.96.Planet.4 trigger = { exists = event_target:planet_4 } hidden_effect = { event_target:planet_4 = { save_event_target_as = PlanetTarget } country_event = { id = UniqueAscensionPerksEvents.344 } } }
	option = { name = UniqueAscensionPerksEvents.96.Planet.5 trigger = { exists = event_target:planet_5 } hidden_effect = { event_target:planet_5 = { save_event_target_as = PlanetTarget } country_event = { id = UniqueAscensionPerksEvents.344 } } }
	option = { name = UniqueAscensionPerksEvents.96.Planet.6 trigger = { exists = event_target:planet_6 } hidden_effect = { event_target:planet_6 = { save_event_target_as = PlanetTarget } country_event = { id = UniqueAscensionPerksEvents.344 } } }
	option = { name = "UniqueAscensionPerks.select_planet" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.343 } } }
	option = { name = BACK hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.342 } } ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.344
	title = "UniqueAscensionPerksEvents.343.Name"
	desc = "UniqueAscensionPerksEvents.344.Desc"
	show_sound = event_finding_loot
	picture = GFX_evt_wheel_fortune
	location = event_target:PlanetTarget
	is_triggered_only = yes
	option = { name = UniqueAscensionPerksEvents.344.100	allow = { resource_stockpile_compare = { resource = treasures value > 100 } } add_resource = { treasures = -100 } event_target:PlanetTarget = { add_modifier = { modifier = treasures_trade_100 months = 6 } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.345 } } }
	option = { name = UniqueAscensionPerksEvents.344.250	allow = { resource_stockpile_compare = { resource = treasures value > 250 } } add_resource = { treasures = -250 } event_target:PlanetTarget = { add_modifier = { modifier = treasures_trade_250 months = 6 } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.345 } } }
	option = { name = UniqueAscensionPerksEvents.344.500	allow = { resource_stockpile_compare = { resource = treasures value > 500 } } add_resource = { treasures = -500 } event_target:PlanetTarget = { add_modifier = { modifier = treasures_trade_500 months = 6 } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.345 } } }
	option = { name = UniqueAscensionPerksEvents.344.1000	allow = { resource_stockpile_compare = { resource = treasures value > 1000 } } add_resource = { treasures = -1000 } event_target:PlanetTarget = { add_modifier = { modifier = treasures_trade_1000 months = 6 } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.345 } } }
	option = { name = UniqueAscensionPerksEvents.344.2000	allow = { resource_stockpile_compare = { resource = treasures value > 2000 } } add_resource = { treasures = -2000 } event_target:PlanetTarget = { add_modifier = { modifier = treasures_trade_2000 months = 6 } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.345 } } }
	option = { name = ABORT ai_chance = { factor = 0 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.345
	title = "UniqueAscensionPerksEvents.347.Name"
	desc = "UniqueAscensionPerksEvents.345.Desc"
	show_sound = event_finding_loot
	picture = GFX_evt_wheel_fortune
	location = event_target:PlanetTarget
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.346
	title = "UniqueAscensionPerksEvents.343.Name"
	desc = "UniqueAscensionPerksEvents.346.Desc"
	show_sound = event_finding_loot
	picture = GFX_evt_wheel_fortune
	location = capital_scope
	is_triggered_only = yes
	option = { name = UniqueAscensionPerksEvents.344.100	allow = { resource_stockpile_compare = { resource = treasures value > 100 } }	add_resource = { treasures = -100 }	add_modifier = { modifier = treasures_trade_100_gesalt months = 7 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.354 days = 420 } country_event = { id = UniqueAscensionPerksEvents.347 } } }
	option = { name = UniqueAscensionPerksEvents.344.250	allow = { resource_stockpile_compare = { resource = treasures value > 250 } }	add_resource = { treasures = -250 }	add_modifier = { modifier = treasures_trade_250_gesalt months = 7 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.354 days = 420 } country_event = { id = UniqueAscensionPerksEvents.347 } } }
	option = { name = UniqueAscensionPerksEvents.344.500	allow = { resource_stockpile_compare = { resource = treasures value > 500 } }	add_resource = { treasures = -500 }	add_modifier = { modifier = treasures_trade_500_gesalt months = 7 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.354 days = 420 } country_event = { id = UniqueAscensionPerksEvents.347 } } }
	option = { name = UniqueAscensionPerksEvents.344.1000	allow = { resource_stockpile_compare = { resource = treasures value > 1000 } }	add_resource = { treasures = -1000 }	add_modifier = { modifier = treasures_trade_1000_gesalt months = 7 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.354 days = 420 } country_event = { id = UniqueAscensionPerksEvents.347 } } }
	option = { name = UniqueAscensionPerksEvents.344.2000	allow = { resource_stockpile_compare = { resource = treasures value > 2000 } }	add_resource = { treasures = -2000 }	add_modifier = { modifier = treasures_trade_2000_gesalt months = 7 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.354 days = 420 } country_event = { id = UniqueAscensionPerksEvents.347 } } }
	option = { name = ABORT ai_chance = { factor = 0 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.347
	title = "UniqueAscensionPerksEvents.347.Name"
	desc = "UniqueAscensionPerksEvents.347.Desc"
	show_sound = event_finding_loot
	picture = GFX_evt_wheel_fortune
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.348
	title = "UniqueAscensionPerksEvents.348.Name"
	desc = "UniqueAscensionPerksEvents.348.Desc"
	show_sound = event_default
	picture = GFX_evt_pirates_attacking_cargo
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.348.a" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.349 } } }
	option = { name = BACK hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.342 } } ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.349
	title = "UniqueAscensionPerksEvents.349.Name"
	desc = "UniqueAscensionPerksEvents.349.Desc"
	show_sound = event_default
	picture = GFX_evt_pirates_attacking_cargo
	location = event_target:special_project_target
	is_triggered_only = yes
	immediate = {
		# treasures_pirate_mission_generation = yes
		random_system_within_border = {
			save_event_target_as = special_project_target_system
			random_system_planet = { save_event_target_as = special_project_target }
			# create_treasures_pirate_country = yes
			if = {
				limit = { any_country = { is_pirate = yes has_country_flag = treasures_pirate_country } }
				random_country = {
					limit = { is_pirate = yes has_country_flag = treasures_pirate_country }
					save_event_target_as = treasures_pirate_country
				}
			} else = {
				create_country = {
					name = "NAME_Pirates"
					type = pirate
					name_list = "PRT1"
					effect = {
						every_country = { establish_communications_no_message = last_created_country }
						randomize_flag_symbol = "pirate"
						save_event_target_as = treasures_pirate_country
						set_country_flag = treasures_pirate_country
					}
				}
			}
			create_fleet = {
				name = "NAME_Pirate_Fleet"
				settings = { spawn_debris = no }
				effect = {
					set_owner = event_target:treasures_pirate_country
					create_pirate_ships_3 = yes
					create_pirate_ships_4 = yes
					create_pirate_ships_5 = yes
					create_pirate_ships_6 = yes
					create_pirate_ships_7 = yes
					create_pirate_ships_8 = yes
					create_ship = {
						name = random
						design = "NAME_Corsair"
						effect = {
							set_ship_flag = target_ship_project
							set_disable_at_health = 0.05
							save_event_target_as = target_ship_project_ship
						}
					}
					set_location = { target = event_target:special_project_target distance = 50 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 150
				}
			}
		}
		enable_special_project = { name = "TREASURES_PIRATES" location = event_target:target_ship_project_ship owner = root }
		set_timed_country_flag = { flag = pirates_treasures_cooldown years = 4 }
		country_event = { id = UniqueAscensionPerksEvents.355 days = 1440 }
	}
	option = { name = OK }
}

# Special Project TREASURES_PIRATES
ship_event = {
	id = UniqueAscensionPerksEvents.350
	title = "UniqueAscensionPerksEvents.350.Name"
	desc = "UniqueAscensionPerksEvents.350.Desc"
	picture = GFX_evt_interior_battle
	show_sound = event_ground_battle
	location = fleet
	is_triggered_only = yes
	immediate =	{
		# treasures_project_finish_select_ship = yes
		if = { limit = { NOT = { exists = event_target:target_ship_project_ship } }
			if = { limit = { exists = solar_system }
				solar_system = {
					random_ship_in_system = {
						limit = { has_ship_flag = target_ship_project is_disabled = yes }
						save_event_target_as = target_ship_project_ship
					}
				}
			}
			# Strong Fallback
			if = { limit = { NOT = { exists = event_target:target_ship_project_ship } }
				random_country = {
					limit = {
						is_pirate = yes
						has_country_flag = treasures_pirate_country
						any_owned_ship = {
							has_ship_flag = target_ship_project
							is_disabled = yes
							distance = { source = root max_distance <= 100 }
						}
					}
					random_owned_ship = {
						limit = {
							has_ship_flag = target_ship_project
							is_disabled = yes
						}
						save_event_target_as = target_ship_project_ship
					}
				}
			}
		}
	}
	option = {
		name = EXCELLENT
		owner = { add_monthly_resource_mult = { resource = treasures value = 4 min = 250 max = 1000 } }
		hidden_effect = {
			if = { limit = { exists = event_target:target_ship_project_ship }
				destroy_fleet = event_target:target_ship_project_ship.fleet
				owner = { remove_country_flag = treasures_pirate_country }
			}
		}
	}
}

# # TEMP ACTIVE FIX (on_single_player_save_game_load) remove in 3.4
# event = {
# 	id = UniqueAscensionPerksEvents.3599
# 	hide_window = yes
# 	is_triggered_only = yes
# 	trigger = {
# 		any_playable_country = {
# 			has_ascension_perk = ap_wheel_fortune
# 			has_country_flag = pirates_treasures_cooldown
# 			any_owned_ship = { has_ship_flag = treasures_ship_finished_project }
# 		}
# 		any_country = {
# 			is_pirate = yes
# 			has_country_flag = treasures_pirate_country
# 			any_owned_ship = {
# 				has_ship_flag = target_ship_project
# 				is_disabled = yes
# 			}
# 		}
# 	}
# 	immediate = {
# 		if = { limit = { NOT = { exists = event_target:target_ship_project_ship } }
# 			random_country = {
# 				limit = {
# 					is_pirate = yes
# 					has_country_flag = treasures_pirate_country
# 					any_owned_ship = {
# 						has_ship_flag = target_ship_project
# 						is_disabled = yes
# 					}
# 				}
# 				random_owned_ship = {
# 					limit = {
# 						has_ship_flag = target_ship_project
# 						is_disabled = yes
# 					}
# 					save_event_target_as = target_ship_project_ship
# 				}
# 			}
# 		}
# 		random_playable_country = {
# 			limit = {
# 				has_ascension_perk = ap_wheel_fortune
# 				has_country_flag = pirates_treasures_cooldown
# 				any_owned_ship = { has_ship_flag = treasures_ship_finished_project }
# 			}
# 			enable_special_project = { name = "TREASURES_PIRATES" location = event_target:target_ship_project_ship owner = this }
# 			set_timed_country_flag = { flag = pirates_treasures_cooldown years = 3 }
# 			random_owned_ship = {
# 				limit = { has_ship_flag = treasures_ship_finished_project }
# 				remove_ship_flag = treasures_ship_finished_project
# 			}
# 		}
# 	}
# }

# # TEMP ACTIVE FIX OLD SAVES (on_single_player_save_game_load) remove in > 3.4.3
event = {
	id = UniqueAscensionPerksEvents.3600
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		# any_system = {
		# 	OR = { is_star_class = sc_white_hole is_star_class = sc_whitte_hole }
		# }
		any_playable_country = {
			has_ascension_perk = ap_space_domestication has_country_flag = space_domestication_tyanki
		}

	}
	immediate = {
		# every_system = {
		# 	limit = { OR = { is_star_class = sc_white_hole is_star_class = sc_whitte_hole } }
		# 	# set_star_class = sc_white_hole
		# 	every_system_planet = {
		# 		limit = { OR = { is_planet_class = pc_white_hole is_planet_class = pc_whitte_hole } }
		# 		change_pc = pc_whc_star
		# 	}
		# }
		every_playable_country = {
			limit = {
				has_ascension_perk = ap_space_domestication has_country_flag = space_domestication_tyanki
			}
			set_country_flag = space_domestication_tiyanki
			remove_country_flag = space_domestication_tyanki
		}
	}
}

# on_yearly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.351
	title = "UniqueAscensionPerksEvents.351.Name"
	desc = "UniqueAscensionPerksEvents.351.Desc"
	show_sound = event_finding_loot
	picture = GFX_evt_analyzing_artifacts
	location = event_target:spawn_location
	is_triggered_only = yes
	# mean_time_to_happen = { years = 1 }
	trigger = {
		has_ascension_perk = ap_wheel_fortune
		NOT = { has_country_flag = treasures_on_colony_found_cooldown }
		any_owned_planet = { NOT = { has_deposit = d_treasures_planet } }
	}
	immediate = {
		random_owned_planet = {
			limit = { NOT = { has_deposit = d_treasures_planet } }
			save_event_target_as = spawn_location
		}
		set_timed_country_flag = { flag = treasures_on_colony_found_cooldown years = 8 }
	}
	option = { name = EXCELLENT add_resource = { treasures = 50 } event_target:spawn_location = { add_deposit = d_treasures_planet } }
}

country_event = {
	id = UniqueAscensionPerksEvents.352
	title = "UniqueAscensionPerksEvents.352.Name"
	desc = "UniqueAscensionPerksEvents.352.Desc"
	show_sound = event_finding_loot
	picture = GFX_evt_analyzing_artifacts
	is_triggered_only = yes
	option = { name = UniqueAscensionPerksEvents.352.100	allow = { resource_stockpile_compare = { resource = treasures value > 100 } } add_resource = { treasures = -100 minor_artifacts = 5 } hidden_effect = { set_timed_country_flag = { flag = artefacts_treasures_cooldown months = 10 } country_event = { id = UniqueAscensionPerksEvents.356 days = 300 } country_event = { id = UniqueAscensionPerksEvents.353 } } }
	option = { name = UniqueAscensionPerksEvents.352.200	allow = { resource_stockpile_compare = { resource = treasures value > 200 } } add_resource = { treasures = -200 minor_artifacts = 10 } hidden_effect = { set_timed_country_flag = { flag = artefacts_treasures_cooldown months = 20 } country_event = { id = UniqueAscensionPerksEvents.356 days = 600 } country_event = { id = UniqueAscensionPerksEvents.353 } } }
	option = { name = UniqueAscensionPerksEvents.352.400	allow = { resource_stockpile_compare = { resource = treasures value > 400 } } add_resource = { treasures = -400 minor_artifacts = 20 } hidden_effect = { set_timed_country_flag = { flag = artefacts_treasures_cooldown months = 40 } country_event = { id = UniqueAscensionPerksEvents.356 days = 1200 } country_event = { id = UniqueAscensionPerksEvents.353 } } }
	option = { name = UniqueAscensionPerksEvents.352.800	allow = { resource_stockpile_compare = { resource = treasures value > 800 } } add_resource = { treasures = -800 minor_artifacts = 40 } hidden_effect = { set_timed_country_flag = { flag = artefacts_treasures_cooldown months = 80 } country_event = { id = UniqueAscensionPerksEvents.356 days = 2400 } country_event = { id = UniqueAscensionPerksEvents.353 } } }
	option = { name = BACK hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.342 } } ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.353
	title = "UniqueAscensionPerksEvents.353.Name"
	desc = "UniqueAscensionPerksEvents.353.Desc"
	show_sound = event_finding_loot
	picture = GFX_evt_analyzing_artifacts
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.354
	title = "UniqueAscensionPerksEvents.354.Name"
	desc = "UniqueAscensionPerksEvents.356.Desc"
	show_sound = event_finding_loot
	picture = GFX_evt_wheel_fortune
	location = capital_scope
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerks.lets_see" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.342 } } }
	option = { name = OK ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.355
	title = "UniqueAscensionPerksEvents.355.Name"
	desc = "UniqueAscensionPerksEvents.356.Desc"
	show_sound = event_finding_loot
	picture = GFX_evt_wheel_fortune
	location = capital_scope
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerks.lets_see" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.342 } } }
	option = { name = OK ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.356
	title = "UniqueAscensionPerksEvents.356.Name"
	desc = "UniqueAscensionPerksEvents.356.Desc"
	show_sound = event_finding_loot
	picture = GFX_evt_wheel_fortune
	location = capital_scope
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerks.lets_see" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.342 } } }
	option = { name = OK ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.357
	title = "UniqueAscensionPerksEvents.357.Name"
	desc = "UniqueAscensionPerksEvents.357.Desc"
	show_sound = event_finding_loot
	picture = GFX_evt_wheel_fortune
	is_triggered_only = yes
	immediate = {
		random_country = { limit = { can_recieve_treasures_donation = yes NOT = { is_same_empire = root } }
			save_event_target_as = country_1
			random_country = { limit = { can_recieve_treasures_donation = yes NOR = { is_same_empire = root is_same_empire = event_target:country_1 } }
				save_event_target_as = country_2
				random_country = { limit = { can_recieve_treasures_donation = yes NOR = { is_same_empire = root is_same_empire = event_target:country_1 is_same_empire = event_target:country_2 } }
					save_event_target_as = country_3
					random_country = { limit = { can_recieve_treasures_donation = yes NOR = { is_same_empire = root is_same_empire = event_target:country_1 is_same_empire = event_target:country_2 is_same_empire = event_target:country_3 } }
						save_event_target_as = country_4
						random_country = { limit = { can_recieve_treasures_donation = yes NOR = { is_same_empire = root is_same_empire = event_target:country_1 is_same_empire = event_target:country_2 is_same_empire = event_target:country_3 is_same_empire = event_target:country_4 } }
							save_event_target_as = country_5
							random_country = { limit = { can_recieve_treasures_donation = yes NOR = { is_same_empire = root is_same_empire = event_target:country_1 is_same_empire = event_target:country_2 is_same_empire = event_target:country_3 is_same_empire = event_target:country_4 is_same_empire = event_target:country_5 } } save_event_target_as = country_6 }
						}
					}
				}
			}
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.1"
		trigger = { exists = event_target:country_1 }
		allow = { resource_stockpile_compare = { resource = treasures value > 500 } }
		add_resource = { treasures = -500 }
		hidden_effect = { event_target:country_1 = { save_event_target_as = CountryTargetForPresent } country_event = { id = UniqueAscensionPerksEvents.358 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.2"
		trigger = { exists = event_target:country_2 }
		allow = { resource_stockpile_compare = { resource = treasures value > 500 } }
		add_resource = { treasures = -500 }
		hidden_effect = { event_target:country_2 = { save_event_target_as = CountryTargetForPresent } country_event = { id = UniqueAscensionPerksEvents.358 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.3"
		trigger = { exists = event_target:country_3 }
		allow = { resource_stockpile_compare = { resource = treasures value > 500 } }
		add_resource = { treasures = -500 }
		hidden_effect = { event_target:country_3 = { save_event_target_as = CountryTargetForPresent } country_event = { id = UniqueAscensionPerksEvents.358 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.4"
		trigger = { exists = event_target:country_4 }
		allow = { resource_stockpile_compare = { resource = treasures value > 500 } }
		add_resource = { treasures = -500 }
		hidden_effect = { event_target:country_4 = { save_event_target_as = CountryTargetForPresent } country_event = { id = UniqueAscensionPerksEvents.358 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.5"
		trigger = { exists = event_target:country_5 }
		allow = { resource_stockpile_compare = { resource = treasures value > 500 } }
		add_resource = { treasures = -500 }
		hidden_effect = { event_target:country_5 = { save_event_target_as = CountryTargetForPresent } country_event = { id = UniqueAscensionPerksEvents.358 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.6"
		trigger = { exists = event_target:country_6 }
		allow = { resource_stockpile_compare = { resource = treasures value > 500 } }
		add_resource = { treasures = -500 }
		hidden_effect = { event_target:country_6 = { save_event_target_as = CountryTargetForPresent } country_event = { id = UniqueAscensionPerksEvents.358 } }
	}
	option = { name = "UniqueAscensionPerks.select_country" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.357 } } }
	option = { name = BACK hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.342 } } ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.358
	title = "UniqueAscensionPerksEvents.395.Name"
	desc = "UniqueAscensionPerksEvents.358.Desc"
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:CountryTargetForPresent
		planet_background = event_target:CountryTargetForPresent
		graphical_culture = event_target:CountryTargetForPresent
		city_level = event_target:CountryTargetForPresent
		room = event_target:CountryTargetForPresent.ruler
	}
	option = {
		name = "UniqueAscensionPerksEvents.358.a"
		# treasures_opinion_set = yes
		event_target:CountryTargetForPresent = {
			if = { limit = { OR = { is_hostile_to = root is_rival = root } }
				add_opinion_modifier = { modifier = opinion_treasures_present_hostile who = root } }
			else_if = { limit = { OR = { is_domineering_to = root is_unfriendly_to = root is_dismissive_to = root } }
				add_opinion_modifier = { modifier = opinion_treasures_present_unfriendly who = root } }
			else_if = { limit = { OR = { is_neutral_to = root } }
				add_opinion_modifier = { modifier = opinion_treasures_present_normal who = root } }
			else_if = { limit = { OR = { is_patronizing_to = root is_friendly_to = root is_cordial_to = root } }
				add_opinion_modifier = { modifier = opinion_treasures_present_normal who = root } }
			else = {
				add_opinion_modifier = { modifier = opinion_treasures_present_normal who = root }
			}
		}
	}
}

######################################
#									 #
############ Slow Learner ############
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.400
	title = "ap_slow_learner"
	desc = "ap_slow_learner_desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = slow_learner_room }
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = {
		name = EXCELLENT
		enable_special_project = { name = SLOW_LEARNER_ARMY location = event_target:capital_planet owner = root }
	}
}
# v3.3 values reduced
country_event = {
	id = UniqueAscensionPerksEvents.401
	title = "UniqueAscensionPerksEvents.401.Name"
	desc = "UniqueAscensionPerksEvents.401.Desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = slow_learner_room }
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.401.Alpha"	trigger = { NOT = { has_modifier = slow_learner_bonus_1 } } add_modifier = { modifier = slow_learner_bonus_1 } add_resource = { unity = 3500 } }
	option = { name = "UniqueAscensionPerksEvents.401.Beta" 	trigger = { NOT = { has_modifier = slow_learner_bonus_2 } } add_modifier = { modifier = slow_learner_bonus_2 } add_resource = { unity = 3500 } }
	option = { name = "UniqueAscensionPerksEvents.401.Gamma"	trigger = { NOT = { has_modifier = slow_learner_bonus_3 } } add_modifier = { modifier = slow_learner_bonus_3 } add_resource = { unity = 3500 } }
	option = { name = "UniqueAscensionPerksEvents.401.Delta"	trigger = { NOT = { has_modifier = slow_learner_bonus_4 } } add_modifier = { modifier = slow_learner_bonus_4 } add_resource = { unity = 3500 } }
}
# v3.3 value reduced
country_event = {
	id = UniqueAscensionPerksEvents.402
	title = "SLOW_LEARNER_ARMY"
	desc = "UniqueAscensionPerksEvents.402.Desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_slow_learner
	is_triggered_only = yes
	immediate = { set_country_flag = slow_learner_army }
	option = { name = EXCELLENT add_resource = { unity = 12000 } }
}

######################################
#									 #
######## Utopian Realisation #########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.410
	title = "ap_utopian_realisation"
	desc = "ap_utopian_realisation_desc"
	show_sound = event_laboratory_sound
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = utopian_realisation_room }
	is_triggered_only = yes
	location = event_target:capital_planet
	immediate = { get_capital_planet = yes }
	option = {
		name = EXCELLENT
		enable_special_project = { name = UTOPIAN_REALISATION location = event_target:capital_planet owner = root }
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.411
	title = "UniqueAscensionPerksEvents.411.Name"
	desc = "UniqueAscensionPerksEvents.411.Desc"
	show_sound = event_laboratory_sound
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = utopian_realisation_room }
	is_triggered_only = yes
	location = event_target:capital_planet
	immediate = { get_capital_planet = yes }
	option = {
		name = "UniqueAscensionPerksEvents.411.a"
		ai_chance = { factor = 0.1 }
		random_owned_planet = {
			limit = { is_capital = yes }
			change_pc = pc_gaia
			add_modifier = { modifier = "gaia_world" }
			change_planet_size = 10
			custom_tooltip = "UniqueAscensionPerksEvents.411.a.tooltip"
			hidden_effect = { while = { count = 12 create_species = { name = random class = random_non_machine portrait = random traits = random } create_pop = { species = last_created_species } } }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.411.b"
		random_owned_planet = {
			limit = { is_capital = yes }
			change_planet_size = 10
			custom_tooltip = "UniqueAscensionPerksEvents.411.a.tooltip"
			hidden_effect = { while = { count = 12 create_species = { name = random class = random_non_machine portrait = random traits = random } create_pop = { species = last_created_species } } }
		}
	}
}

######################################
#									 #
########## Executive Vigor ###########
#									 #
######################################

event = {
	id = UniqueAscensionPerksEvents.420
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		random_playable_country = {
			limit = { has_ascension_perk = ap_executive_vigor NOT = { has_country_flag = ap_executive_vigor_project_available } }
			country_event = { id = UniqueAscensionPerksEvents.421 }
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.421
	title = "ap_executive_vigor"
	desc = "ap_executive_vigor_desc"
	show_sound = event_factions
	picture = GFX_evt_galactic_senate
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes set_country_flag = ap_executive_vigor_project_available }
	option = { name = EXCELLENT enable_special_project = { name = EXECUTIVE_VIGOR location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.422
	title = "EXECUTIVE_VIGOR"
	desc = "EXECUTIVE_VIGOR_DESC"
	show_sound = event_mystic_reveal
	picture = GFX_evt_galactic_senate
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.422.First"	allow = { NOT = { has_modifier = executive_vigor_bonus_1 } } add_modifier = { modifier = executive_vigor_bonus_1 } }
	option = { name = "UniqueAscensionPerksEvents.422.Second"	allow = { NOT = { has_modifier = executive_vigor_bonus_2 } } add_modifier = { modifier = executive_vigor_bonus_2 } }
	option = { name = "UniqueAscensionPerksEvents.422.Third"	allow = { NOT = { has_modifier = executive_vigor_bonus_3 } } add_modifier = { modifier = executive_vigor_bonus_3 } }
}

######################################
#									 #
######### Light of Eternity ##########
#									 #
###################################### Credits to Thanatos996 the original creator of that feature in Stellaris 2.1

country_event = {
	id = UniqueAscensionPerksEvents.430
	title = "ap_antimatter"
	desc = "ap_antimatter_desc"
	show_sound = event_activating_unknown_technology
	picture = GFX_evt_antimatter
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = {
		set_spawn_system_batch = begin
		get_capital_planet = yes
		event_target:capital_planet = {
			spawn_system = { min_distance >= 4 max_distance <= 9 initializer = "white_hole_system_1" }
		}
		set_spawn_system_batch = end
		last_created_system = { # gives also techs
			system_event = { id = UniqueAscensionPerksEvents.439 days = 120 random = 60 }
		}
		# v3.4 values doubled
		set_variable = { which = white_hole_systems value = 1 }
		event_target:global_event_country = { change_variable = { which = white_hole_systems value = 1 } }
		country_event = { id = UniqueAscensionPerksEvents.432 days = 720 random = 360 }
	}
	option = { name = EXCELLENT }
}

ship_event = {
	id = UniqueAscensionPerksEvents.431
	title = "UniqueAscensionPerksEvents.431.Name"
	desc = {
		trigger = {
			success_text = { text = "UniqueAscensionPerksEvents.431.anti_matter" hidden:owner = { resource_stockpile_compare = { resource = anti_matter value > 0 } } }
			success_text = { text = "UniqueAscensionPerksEvents.431.has_tech" OR = { AND = { hidden:owner = { resource_stockpile_compare = { resource = anti_matter value > 0 } } hidden:owner = { has_technology = tech_mine_anti_matter } } } }
			success_text = { text = "UniqueAscensionPerksEvents.431.no_tech" NOR = { AND = { hidden:owner = { resource_stockpile_compare = { resource = anti_matter value > 0 } } hidden:owner = { has_technology = tech_mine_anti_matter } } } }
		}
	}
	picture = GFX_evt_surreal_visions
	show_sound = event_default
	location = from
	is_triggered_only = yes
	trigger = {
		from = { has_strategic_resource = yes }
		owner = {
			root.owner = { resource_stockpile_compare = { resource = anti_matter value > 0 } }
			NOT = { has_country_flag = anti_matter_found }
		}
	}
	immediate = { from = { if = { limit = { resource_stockpile_compare = { resource = anti_matter value > 0 } } root.owner = { set_country_flag = anti_matter_found } } } }
	option = { name = OK from = { if = { limit = { resource_stockpile_compare = { resource = anti_matter value > 0 } } custom_tooltip = UniqueAscensionPerksEvents.431.anti_matter.tooltip } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.432
	hide_window = yes
	is_triggered_only = yes
	trigger = { # v3.3 added limit
		check_variable = { which = white_hole_systems value < 9 }
		event_target:global_event_country = { check_variable = { which = white_hole_systems value < 36 } }
	}
	immediate = {
		# spawn_white_hole_system = yes
		random_system_within_border = {
			save_event_target_as = origin_system
			set_spawn_system_batch = begin
			random_list = {
				100 = {	spawn_system = { min_distance >= 4 max_distance <= 9  initializer = "white_hole_system_1" hyperlane = no } }
				100 = {	spawn_system = { min_distance >= 5 max_distance <= 12 initializer = "white_hole_system_2" hyperlane = no } }
				100 = {	spawn_system = { min_distance >= 6 max_distance <= 15 initializer = "white_hole_system_3" hyperlane = no } }
				40 = {	spawn_system = { min_distance >= 7 max_distance <= 18 initializer = "white_hole_system_4" hyperlane = no } }
				40 = {	spawn_system = { min_distance >= 8 max_distance <= 21 initializer = "white_hole_system_5" hyperlane = no } }
				5 = {	spawn_system = { min_distance >= 9 max_distance <= 24 initializer = "white_hole_system_10" hyperlane = no } }
			}
			last_created_system = {
				# save_event_target_as = white_hole_system
				if = { limit = { NOT = { root = { has_country_flag = notify_white_hole_detection_no_warning } } }
					system_event = { id = UniqueAscensionPerksEvents.433 days = 3 }
				}
				add_hyperlane = { from = this to = prev }
				system_event = { id = UniqueAscensionPerksEvents.439 days = 120 random = 60 }
			}
			set_spawn_system_batch = end
		}
		change_variable = { which = white_hole_systems value = 1 }
		event_target:global_event_country = { change_variable = { which = white_hole_systems value = 1 } }

		if = {
			limit = {
				check_variable = { which = white_hole_systems value < 4 }
				event_target:global_event_country = { check_variable = { which = white_hole_systems value < 22 } }
			}
			country_event = { id = UniqueAscensionPerksEvents.432 days = 800 random = 400 }
		} else_if = {
			limit = { check_variable = { which = white_hole_systems value = 4 } }
			random = { chance = 34 country_event = { id = UniqueAscensionPerksEvents.432 days = 1080 random = 360 } }
		}
	}
}

system_event = {
	id = UniqueAscensionPerksEvents.433
	title = "UniqueAscensionPerksEvents.433.Name"
	desc = "UniqueAscensionPerksEvents.433.Desc"
	show_sound = event_activating_unknown_technology
	picture = GFX_evt_antimatter
	location = root # event_target:white_hole_system
	is_triggered_only = yes
	trigger = {
		from = { NOT = { has_country_flag = notify_white_hole_detection_no_warning } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.433.a"
		from = { set_country_flag = notify_white_hole_detection_no_warning }
	}
	option = { name = EXCELLENT }
}

# Edict A-M Main Menu
# v3.3: halved the values
country_event = {
	id = UniqueAscensionPerksEvents.434
	title = "edict_anti_matter_menu"
	desc = "UniqueAscensionPerksEvents.434.Desc"
	show_sound = event_activating_unknown_technology
	picture = GFX_evt_antimatter
	is_advisor_event = yes
	is_triggered_only = yes
	trigger = {
		# NOT = { has_active_event = {
		# 	# UniqueAscensionPerksEvents.434 does not work for self opening.
		# 	UniqueAscensionPerksEvents.435 UniqueAscensionPerksEvents.436 UniqueAscensionPerksEvents.437 UniqueAscensionPerksEvents.438
		# } }
	}
	# after = {}
	option = {
		name = UniqueAscensionPerksEvents.434.Energy
		allow = { resource_stockpile_compare = { resource = anti_matter value > 500 } NOT = { has_modifier = anti_matter_energy } }
		add_resource = { anti_matter = -500 }
		add_modifier = { modifier = anti_matter_energy years = 15 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	}
	# option = {
	# 	name = UniqueAscensionPerksEvents.434.Physics
	# 	allow = { resource_stockpile_compare = { resource = anti_matter value > 400 } NOT = { has_modifier = anti_matter_dark_physics } }
	# 	add_resource = { anti_matter = -400 }
	# 	add_modifier = { modifier = anti_matter_dark_physics years = 15 }
	# 	hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	# }
	option = {
		name = UniqueAscensionPerksEvents.434.Engineer
		allow = { resource_stockpile_compare = { resource = anti_matter value > 400 } NOT = { has_modifier = anti_matter_dark_engineering } }
		add_resource = { anti_matter = -400 }
		add_modifier = { modifier = anti_matter_dark_engineering years = 15 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	}
	option = {
		name = UniqueAscensionPerksEvents.434.Dark
		allow = { resource_stockpile_compare = { resource = anti_matter value > 750 } NOT = { has_modifier = anti_matter_dark_matter } has_technology = tech_mine_dark_matter }
		add_resource = { anti_matter = -750 }
		add_modifier = { modifier = anti_matter_dark_matter years = 15 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	}
	option = {
		name = UniqueAscensionPerksEvents.434.Weapons
		allow = { resource_stockpile_compare = { resource = anti_matter value > 900 } NOT = { has_modifier = anti_matter_energy_weapons } }
		add_resource = { anti_matter = -900 }
		add_modifier = { modifier = anti_matter_energy_weapons years = 15 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	}
	option = {
		name = UniqueAscensionPerksEvents.434.Shields
		allow = { resource_stockpile_compare = { resource = anti_matter value > 750 } NOT = { has_modifier = anti_matter_shields } }
		add_resource = { anti_matter = -750 }
		add_modifier = { modifier = anti_matter_shields years = 15 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	}
	option = {
		name = UniqueAscensionPerksEvents.434.Thrusters
		allow = { resource_stockpile_compare = { resource = anti_matter value > 500 } NOT = { has_modifier = anti_matter_trusters } }
		add_resource = { anti_matter = -500 }
		add_modifier = { modifier = anti_matter_trusters years = 15 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	}
	option = {
		name = UniqueAscensionPerksEvents.434.Upkeep
		allow = { resource_stockpile_compare = { resource = anti_matter value > 500 } NOT = { has_modifier = anti_matter_upkeep } }
		add_resource = { anti_matter = -500 }
		add_modifier = { modifier = anti_matter_upkeep years = 15 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.434.WhiteHole"
		trigger = { # v3.3 added limit
			check_variable = { which = white_hole_systems value < 9 }
			event_target:global_event_country = { check_variable = { which = white_hole_systems value < 36 } }
		}
		allow = { resource_stockpile_compare = { resource = anti_matter value > 250 } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.434.Req01 NOT = { has_country_flag = white_hole_detection_cooldown } } }
		add_resource = { anti_matter = -250 }
		hidden_effect = {
			set_timed_country_flag = { flag = white_hole_detection_cooldown years = 3 }
			country_event = { id = UniqueAscensionPerksEvents.432 }
			country_event = { id = UniqueAscensionPerksEvents.434 }
			country_event = { id = UniqueAscensionPerksEvents.436 days = 1080 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.434.Cloud"
		allow = {
			resource_stockpile_compare = { resource = anti_matter value > 500 } has_technology = tech_space_cloud_weapon_1 custom_tooltip = { fail_text = UniqueAscensionPerksEvents.434.Req02 NOT = { has_country_flag = space_clouds_generation_cooldown } }
			count_owned_fleet = { count < 11 limit = { is_civilian = no has_fleet_flag = space_clouds_generation_fleet } }
		}
		add_resource = { anti_matter = -500 }
		custom_tooltip = "UniqueAscensionPerksEvents.434.Cloud.tooltip"
		hidden_effect = {
			set_timed_country_flag = { flag = space_clouds_generation_cooldown years = 3 }
			country_event = { id = UniqueAscensionPerksEvents.434 }
			country_event = { id = UniqueAscensionPerksEvents.438 days = 1080 }
			if = { limit = { exists = capital_scope } capital_scope = { save_event_target_as = spawn_location }
			} else = { random_owned_planet = { limit = { is_colony = yes } save_event_target_as = spawn_location } }
			create_fleet = {
				name = "Space Clouds"
				effect = {
					set_owner = root
					while = { count = 7 create_ship = { name = "" design = NAME_Dom_Cloud effect = { add_modifier = { modifier = domesticated_aliens } } } }
					while = { count = 7 random = { chance = 50 create_ship = { name = "" design = NAME_Dom_Cloud effect = { add_modifier = { modifier = domesticated_aliens } } } } }
					set_location = { target = event_target:spawn_location distance = 250 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 1000
					set_formation_scale = 4.0
					set_fleet_flag = space_clouds_generation_fleet
				}
			}
		}
	}
	option = { name = EXIT default_hide_option = yes }
}

country_event = {
	id = UniqueAscensionPerksEvents.435
	title = "UniqueAscensionPerksEvents.435.Name"
	desc = "UniqueAscensionPerksEvents.435.Desc"
	show_sound = event_activating_unknown_technology
	picture = GFX_evt_antimatter
	auto_select = no
	auto_opens = no
	# hide_window = yes
	is_triggered_only = yes
	is_advisor_event = yes
	trigger = { NOT = { has_active_event = { UniqueAscensionPerksEvents.435 UniqueAscensionPerksEvents.436 UniqueAscensionPerksEvents.437 UniqueAscensionPerksEvents.438 } } }
	# immediate = {
	# 	create_message = {
	# 		type = TRIGG_MOD_GAINED
	# 		localization = UniqueAscensionPerksEvents.435.Desc
	# 		days = 30
	#		target = capital_scope
	# 	}
	# 	play_sound = event_activating_unknown_technology
	# }
	option = {
		name = "edict_anti_matter_menu"
		allow = { NOT = { has_active_event = { UniqueAscensionPerksEvents.434 } } }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } }
	}
	option = { name = "UniqueAscensionPerksEvents.436.b" ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.436
	title = "UniqueAscensionPerksEvents.436.Name"
	desc = "UniqueAscensionPerksEvents.436.Desc"
	show_sound = event_activating_unknown_technology
	picture = GFX_evt_antimatter
	auto_select = no
	auto_opens = no
	is_advisor_event = yes
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { UniqueAscensionPerksEvents.435 UniqueAscensionPerksEvents.436 UniqueAscensionPerksEvents.437 UniqueAscensionPerksEvents.438 } } }
	option = {
		name = "edict_anti_matter_menu"
		allow = { NOT = { has_active_event = { UniqueAscensionPerksEvents.434 } } }
		hidden_effect = {
			if = { limit = { NOT = { has_country_flag = notify_white_hole_detection_no_warning } }
				country_event = { id = UniqueAscensionPerksEvents.434 }
			}
		}
	}
	option = { name = "UniqueAscensionPerksEvents.436.b" ai_chance = { factor = 0.1 } }
}

# LEGACY (on_system_survey_ship)
ship_event = {
	id = UniqueAscensionPerksEvents.437
	title = "UniqueAscensionPerksEvents.531.Name"
	desc = "UniqueAscensionPerksEvents.437.Desc"
	picture = GFX_evt_space_station
	show_sound = event_scanner
	location = from # event_target:survey_system
	is_advisor_event = yes
	is_triggered_only = yes
	trigger = {
		exists = owner
		owner = { has_ascension_perk = ap_antimatter }
		exists = from
		from = {
			is_star_class = sc_white_hole
			NOT = { exists = starbase }
		}
	}
	immediate = {
		owner = { save_event_target_as = science_ship_owner }
	}
	option = { name = EXCELLENT deploy_outpost = yes } }

country_event = {
	id = UniqueAscensionPerksEvents.438
	title = "UniqueAscensionPerksEvents.438.Name"
	desc = "UniqueAscensionPerksEvents.438.Desc"
	show_sound = event_activating_unknown_technology
	picture = GFX_evt_antimatter
	auto_select = no
	auto_opens = no
	is_advisor_event = yes
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { UniqueAscensionPerksEvents.435 UniqueAscensionPerksEvents.436 UniqueAscensionPerksEvents.437 UniqueAscensionPerksEvents.438 } } }
	option = {
		name = "edict_anti_matter_menu"
		allow = { NOT = { has_active_event = { UniqueAscensionPerksEvents.434 } } }
		hidden_effect = {
			if = { limit = { count_owned_fleet = { count < 11 limit = { is_civilian = no has_fleet_flag = space_clouds_generation_fleet } } }
				country_event = { id = UniqueAscensionPerksEvents.434 }
			}
		}
	}
	option = { name = "UniqueAscensionPerksEvents.436.b" ai_chance = { factor = 0.1 } }
}

# From = country
system_event = {
	id = UniqueAscensionPerksEvents.439
	hide_window = yes
	# mean_time_to_happen = { months = 5 }
	is_triggered_only = yes
	trigger = {
		any_system_planet = {
			is_planet_class = pc_white_hole
			NOT = { has_planet_flag = white_hole_physics_deposit }
		}
	}
	immediate = {
		every_system_planet = {
			limit = {
				is_planet_class = pc_white_hole
				NOT = { has_planet_flag = white_hole_physics_deposit }
			}
			set_planet_flag = white_hole_physics_deposit
			random_list = {
				10 = { add_deposit = d_physics_6 }
				10 = { add_deposit = d_physics_7 }
				10 = { add_deposit = d_physics_8 }
				10 = { add_deposit = d_physics_9 }
			}
		}
		from = {
			random_list = {
				10 = {}
				5 = { modifier = { factor = 0 has_technology = tech_mine_dark_matter	 } modifier = { factor = 0.5 has_tech_option = tech_mine_dark_matter	 } add_research_option = tech_mine_dark_matter }
				5 = { modifier = { factor = 0 has_technology = tech_mine_anti_matter	 } modifier = { factor = 0.5 has_tech_option = tech_mine_anti_matter	 } add_research_option = tech_mine_anti_matter }
				5 = { modifier = { factor = 0 has_technology = tech_space_cloud_weapon_1 } modifier = { factor = 0.5 has_tech_option = tech_space_cloud_weapon_1 } add_research_option = tech_space_cloud_weapon_1 }
			}
		}
	}
}

######################################
#									 #
######### Self Managed Colony ########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.460
	title = "ap_self_aware_colony"
	desc = "ap_self_aware_colony_desc"
	show_sound = event_cityscape
	picture = GFX_evt_self_aware_colony
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

# From decision_self_aware_colony_menu
# This = event_target:self_aware_planet
planet_event = {
	id = UniqueAscensionPerksEvents.461
	title = "decision_self_aware_colony_menu"
	desc = "UniqueAscensionPerksEvents.461.Desc"
	show_sound = event_cityscape
	picture = GFX_evt_self_aware_colony
	location = root
	is_triggered_only = yes
	immediate = {
		# save_event_target_as = self_aware_planet
	}
	option = { name = "UniqueAscensionPerksEvents.461.Construct.Random"	allow = { exists = owner owner = { resource_stockpile_compare = { resource = minerals value > 1000 } } } hidden_effect = { set_planet_flag = self_aware_manual_order planet_event = { id = UniqueAscensionPerksEvents.461 } } self_aware_colony_deposit_selection = yes custom_tooltip = "UniqueAscensionPerksEvents.461.Construct.Random.tooltip" }
	option = { name = "UniqueAscensionPerksEvents.461.Construct.NoRandom" hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } custom_tooltip = "UniqueAscensionPerksEvents.461.Construct.NoRandom.tooltip" }
	option = { name = "UniqueAscensionPerksEvents.461.Energy"	allow = { NOT = { has_modifier = self_aware_energy } } self_aware_colony_clear_focus = yes add_modifier = { modifier = self_aware_energy } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.461 } } }
	option = { name = "UniqueAscensionPerksEvents.461.Minerals"	allow = { NOT = { has_modifier = self_aware_minerals } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.461.Req01 OR = { merg_is_habitat = no AND = { merg_is_habitat = yes has_planet_flag = mining_habitat } } } } self_aware_colony_clear_focus = yes add_modifier = { modifier = self_aware_minerals } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.461 } } }
	option = { name = "UniqueAscensionPerksEvents.461.Food"	allow = { NOT = { has_modifier = self_aware_food } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.461.Req01 merg_is_habitat = no } } self_aware_colony_clear_focus = yes add_modifier = { modifier = self_aware_food } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.461 } } }
	option = { name = "UniqueAscensionPerksEvents.461.Consumers"	allow = { OR = { has_global_flag = ap_self_aware_colony AND = { exists = owner owner = { is_gestalt = no has_technology = tech_luxuries_2 } } } NOT = { has_modifier = self_aware_consumers } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.461.Req01 merg_is_habitat = no } } self_aware_colony_clear_focus = yes add_modifier = { modifier = self_aware_consumers } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.461 } } }
	option = { name = "UniqueAscensionPerksEvents.461.Alloys"	allow = { OR = { has_global_flag = ap_self_aware_colony AND = { exists = owner owner = { has_technology = tech_alloys_2 } } } NOT = { has_modifier = self_aware_alloys } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.461.Req01 merg_is_habitat = no } } self_aware_colony_clear_focus = yes add_modifier = { modifier = self_aware_alloys } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.461 } } }
	option = { name = "UniqueAscensionPerksEvents.461.Research"	allow = { OR = { has_global_flag = ap_self_aware_colony AND = { exists = owner owner = { has_technology = tech_basic_science_lab_3 } } } NOT = { has_modifier = self_aware_research } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.461.Req01 OR = { merg_is_habitat = no AND = { merg_is_habitat = yes has_planet_flag = research_habitat } } } } self_aware_colony_clear_focus = yes add_modifier = { modifier = self_aware_research } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.461 } } }
	option = { name = "UniqueAscensionPerksEvents.461.Trade"	allow = { OR = { has_global_flag = ap_self_aware_colony AND = { exists = owner owner = { has_technology = tech_interstellar_economics is_gestalt = no } } } NOT = { has_modifier = self_aware_trade } } self_aware_colony_clear_focus = yes add_modifier = { modifier = self_aware_trade } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.461 } } }
	option = { name = "UniqueAscensionPerksEvents.461.Soldiers"	allow = { OR = { has_global_flag = ap_self_aware_colony AND = { exists = owner owner = { has_technology = tech_centralized_command } } } NOT = { has_modifier = self_aware_army } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.461.Req01 merg_is_habitat = no } } self_aware_colony_clear_focus = yes add_modifier = { modifier = self_aware_army } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.461 } } }
	option = { name = "UniqueAscensionPerksEvents.461.Strategic"	allow = { OR = { has_global_flag = ap_self_aware_colony AND = { exists = owner owner = { has_technology = tech_exotic_gases has_technology = tech_volatile_motes has_technology = tech_rare_crystals } } } NOT = { has_modifier = self_aware_strategic } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.461.Req01 merg_is_habitat = no } } self_aware_colony_clear_focus = yes add_modifier = { modifier = self_aware_strategic } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.461 } } }
	option = { name = "UniqueAscensionPerksEvents.461.NoFocus"	allow = { NOT = { has_modifier = self_aware_no_focus } } self_aware_colony_clear_focus = yes add_modifier = { modifier = self_aware_no_focus } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.461 } } }
	option = {
		name = "UniqueAscensionPerksEvents.461.Reset"
		custom_tooltip = "decision_self_aware_colony_reset_tooltip"
		hidden_effect = {
			set_variable = { which = num_pops_self_aware_planet value = trigger:num_pops }
			reset_self_aware_planet = { POPS = num_pops_self_aware_planet } # TODO
			planet_event = { id = UniqueAscensionPerksEvents.461 }
		}
	}
	option = { name = "UniqueAscensionPerksEvents.461.Off"	allow = { has_modifier = self_aware_colony } remove_self_aware_planet = yes remove_modifier = self_aware_colony custom_tooltip = "decision_self_aware_colony_to_normal_tooltip" }
	option = { name = EXIT default_hide_option = yes }
}
# on_monthly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.462
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 1 }
	# pre_triggers = { has_owner = yes }
	trigger = {
		OR = {
			has_global_flag = ap_self_aware_colony
			has_ascension_perk = ap_self_aware_colony
		} # colony_age > 12
		resource_stockpile_compare = { resource = minerals value > 1000 }
		any_owned_planet = { has_modifier = self_aware_colony }
	}
	immediate = {
		every_owned_planet = {
			limit = { has_modifier = self_aware_colony }
			self_aware_colony_deposit_selection = yes
		}
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.463
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { days = 6 }
	pre_triggers = { has_owner = yes }
	trigger = { exists = owner OR = { has_global_flag = ap_self_aware_colony owner = { has_ascension_perk = ap_self_aware_colony } } has_modifier = self_aware_colony }
	immediate = { create_pop = { species = owner_main_species } }
}

# on_yearly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.464
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 6 }
	# pre_triggers = { has_owner = yes }
	trigger = {
		NOR = {
			has_global_flag = ap_self_aware_colony
			has_ascension_perk = ap_self_aware_colony
		}
		merg_is_default_empire = yes
		any_owned_planet = { has_modifier = self_aware_colony }
	}
	immediate = {
		every_owned_planet = {
			limit = { has_modifier = self_aware_colony }
			remove_self_aware_planet = yes
			remove_modifier = self_aware_colony
		}
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.465
	hide_window = yes
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	trigger = {
		exists = owner
		OR = { has_global_flag = ap_self_aware_colony owner = { has_ascension_perk = ap_self_aware_colony } }
		owner = { resource_stockpile_compare = { resource = minerals value > 1000 } }
		has_modifier = self_aware_colony
	}
	immediate = { self_aware_colony_deposit_selection = yes }
}

planet_event = {
	id = UniqueAscensionPerksEvents.466
	title = "UniqueAscensionPerksEvents.466.Name"
	desc = "UniqueAscensionPerksEvents.466.Desc"
	show_sound = event_cityscape
	picture = GFX_evt_self_aware_colony
	location = root # event_target:self_aware_planet
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	option = { name = "UniqueAscensionPerksEvents.466.Housing"		allow = { has_200_minerals = yes } add_deposit = d_aware_housing_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Energy"		allow = { has_200_minerals = yes } add_deposit = d_aware_energy_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Minerals"		allow = { has_200_minerals = yes } add_deposit = d_aware_mining_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Food"			allow = { has_200_minerals = yes } add_deposit = d_aware_farming_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Amenities"	allow = { has_200_minerals = yes } add_deposit = d_aware_amenities_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Security"		allow = { has_200_minerals = yes } add_deposit = d_aware_crime_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Consumers"	allow = { has_200_minerals = yes has_modifier = self_aware_consumers } add_deposit = d_aware_consumer_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Alloys"		allow = { has_200_minerals = yes has_modifier = self_aware_alloys } add_deposit = d_aware_foundry_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Research"		allow = { has_200_minerals = yes has_modifier = self_aware_research } add_deposit = d_aware_research_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Trade"		allow = { has_200_minerals = yes has_modifier = self_aware_trade } add_deposit = d_aware_trade_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Soldiers"		allow = { has_200_minerals = yes } add_deposit = d_aware_army_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Culture"		allow = { has_200_minerals = yes NOT = { has_deposit = d_aware_culture_building } } add_deposit = d_aware_culture_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Assembly"		allow = { has_200_minerals = yes NOT = { has_deposit = d_aware_assembly_building } } add_deposit = d_aware_assembly_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Growth"		allow = { has_200_minerals = yes NOT = { has_deposit = d_aware_growth_building } } add_deposit = d_aware_growth_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Strategic"	allow = { has_200_minerals = yes has_modifier = self_aware_strategic } add_deposit = d_aware_refinery_building owner = { add_resource = { minerals = -200 } } hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = BACK hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.461 } } ai_chance = { factor = 0.1 } }
}

######################################
#									 #
###### Flourishing Technocracy #######
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.470
	title = "ap_flourishing_technocracy"
	desc = "ap_flourishing_technocracy_desc"
	show_sound = event_laboratory_sound
	location = capital_scope
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = flourishing_technocracy_room }
	is_triggered_only = yes
	option = {
		name = EXCELLENT
		if = { limit = { is_regular_empire = yes } add_modifier = { modifier = flourishing_technocracy } }
		else_if = { limit = { is_hive_empire = yes } add_modifier = { modifier = flourishing_technocracy_hivemind } }
		else_if = { limit = { is_machine_empire = yes } add_modifier = { modifier = flourishing_technocracy_machine } }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.471 } }
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.471
	title = "UniqueAscensionPerksEvents.471.Name"
	desc = "UniqueAscensionPerksEvents.471.Desc"
	show_sound = event_laboratory_sound
	location = capital_scope
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = flourishing_technocracy_room }
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.471.a" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.472 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.472
	title = "UniqueAscensionPerksEvents.472.Name"
	desc = "UniqueAscensionPerksEvents.472.Desc"
	show_sound = event_laboratory_sound
	picture = GFX_evt_physics_research
	location = capital_scope
	is_triggered_only = yes
	option = { name = "field_manipulation" add_modifier = { modifier = flourishing_technocracy_field_manipulation years = 5 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.473 } } ai_chance = { factor = 0.1 } }
	option = { name = "particles" add_modifier = { modifier = flourishing_technocracy_particles years = 5 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.473 } } }
	option = { name = "computing" add_modifier = { modifier = flourishing_technocracy_computing years = 5 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.473 } } }
	option = { name = AMOUNT_NONE ai_chance = { factor = 0.1 } }
}

country_event = {
	id = UniqueAscensionPerksEvents.473
	title = "UniqueAscensionPerksEvents.473.Name"
	desc = "UniqueAscensionPerksEvents.473.Desc"
	show_sound = event_laboratory_sound
	picture = GFX_evt_society_research
	location = capital_scope
	is_triggered_only = yes
	option = { name = "new_worlds" add_modifier = { modifier = flourishing_technocracy_new_worlds years = 5 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.474 } } ai_chance = { factor = 0.1 } }
	option = { name = "statecraft" add_modifier = { modifier = flourishing_technocracy_statecraft years = 5 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.474 } } }
	option = { name = "biology" add_modifier = { modifier = flourishing_technocracy_biology years = 5 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.474 } } }
	option = { name = "military_theory" add_modifier = { modifier = flourishing_technocracy_military_theory years = 5 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.474 } } }
	option = { name = "psionics" allow = { has_technology = tech_psionic_theory } add_modifier = { modifier = flourishing_technocracy_psionics years = 5 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.474 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.474
	title = "UniqueAscensionPerksEvents.474.Name"
	desc = "UniqueAscensionPerksEvents.474.Desc"
	show_sound = event_laboratory_sound
	picture = GFX_evt_engineering_research
	location = capital_scope
	is_triggered_only = yes
	option = { name = "materials" add_modifier = { modifier = flourishing_technocracy_materials years = 5 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.471 days = 1800 } } ai_chance = { factor = 0.1 } }
	option = { name = "industry" add_modifier = { modifier = flourishing_technocracy_industry years = 5 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.471 days = 1800 } } }
	option = { name = "voidcraft" add_modifier = { modifier = flourishing_technocracy_voidcraft years = 5 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.471 days = 1800 } } }
	option = { name = "propulsion" add_modifier = { modifier = flourishing_technocracy_propulsion years = 5 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.471 days = 1800 } } }
}

######################################
#									 #
########## Legendary Forge ###########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.480
	title = "ap_legendary_forge"
	desc = "ap_legendary_forge_desc"
	show_sound = event_mystic_reveal
	location = capital_scope
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = legendary_forge_room }
	is_triggered_only = yes
	option = { name = EXCELLENT add_research_option = tech_living_metal_armor }
}

country_event = {
	id = UniqueAscensionPerksEvents.481
	title = "UniqueAscensionPerksEvents.481.Name"
	desc = "UniqueAscensionPerksEvents.481.Desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_legendary_forge
	location = event_target:legendary_forge_planet
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

######################################
#									 #
######### Library of Wisdom ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.490
	title = "ap_library_wisedom"
	desc = "ap_library_wisedom_desc"
	show_sound = event_mystic_reveal
	location = capital_scope
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = library_wisedom_room }
	custom_gui = "enclave_trader_window"
	is_triggered_only = yes
	option = {
		name = EXCELLENT
		custom_tooltip = "ap_library_wisedom_tooltip"
		add_monthly_resource_mult = { resource = society_research value = 1 min = 10000 max = 20000 }
		add_resource = { unity = 5000 }
	}
}

# v3.3: - cooldown for library itself increase to 730 days (instead of 440), decreased bonuses from relic to half (also removed society research point when "use").
# Edict (and self)
country_event = {
	id = UniqueAscensionPerksEvents.491
	title = "edict_library_wisedom_menu"
	desc = "UniqueAscensionPerksEvents.491.Desc"
	show_sound = event_mystic_reveal
	location = capital_scope
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = root room = library_wisedom_room }
	custom_gui = "enclave_trader_window"
	is_triggered_only = yes
	option = {
		name = "UniqueAscensionPerksEvents.491.a"
		allow = { NOT = { has_country_flag = ap_library_wisedom_cooldown } resource_stockpile_compare = { resource = unity value > 200 } }
		add_resource = { unity = -200 }
		hidden_effect = {
			country_event = { id = UniqueAscensionPerksEvents.493 }
			set_timed_country_flag = { flag = ap_library_wisedom_cooldown years = 2 }
			country_event = { id = UniqueAscensionPerksEvents.492 days = 730 }
		}
		custom_tooltip = "UniqueAscensionPerksEvents.491.a.tooltip"
	}
	option = { name = GOODBYE default_hide_option = yes }
}
# From .491
country_event = {
	id = UniqueAscensionPerksEvents.492
	title = "UniqueAscensionPerksEvents.492.Name"
	desc = "UniqueAscensionPerksEvents.492.Desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_library_wisedom
	location = capital_scope
	is_triggered_only = yes
	option = { name = OK ai_chance = { factor = 0.1 } }
	option = { name = "UniqueAscensionPerks.lets_again" country_event = { id = UniqueAscensionPerksEvents.491 } }
}
# From .491
country_event = {
	id = UniqueAscensionPerksEvents.493
	title = "edict_library_wisedom_menu"
	desc = "UniqueAscensionPerksEvents.493.Desc"
	show_sound = event_mystic_reveal
	location = capital_scope
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = library_wisedom_room }
	custom_gui = "enclave_trader_window"
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.493.Political" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.494 } } }
	option = { name = "UniqueAscensionPerksEvents.493.Economy" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.495 } } }
	option = { name = "UniqueAscensionPerksEvents.493.Military" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.496 } } }
	option = { name = "UniqueAscensionPerksEvents.493.Research" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.497 } } }
	option = {
		name = "UniqueAscensionPerksEvents.493.Knowledge"
		allow = { resource_stockpile_compare = { resource = influence value > 500 } NOT = { has_country_flag = has_wisedom_relic } }
		add_relic = r_orb_of_knowledge
		add_resource = { influence = -500 }
		hidden_effect = { set_country_flag = has_wisedom_relic country_event = { id = UniqueAscensionPerksEvents.520 } }
	}
	option = { name = GOODBYE default_hide_option = yes hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.494
	title = "edict_library_wisedom_menu"
	desc = "UniqueAscensionPerksEvents.494.Desc"
	show_sound = event_mystic_reveal
	location = capital_scope
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = root room = library_wisedom_room }
	custom_gui = "enclave_trader_window"
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.494.Ethics"		allow = { NOT = { has_country_flag = ap_library_wisedom_propaganda_campaign } } trigger = { is_gestalt = no } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_propaganda_campaign } custom_tooltip = "edict_lw_propaganda_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Factions"		allow = { NOT = { has_country_flag = ap_library_wisedom_faction_campaign } } trigger = { is_gestalt = no } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_faction_campaign } custom_tooltip = "edict_lw_faction_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Diplomate"	allow = { NOT = { has_country_flag = ap_library_wisedom_diplomacy_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_diplomacy_campaign } custom_tooltip = "edict_lw_diplomacy_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Trust"		allow = { NOT = { has_country_flag = ap_library_wisedom_trust_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_trust_campaign } custom_tooltip = "edict_lw_trust_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Submit"		allow = { NOT = { has_country_flag = ap_library_wisedom_vassalization_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_vassalization_campaign } custom_tooltip = "edict_lw_vassalization_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Frictions"	allow = { NOT = { has_country_flag = ap_library_wisedom_territorial_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_territorial_campaign } custom_tooltip = "edict_lw_territorial_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Trade"		allow = { NOT = { has_country_flag = ap_library_wisedom_commercial_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_commercial_campaign } custom_tooltip = "edict_lw_commercial_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Leader"		allow = { NOT = { has_country_flag = ap_library_wisedom_teaching_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_teaching_campaign } custom_tooltip = "edict_lw_teaching_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Edict"		allow = { NOT = { has_country_flag = ap_library_wisedom_edict_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_edict_campaign } custom_tooltip = "edict_lw_edict_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Unity"		allow = { NOT = { has_country_flag = ap_library_wisedom_unity_cooldown } } add_monthly_resource_mult = { resource = unity value = 8 min = 2000 max = 8000 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_timed_country_flag = { flag = ap_library_wisedom_unity_cooldown years = 5 } } custom_tooltip = "UniqueAscensionPerks.no_request_length" }
	option = { name = "UniqueAscensionPerksEvents.494.Civic"		allow = { NOT = { has_modifier = library_wisedom_civic } resource_stockpile_compare = { resource = unity value > 10000 } } add_resource = { unity = -10000 } add_modifier = { modifier = library_wisedom_civic } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } } }
	option = { name = "UniqueAscensionPerksEvents.494.Ascension"	allow = { NOT = { has_modifier = library_wisedom_ascension } resource_stockpile_compare = { resource = unity value > 25000 } } add_resource = { unity = -25000 } add_modifier = { modifier = library_wisedom_ascension } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } } }
	option = { name = BACK ai_chance = { factor = 0 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.493 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.495
	title = "edict_library_wisedom_menu"
	desc = "UniqueAscensionPerksEvents.495.Desc"
	show_sound = event_mystic_reveal
	location = capital_scope
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = root room = library_wisedom_room }
	custom_gui = "enclave_trader_window"
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.495.Output"	allow = { NOT = { has_country_flag = ap_library_wisedom_prosperity_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_prosperity_campaign } custom_tooltip = "edict_lw_prosperity_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.495.Maintain"	allow = { NOT = { has_country_flag = ap_library_wisedom_upkeep_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_upkeep_campaign } custom_tooltip = "edict_lw_upkeep_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.495.Orbit"	allow = { NOT = { has_country_flag = ap_library_wisedom_collection_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_collection_campaign } custom_tooltip = "edict_lw_collection_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.495.Trade"	allow = { NOT = { has_country_flag = ap_library_wisedom_trade_campaign } } trigger = { is_gestalt = no } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_trade_campaign } custom_tooltip = "edict_lw_trade_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.495.Scheme"	allow = { NOT = { has_country_flag = ap_library_wisedom_construction_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_construction_campaign } custom_tooltip = "edict_lw_construction_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.495.Resource"	allow = { NOT = { has_country_flag = ap_library_wisedom_survival_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_survival_campaign } custom_tooltip = "edict_lw_survival_campaign_unlock" }
	option = { name = BACK ai_chance = { factor = 0 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.493 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.496
	title = "edict_library_wisedom_menu"
	desc = "UniqueAscensionPerksEvents.496.Desc"
	show_sound = event_mystic_reveal
	location = capital_scope
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = root room = library_wisedom_room }
	custom_gui = "enclave_trader_window"
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.496.War"			allow = { NOT = { has_country_flag = ap_library_wisedom_war_preparation } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_war_preparation } custom_tooltip = "edict_lw_war_preparation_unlock" }
	option = { name = "UniqueAscensionPerksEvents.496.Evade"		allow = { NOT = { has_country_flag = ap_library_wisedom_evade_danger } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_evade_danger } custom_tooltip = "edict_lw_evade_danger_unlock" }
	option = { name = "UniqueAscensionPerksEvents.496.Ground"		allow = { NOT = { has_country_flag = ap_library_wisedom_ground_field_experience } resource_stockpile_compare = { resource = unity value > 1000 } } add_resource = { unity = -1000 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_ground_field_experience } custom_tooltip = "edict_lw_ground_field_experience_unlock" }
	option = { name = "UniqueAscensionPerksEvents.496.Route"		allow = { NOT = { has_country_flag = ap_library_wisedom_fast_routes } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_fast_routes } custom_tooltip = "edict_lw_fast_routes_unlock" }
	option = { name = "UniqueAscensionPerksEvents.496.Experience"	allow = { NOT = { has_country_flag = ap_library_wisedom_experience_sharing } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_experience_sharing } custom_tooltip = "edict_lw_experience_sharing_unlock" }
	option = { name = "UniqueAscensionPerksEvents.496.Pierce"		allow = { NOT = { has_country_flag = ap_library_wisedom_defense_weakness } resource_stockpile_compare = { resource = unity value > 1000 } } add_resource = { unity = -1000 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_defense_weakness } custom_tooltip = "edict_lw_defense_weakness_unlock" }
	option = { name = "UniqueAscensionPerksEvents.496.Damage"		allow = { NOT = { has_country_flag = ap_library_wisedom_damage_output } resource_stockpile_compare = { resource = unity value > 1000 } } add_resource = { unity = -1000 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_damage_output } custom_tooltip = "edict_lw_damage_output_unlock" }
	option = { name = "UniqueAscensionPerksEvents.496.Alloys"		allow = { NOT = { has_country_flag = ap_library_wisedom_alloys_cooldown } resource_stockpile_compare = { resource = unity value > 1000 } } add_resource = { unity = -1000 alloys = 2000 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_timed_country_flag = { flag = ap_library_wisedom_alloys_cooldown years = 5 } } custom_tooltip = "UniqueAscensionPerks.no_request_length" }
	option = { name = BACK ai_chance = { factor = 0 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.493 } } }
}

# v3.3 removed ignore_rare = no
country_event = {
	id = UniqueAscensionPerksEvents.497
	title = "edict_library_wisedom_menu"
	desc = "UniqueAscensionPerksEvents.497.Desc"
	show_sound = event_mystic_reveal
	location = capital_scope
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = root room = library_wisedom_room }
	custom_gui = "enclave_trader_window"
	is_triggered_only = yes
	option = { name = "UniqueAscensionPerksEvents.497.Research"		allow = { NOT = { has_country_flag = ap_library_wisedom_extended_opportunities } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_extended_opportunities } custom_tooltip = "edict_lw_extended_opportunities_unlock" }
	option = { name = "UniqueAscensionPerksEvents.497.Physics"		allow = { NOT = { has_country_flag = ap_library_wisedom_physics_documentation } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_physics_documentation } custom_tooltip = "edict_lw_physics_documentation_unlock" }
	option = { name = "UniqueAscensionPerksEvents.497.Society"		allow = { NOT = { has_country_flag = ap_library_wisedom_society_documentation } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_society_documentation } custom_tooltip = "edict_lw_society_documentation_unlock" }
	option = { name = "UniqueAscensionPerksEvents.497.Engineering"	allow = { NOT = { has_country_flag = ap_library_wisedom_engineering_documentation } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_engineering_documentation } custom_tooltip = "edict_lw_engineering_documentation_unlock" }
	option = { name = "UniqueAscensionPerksEvents.497.Archeology"	allow = { NOT = { has_country_flag = ap_library_wisedom_archeological_knowledge } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_archeological_knowledge } custom_tooltip = "edict_lw_archeological_knowledge_unlock" }
	option = { name = "UniqueAscensionPerksEvents.497.Data"			allow = { NOT = { has_country_flag = ap_library_wisedom_adv_data_collection } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_adv_data_collection } custom_tooltip = "edict_lw_adv_data_collectione_unlock" }
	option = { name = "UniqueAscensionPerksEvents.497.ResearchData"	allow = { NOT = { has_country_flag = ap_library_wisedom_research_cooldown } resource_stockpile_compare = { resource = unity value > 500 } } add_resource = { unity = -500 } add_monthly_resource_mult = { resource = physics_research value = 8 min = 1500 max = 8000 } add_monthly_resource_mult = { resource = society_research value = 8 min = 2000 max = 8000 } add_monthly_resource_mult = { resource = engineering_research value = 8 min = 2000 max = 8000 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_timed_country_flag = { flag = ap_library_wisedom_research_cooldown years = 5 } } custom_tooltip = "UniqueAscensionPerks.no_request_length" }
	option = {
		name = "UniqueAscensionPerksEvents.497.PhysicsTech"
		allow = { NOT = { has_country_flag = ap_library_wisedom_wisedom_get_physics_tech_cooldown } resource_stockpile_compare = { resource = unity value > 500 } }
		add_resource = { unity = -500 }
		# wisedom_get_physics_tech = yes
		custom_tooltip = "UniqueAscensionPerks.no_request_length"
		add_random_research_option = { area = physics add_progress = 0.2 fail_effects = { add_monthly_resource_mult = { resource = physics_research value = 16 min = 3500 max = 14000 } } }
		hidden_effect = { set_timed_country_flag = { flag = ap_library_wisedom_wisedom_get_physics_tech_cooldown years = 5 } country_event = { id = UniqueAscensionPerksEvents.520 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.497.SocietyTech"
		allow = { NOT = { has_country_flag = ap_library_wisedom_wisedom_get_society_tech_cooldown } resource_stockpile_compare = { resource = unity value > 500 } }
		add_resource = { unity = -500 }
		# wisedom_get_society_tech = yes
		custom_tooltip = "UniqueAscensionPerks.no_request_length"
		add_random_research_option = { area = society add_progress = 0.2 fail_effects = { add_monthly_resource_mult = { resource = society_research value = 16 min = 4000 max = 14000 } } }
		hidden_effect = { set_timed_country_flag = { flag = ap_library_wisedom_wisedom_get_society_tech_cooldown years = 5 } country_event = { id = UniqueAscensionPerksEvents.520 } } }
	option = {
		name = "UniqueAscensionPerksEvents.497.EngineeringTech"
		allow = { NOT = { has_country_flag = ap_library_wisedom_wisedom_get_engineering_tech_cooldown } resource_stockpile_compare = { resource = unity value > 500 } }
		add_resource = { unity = -500 }
		# wisedom_get_engineering_tech = yes
		custom_tooltip = "UniqueAscensionPerks.no_request_length"
		add_random_research_option = { area = engineering add_progress = 0.2 fail_effects = { add_monthly_resource_mult = { resource = engineering_research value = 16 min = 4000 max = 14000 } } }
		hidden_effect = { set_timed_country_flag = { flag = ap_library_wisedom_wisedom_get_engineering_tech_cooldown years = 5 } country_event = { id = UniqueAscensionPerksEvents.520 } }
	}
	option = { name = BACK ai_chance = { factor = 0 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.493 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.520
	title = "UniqueAscensionPerksEvents.520.Name"
	desc = "UniqueAscensionPerksEvents.520.Desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_library_wisedom
	location = capital_scope
	is_triggered_only = yes
	option = { name = OK }
}

######################################
#									 #
###### Expansionist Development ######
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.530
	title = "ap_expansionist_development"
	desc = "ap_expansionist_development_desc"
	show_sound = event_scanner
	picture = GFX_evt_space_station
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT add_resource = { influence = 200 } }
}

# on_system_survey_ship
# v3.3: doubled costs due imbalance
ship_event = {
	id = UniqueAscensionPerksEvents.531
	title = "UniqueAscensionPerksEvents.531.Name"
	desc = "UniqueAscensionPerksEvents.531.Desc"
	picture = GFX_evt_space_station
	show_sound = event_scanner
	location = from # root
	is_triggered_only = yes
	trigger = {
		exists = owner
		owner = { has_ascension_perk = ap_expansionist_development }
		exists = from
		from = { NOT = { exists = starbase } }
	}
	immediate = {
		owner = { save_event_target_as = science_ship_owner }
		# from = { save_event_target_as = survey_system }
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Influence"
		allow = { owner = { resource_stockpile_compare = { resource = influence value > 100 } } }
		owner = { add_resource = { influence = -100 } }
		deploy_outpost = yes
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Energy"
		allow = { owner = { resource_stockpile_compare = { resource = energy value > 2000 } } }
		owner = { add_resource = { energy = -2000 } }
		deploy_outpost = yes
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Minerals"
		allow = { owner = { resource_stockpile_compare = { resource = minerals value > 2000 } } }
		owner = { add_resource = { minerals = -2000 } }
		deploy_outpost = yes
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Alloys"
		allow = { owner = { resource_stockpile_compare = { resource = alloys value > 800 } } }
		trigger = { from = { is_machine_empire = no } }
		owner = { add_resource = { alloys = -800 } }
		deploy_outpost = yes
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Alloys"
		allow = { owner = { resource_stockpile_compare = { resource = alloys value > 1000 } } }
		trigger = { from = { is_machine_empire = yes } }
		owner = { add_resource = { alloys = -1000 } }
		deploy_outpost = yes
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Unity"
		allow = { owner = { resource_stockpile_compare = { resource = unity value > 1000 } } }
		owner = { add_resource = { unity = -1000 } }
		deploy_outpost = yes
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Food"
		allow = { owner = { resource_stockpile_compare = { resource = food value > 2500 } } }
		owner = { add_resource = { food = -2500 } }
		deploy_outpost = yes
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Treasures"
		allow = { owner = { resource_stockpile_compare = { resource = treasures value > 300 } } }
		owner = { add_resource = { treasures = -300 } }
		deploy_outpost = yes
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.NanoDrones"
		allow = { owner = { resource_stockpile_compare = { resource = automatic_drone value > 1200 } } }
		owner = { add_resource = { automatic_drone = -1200 } }
		deploy_outpost = yes
	}
	option = { name = "UniqueAscensionPerksEvents.531.Nope" ai_chance = { factor = 0.1 } }
}

######################################
#									 #
##########  Dark Galaxy Web ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.540
	title = "ap_dark_galaxy_web"
	desc = "ap_dark_galaxy_web_desc"
	show_sound = event_scanner
	picture = GFX_evt_glitchy_matrix
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = OK enable_special_project = { name = DARK_GALAXY_WEB_PROJECT location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.541
	title = "UniqueAscensionPerksEvents.541.Name"
	desc = "UniqueAscensionPerksEvents.541.Desc"
	show_sound = event_scanner
	picture = GFX_evt_glitchy_matrix
	location = capital_scope
	is_triggered_only = yes
	immediate = { set_country_flag = ap_dark_galaxy_web_project }
	option = { name = EXCELLENT add_resource = { energy = 5000 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.542 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.542
	title = "edict_dark_galaxy_web_menu"
	desc = "UniqueAscensionPerksEvents.542.Desc"
	show_sound = event_scanner
	location = capital_scope
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = root room = dark_galaxy_web_room }
	is_triggered_only = yes
	option = { name = LEAVE }
}
