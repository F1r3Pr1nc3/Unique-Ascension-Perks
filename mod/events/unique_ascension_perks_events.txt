namespace = UniqueAscensionPerksEvents

# on_action (delay needed)
country_event = {
	id = UniqueAscensionPerksEvents.8785
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		country_event = { id = UniqueAscensionPerksEvents.8786 days = 3 scopes = { from = from fromfrom = fromfrom } }
	}
}

# SYNC_SUBJECTS_VIRTUAL_RELATIONs (on_war_beginning, on_war_ended)
# Similar UniqueAscensionPerksEvents.1022
country_event = {
	id = UniqueAscensionPerksEvents.8786
	is_triggered_only = yes
	hide_window = yes
	trigger = { is_subject = no }
	immediate = {
		if = {
			limit = { exists = fromfrom fromfrom = { is_scope_type = war } }
			fromfrom = {
				every_war_participant = {
					limit = {
						is_subject = no
						merg_is_default_empire = yes
						OR = {
							has_ascension_perk = ap_space_domestication
							has_ascension_perk = ap_advanced_security
							has_ascension_perk = ap_defense_sentinels
							has_ascension_perk = ap_civilian_activities
						}
						NOT = { has_country_flag = sync_subjects_virtual_relation }
					}
					set_timed_country_flag = { flag = sync_subjects_virtual_relation days = 5 }
					every_relation = {
						limit = {
							is_subject = no
							is_unique_perk_special_subject = yes
							OR = {
								has_relation_flag = { who = prev flag = domesticated_spaceborn_alien }
								has_relation_flag = { who = prev flag = security_strike_force }
								has_relation_flag = { who = prev flag = defense_sentinels }
								has_relation_flag = { who = prev flag = civilian_activities_country }
							}
						}
						country_event = { id = UniqueAscensionPerksEvents.8787 days = 3 } # prev = { sync_subjects_virtual_relation = yes }
					}
				}
			}
		}
		else_if = {
			limit = {
				merg_is_default_empire = yes
				OR = {
					has_ascension_perk = ap_space_domestication
					has_ascension_perk = ap_advanced_security
					has_ascension_perk = ap_defense_sentinels
					has_ascension_perk = ap_civilian_activities
				}
				NOT = { has_country_flag = sync_subjects_virtual_relation }
				any_relation = {
					is_subject = no
					is_unique_perk_special_subject = yes
					OR = {
						has_relation_flag = { who = prev flag = domesticated_spaceborn_alien }
						has_relation_flag = { who = prev flag = security_strike_force }
						has_relation_flag = { who = prev flag = defense_sentinels }
						has_relation_flag = { who = prev flag = civilian_activities_country }
					}
				}
			}
			set_timed_country_flag = { flag = sync_subjects_virtual_relation days = 5 }
			every_relation = {
				limit = {
					is_subject = no
					is_unique_perk_special_subject = yes
					OR = {
						has_relation_flag = { who = prev flag = domesticated_spaceborn_alien }
						has_relation_flag = { who = prev flag = security_strike_force }
						has_relation_flag = { who = prev flag = defense_sentinels }
						has_relation_flag = { who = prev flag = civilian_activities_country }
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.8787 days = 3 } # prev = { sync_subjects_virtual_relation = yes }
			}
		}
		else_if = {
			limit = {
				exists = from
				from = {
					is_scope_type = country
					merg_is_default_empire = yes
					OR = {
						has_ascension_perk = ap_space_domestication
						has_ascension_perk = ap_advanced_security
						has_ascension_perk = ap_defense_sentinels
						has_ascension_perk = ap_civilian_activities
					}
					NOT = { has_country_flag = sync_subjects_virtual_relation }
				}
			}
			from = {
				set_timed_country_flag = { flag = sync_subjects_virtual_relation days = 5 }
				every_relation = {
					limit = {
						is_subject = no
						is_unique_perk_special_subject = yes
						OR = {
							has_relation_flag = { who = prev flag = domesticated_spaceborn_alien }
							has_relation_flag = { who = prev flag = security_strike_force }
							has_relation_flag = { who = prev flag = defense_sentinels }
							has_relation_flag = { who = prev flag = civilian_activities_country }
						}
					}
					country_event = { id = UniqueAscensionPerksEvents.8787 days = 3 } # prev = { sync_subjects_virtual_relation = yes }
				}
			}
		}
		if = {
			limit = {
				OR = { has_ascension_perk = ap_advanced_security has_ascension_perk = ap_defense_sentinels }
				any_system_within_border = {
					has_owner = yes
					exists = starbase
					starbase.owner = { is_same_empire = root }
					has_star_flag = recent_security_strike_force
					any_fleet_in_system = {
						exists = owner
						owner = { is_country_type = security_forces }
					}
					any_fleet_in_system = {
						is_mobile = yes
						exists = owner
						owner = {
							NOR = { is_same_empire = root is_country_type = security_forces }
							OR = {
								is_hostile = root
								root = { is_hostile = prev }
							}
							prevprev = {
								any_fleet_in_system = {
									exists = owner
									owner = {
										is_country_type = security_forces
										NOT = { is_hostile = prevprevprev }
									}
								}
							}
						}
					}
				}
			}
			random_system_within_border = {
				limit = {
					has_star_flag = recent_security_strike_force
					any_fleet_in_system = {
						is_mobile = yes
						exists = owner
						owner = {
							NOR = { is_same_empire = root is_country_type = security_forces }
							OR = {
								is_hostile = root
								root = { is_hostile = prev }
							}
							prevprev = {
								any_fleet_in_system = {
									exists = owner
									owner = {
										is_country_type = security_forces
										NOT = { is_hostile = prevprevprev }
									}
								}
							}
						}
					}
				}
				log = "Found system with security_forces not synced \\[This.GetName]"
				random_fleet_in_system = {
					limit = {
						is_mobile = yes
						exists = owner
						owner = {
							NOT = { is_same_empire = root }
							OR = {
								is_hostile =root
								root = { is_hostile = prev }
							}
							prevprev = {
								any_fleet_in_system = {
									exists = owner
									owner = {
										is_country_type = security_forces
										NOT = { is_hostile = prevprevprev }
									}
								}
							}
						}
					}
					fleet_event = { id = UniqueAscensionPerksEvents.8062 scopes = { from = prev fromfrom = prev } days = 2 }
				}
			}
		}
	}
}

# Kill Special Subject Country if their master is dead.
# Root = Special Subject - Sync relations.
country_event = {
	id = UniqueAscensionPerksEvents.8787
	# mean_time_to_happen = { months = 6 } # 4
	hide_window = yes
	is_triggered_only = yes
	# trigger = {
	# 	is_subject = no
	# 	is_unique_perk_special_subject = yes
	# 	OR = {
	# 		has_country_flag = domesticated_spaceborn_alien
	# 		has_country_flag = security_strike_force
	# 		has_country_flag = defense_sentinels
	# 		has_country_flag = civilian_activities_country
	# 	}
	# }
	immediate = {
		if = {
			limit = { is_country_type = domesticated_spaceborn_alien has_country_flag = domesticated_spaceborn_alien }
			if = {
				limit = {
					count_relation = {
						limit = {
							merg_is_default_empire = yes
							is_subject = no
							OR = {
								reverse_has_relation_flag = { who = root flag = domesticated_spaceborn_alien }
								root = { has_country_flag = is_unique_perk_special_subject_of@prev } # New in v3.14
							}
						}
						count = 0
					}
				}
				destroy_country = yes
			}
			else = {
				if = {
					limit = {
						exists = from
						from = {
							merg_is_default_empire = yes
							OR = {
								reverse_has_relation_flag = { who = root flag = domesticated_spaceborn_alien }
								root = { has_country_flag = is_unique_perk_special_subject_of@prev } # New in v3.14
							}
						}
					}
					from = { sync_subjects_virtual_relation = yes }
				}
				else = {
					random_relation = {
						limit = {
							merg_is_default_empire = yes
							OR = {
								reverse_has_relation_flag = { who = root flag = domesticated_spaceborn_alien }
								root = { has_country_flag = is_unique_perk_special_subject_of@prev } # New in v3.14
							}
						}
						sync_subjects_virtual_relation = yes
					}
				}
			}
		}
		else_if = {
			limit = { is_country_type = security_forces has_country_flag = security_strike_force }
			if = {
				limit = {
					count_relation = {
						limit = {
							merg_is_default_empire = yes
							is_subject = no
							OR = {
								reverse_has_relation_flag = { who = root flag = security_strike_force }
								root = { has_country_flag = is_unique_perk_special_subject_of@prev } # New in v3.14
							}
						}
						count = 0
					}
				}
				destroy_country = yes
			}
			else = {
				if = {
					limit = {
						exists = from
						from = {
							merg_is_default_empire = yes
							OR = {
								reverse_has_relation_flag = { who = root flag = security_strike_force }
								root = { has_country_flag = is_unique_perk_special_subject_of@prev } # New in v3.14
							}
						}
					}
					from = { sync_subjects_virtual_relation = yes }
				}
				else = {
					random_relation = {
						limit = {
							merg_is_default_empire = yes
							OR = {
								reverse_has_relation_flag = { who = root flag = security_strike_force }
								root = { has_country_flag = is_unique_perk_special_subject_of@prev } # New in v3.14
							}
						}
						sync_subjects_virtual_relation = yes
					}
				}
			}
		}
		else_if = {
			limit = {
				is_country_type = security_forces # defense_sentinels
				has_country_flag = defense_sentinels
			}
			if = {
				limit = {
					count_relation = {
						limit = {
							merg_is_default_empire = yes
							is_subject = no
							OR = {
								reverse_has_relation_flag = { who = root flag = defense_sentinels }
								root = { has_country_flag = is_unique_perk_special_subject_of@prev } # New in v3.14
							}
						}
						count = 0
					}
				}
				destroy_country = yes
			}
			else = {
				if = {
					limit = {
						exists = from
						from = {
							merg_is_default_empire = yes
							OR = {
								reverse_has_relation_flag = { who = root flag = defense_sentinels }
								root = { has_country_flag = is_unique_perk_special_subject_of@prev } # New in v3.14
							}
						}
					}
					from = { sync_subjects_virtual_relation = yes }
				}
				else = {
					random_relation = {
						limit = {
							merg_is_default_empire = yes
							OR = {
								reverse_has_relation_flag = { who = root flag = defense_sentinels }
								root = { has_country_flag = is_unique_perk_special_subject_of@prev } # New in v3.14
							}
						}
						sync_subjects_virtual_relation = yes
					}
				}
			}
		}
		else_if = {
			limit = { is_country_type = civilian_activities has_country_flag = civilian_activities_country }
			if = {
				limit = {
					count_relation = {
						limit = {
							merg_is_default_empire = yes
							is_subject = no
							OR = {
								reverse_has_relation_flag = { who = root flag = civilian_activities_country }
								root = { has_country_flag = is_unique_perk_special_subject_of@prev } # New in v3.14
							}
						}
						count = 0
					}
				}
				destroy_country = yes
			}
			else = {
				if = {
					limit = {
						exists = from
						from = {
							merg_is_default_empire = yes
							OR = {
								reverse_has_relation_flag = { who = root flag = civilian_activities_country }
								root = { has_country_flag = is_unique_perk_special_subject_of@prev } # New in v3.14
							}
						}
					}
					from = { sync_subjects_virtual_relation = yes }
				}
				else = {
					random_relation = {
						limit = {
							merg_is_default_empire = yes
							OR = {
								reverse_has_relation_flag = { who = root flag = civilian_activities_country }
								root = { has_country_flag = is_unique_perk_special_subject_of@prev } # New in v3.14
							}
						}
						sync_subjects_virtual_relation = yes
					}
				}
			}
		}
	}
}

# Remove Special Subject countries from any Federations & Galactic Community & Galactic Council
country_event = {
	id = UniqueAscensionPerksEvents.8789
	hide_window = yes
	# mean_time_to_happen = { months = 4 }
	is_triggered_only = yes
	trigger = {
		is_country_type = global_event
		OR = {
			any_federation = { any_member = { is_unique_perk_special_subject = yes } }
			AND = { is_galactic_community_formed = yes any_playable_country = { is_galactic_community_member = yes is_unique_perk_special_subject = yes } }
			AND = { is_galactic_council_established = yes any_playable_country = { is_part_of_galactic_council = yes is_unique_perk_special_subject = yes } }
		}
	}
	immediate = {
		if = {
			limit = { any_federation = { any_member = { is_unique_perk_special_subject = yes } } }
			every_federation = { limit = { any_member = { is_unique_perk_special_subject = yes } }
				every_member = { limit = { is_unique_perk_special_subject = yes }
					leave_alliance = { override_requirements = yes }
					country_event = { id = UniqueAscensionPerksEvents.8787 days = 3 }
				}
			}
		}
		if = {
			limit = { is_galactic_community_formed = yes }
			if = { limit = { any_playable_country = { is_galactic_community_member = yes is_unique_perk_special_subject = yes } }
				every_playable_country = { limit = { is_galactic_community_member = yes is_unique_perk_special_subject = yes }
					remove_from_galactic_community = yes
					country_event = { id = UniqueAscensionPerksEvents.8787 days = 3 }
				}
			}
			if = {
				limit = { is_galactic_council_established = yes any_playable_country = { is_part_of_galactic_council = yes is_unique_perk_special_subject = yes } }
				every_playable_country = { limit = { is_part_of_galactic_council = yes is_unique_perk_special_subject = yes }
					remove_from_galactic_council = yes
					country_event = { id = UniqueAscensionPerksEvents.8787 days = 3 }
				}
			}
		}
	}
}

# Backup Special Deposits before Terraform (maybe conflicts with similar events).
# From = Terraforming country
planet_event = {
	id = UniqueAscensionPerksEvents.8999
	is_triggered_only = yes
	hide_window = yes
	# mean_time_to_happen = { months = 1 }
	pre_triggers = { has_owner = yes }
	trigger = {
		exists = from
		has_deposit = yes
		from = { OR = { is_gestalt = yes } }
		OR = {
			# Vanilla
			AND = {
				from = { is_hive_empire = yes }
				OR = { has_deposit = d_valley_of_zanaam has_deposit = d_collapsed_burrows has_deposit = d_spawning_complex_blocker }
			}
			has_deposit = d_organic_landfill
			has_deposit = d_central_spire
			has_deposit = d_cryonic_clones
			has_deposit = d_underground_farm
			has_deposit = d_underground_mine
			has_deposit = d_underground_generator
			has_deposit = d_underground_contact_zone
			has_deposit = d_portal_research_zone
			has_deposit = d_portal_research_zone_gestalt
			has_deposit = d_egg_cracking
			# has_deposit = d_the_zone
			# has_deposit = d_ancient_particle_accelerator
			# has_deposit = d_odd_factory
			# has_deposit = d_underground_vault
			# has_deposit = d_underground_vault_2
			## Keept by Vanilla for Machine & Hive
			# has_deposit = d_dust_caverns
			# has_deposit = d_dust_desert
			# has_deposit = d_bubbling_swamp
			# has_deposit = d_fuming_bog
			# has_deposit = d_crystalline_caverns
			# has_deposit = d_crystal_forest
			# has_deposit = d_crystal_reef
			# has_deposit = d_betharian_deposit
			# has_deposit = d_alien_pets_deposit
			## Keept by Vanilla for hive
			# has_deposit = d_tree_of_life_home
			# has_deposit = d_tree_of_life_colony
			# has_deposit = d_lithoid_crater
			# has_deposit = d_progenitor
			# UAP
			AND = {
				from = {
					# is_hive_empire = yes
					OR = { has_ascension_perk = ap_hivemind_reserve has_ascension_perk = ap_pyramidal_society has_country_flag = ap_pyramidal_society }
				}
				OR = {
					has_deposit = d_hivemind_reserve
					has_deposit = d_district_queen
					has_deposit = d_district_nursery
					has_deposit = d_district_entrepot
					has_deposit = d_district_forest
				}
			}
			AND = {
				from = {
					# is_machine_empire = yes
					OR = {
						# has_ascension_perk = ap_robot_command
						has_ascension_perk = ap_pyramidal_society
						has_country_flag = ap_pyramidal_society
					}
				}
				OR = {
					has_deposit = d_district_foundry
					has_deposit = d_district_security
					has_deposit = d_district_upgrade
					# has_deposit = d_district_recycling
				}
			}
		}
	}
	immediate = {
		if = {
			limit = { from = { is_hive_empire = yes } }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_hivemind_reserve		} } variable = d_hivemind_reserve }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_queen		} } variable = d_district_queen }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_nursery		} } variable = d_district_nursery }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_entrepot		} } variable = d_district_entrepot }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_forest		} } variable = d_district_forest }
			# Vanilla
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_valley_of_zanaam				} } variable = d_valley_of_zanaam }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_collapsed_burrows				} } variable = d_collapsed_burrows }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_spawning_complex_blocker		} } variable = d_spawning_complex_blocker }
		}
		else_if = {
			limit = { from = { is_machine_empire = yes } }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_foundry		} } variable = d_district_foundry }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_security		} } variable = d_district_security }
			export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_upgrade		} } variable = d_district_upgrade }
			# export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_district_recycling	} } variable = d_district_recycling }
		}
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_organic_landfill				} } variable = d_organic_landfill }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_central_spire					} } variable = d_central_spire }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_cryonic_clones				} } variable = d_cryonic_clones }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_underground_farm				} } variable = d_underground_farm }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_underground_mine				} } variable = d_underground_mine }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_underground_generator			} } variable = d_underground_generator }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_underground_contact_zone		} } variable = d_underground_contact_zone }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_portal_research_zone			} } variable = d_portal_research_zone }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_portal_research_zone_gestalt	} } variable = d_portal_research_zone_gestalt }
		export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_egg_cracking					} } variable = d_egg_cracking }
		# export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_the_zone						} } variable = d_the_zone }
		# export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_odd_factory					} } variable = d_odd_factory }
		# export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_ancient_particle_accelerator	} } variable = d_ancient_particle_accelerator }
		# export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_underground_vault				} } variable = d_underground_vault }
		# export_trigger_value_to_variable = { trigger = count_deposit parameters = { limit = { is_deposit_type = d_underground_vault_2			} } variable = d_underground_vault_2 }
	}
}

# Reset Special Deposits after Terraform.
# From = Terraforming country
planet_event = {
	id = UniqueAscensionPerksEvents.9000
	is_triggered_only = yes
	hide_window = yes
	# mean_time_to_happen = { months = 1 }
	pre_triggers = { has_owner = yes }
	trigger = {
		exists = from
		from = { OR = { is_gestalt = yes } }
		OR = {
			# Vanilla
			is_variable_set = d_valley_of_zanaam
			is_variable_set = d_collapsed_burrows
			is_variable_set = d_spawning_complex_blocker
			is_variable_set = d_organic_landfill
			is_variable_set = d_central_spire
			is_variable_set = d_cryonic_clones
			is_variable_set = d_underground_farm
			is_variable_set = d_underground_mine
			is_variable_set = d_underground_generator
			is_variable_set = d_underground_contact_zone
			is_variable_set = d_portal_research_zone
			is_variable_set = d_portal_research_zone_gestalt
			is_variable_set = d_egg_cracking
			# is_variable_set = d_the_zone
			# is_variable_set = d_odd_factory
			# is_variable_set = d_ancient_particle_accelerator
			# is_variable_set = d_underground_vault
			# is_variable_set = d_underground_vault_2
			# UAP
			AND = {
				merg_is_hive_world = yes
				from = {
					# is_hive_empire = yes
					OR = { has_ascension_perk = ap_hivemind_reserve has_ascension_perk = ap_pyramidal_society has_country_flag = ap_pyramidal_society }
				}
				OR = {
					is_variable_set = d_hivemind_reserve
					is_variable_set = d_district_queen
					is_variable_set = d_district_nursery
					is_variable_set = d_district_entrepot
					is_variable_set = d_district_forest
				}
			}
			AND = {
				merg_is_machine_world = yes
				from = {
					# is_machine_empire = yes
					OR = {
						# has_ascension_perk = ap_robot_command
						has_ascension_perk = ap_pyramidal_society
						has_country_flag = ap_pyramidal_society
					}
				}
				OR = {
					is_variable_set = d_district_foundry
					is_variable_set = d_district_security
					is_variable_set = d_district_upgrade
					# is_variable_set = d_district_recycling
				}
			}
			# is_planet_class = pc_arcology # TODO WHICH MOD?
		}
		# NOT = { has_planet_flag = mod_deposits_restored }
	}
	immediate = {
		# set_planet_flag = mod_deposits_restored
		if = {
			limit = { merg_is_hive_world = yes }
			if = { limit = { is_variable_set = d_hivemind_reserve	NOT = { has_deposit = d_hivemind_reserve } } while = { count = d_hivemind_reserve	add_deposit = d_hivemind_reserve } clear_variable = d_hivemind_reserve }
			if = { limit = { is_variable_set = d_district_queen		NOT = { has_deposit = d_district_queen } } while = { count = d_district_queen		add_deposit = d_district_queen } clear_variable = d_district_queen }
			if = { limit = { is_variable_set = d_district_nursery	NOT = { has_deposit = d_district_nursery } } while = { count = d_district_nursery	add_deposit = d_district_nursery } clear_variable = d_district_nursery }
			if = { limit = { is_variable_set = d_district_entrepot	NOT = { has_deposit = d_district_entrepot } } while = { count = d_district_entrepot	add_deposit = d_district_entrepot } clear_variable = d_district_entrepot }
			if = { limit = { is_variable_set = d_district_forest	NOT = { has_deposit = d_district_forest } } while = { count = d_district_forest		add_deposit = d_district_forest } clear_variable = d_district_forest }
			# Vanilla
			if = { limit = { is_variable_set = d_valley_of_zanaam	NOT = { has_deposit = d_valley_of_zanaam } } while = { count = d_valley_of_zanaam			add_deposit = d_valley_of_zanaam } clear_variable = d_valley_of_zanaam }
			if = { limit = { is_variable_set = d_collapsed_burrows	NOT = { has_deposit = d_collapsed_burrows } } while = { count = d_collapsed_burrows			add_deposit = d_collapsed_burrows } clear_variable = d_collapsed_burrows }
			if = { limit = { is_variable_set = d_spawning_complex_blocker NOT = { has_deposit = d_spawning_complex_blocker } } while = { count = d_spawning_complex_blocker add_deposit = d_spawning_complex_blocker } clear_variable = d_spawning_complex_blocker }
		}
		else_if = {
			limit = { merg_is_machine_world = yes }
			if = { limit = { is_variable_set = d_district_foundry	NOT = { has_deposit = d_district_foundry } } while = { count = d_district_foundry	add_deposit = d_district_foundry } clear_variable = d_district_foundry }
			if = { limit = { is_variable_set = d_district_security	NOT = { has_deposit = d_district_security } } while = { count = d_district_security	add_deposit = d_district_security } clear_variable = d_district_security }
			if = { limit = { is_variable_set = d_district_upgrade	NOT = { has_deposit = d_district_upgrade } } while = { count = d_district_upgrade	add_deposit = d_district_upgrade } clear_variable = d_district_upgrade }
			# if = { limit = { is_variable_set = d_district_recycling	NOT = { has_deposit = d_district_recycling } } while = { count = d_district_recycling	add_deposit = d_district_recycling } clear_variable = d_district_recycling }
		}
		if = { limit = { is_variable_set = d_organic_landfill		NOT = { has_deposit = d_organic_landfill } } while = { count = d_organic_landfill	add_deposit = d_organic_landfill } clear_variable = d_organic_landfill }
		if = { limit = { is_variable_set = d_central_spire			NOT = { has_deposit = d_central_spire } } while = { count = d_central_spire				add_deposit = d_central_spire } clear_variable = d_central_spire }
		if = { limit = { is_variable_set = d_cryonic_clones			NOT = { has_deposit = d_cryonic_clones } } while = { count = d_cryonic_clones				add_deposit = d_cryonic_clones } clear_variable = d_cryonic_clones }
		if = { limit = { is_variable_set = d_underground_farm		NOT = { has_deposit = d_underground_farm } } while = { count = d_underground_farm			add_deposit = d_underground_farm } clear_variable = d_underground_farm }
		if = { limit = { is_variable_set = d_underground_mine		NOT = { has_deposit = d_underground_mine } } while = { count = d_underground_mine			add_deposit = d_underground_mine } clear_variable = d_underground_mine }
		if = { limit = { is_variable_set = d_underground_generator	NOT = { has_deposit = d_underground_generator } } while = { count = d_underground_generator	add_deposit = d_underground_generator } clear_variable = d_underground_generator }
		if = { limit = { is_variable_set = d_underground_contact_zone NOT = { has_deposit = d_underground_contact_zone } } while = { count = d_underground_contact_zone	add_deposit = d_underground_contact_zone } clear_variable = d_underground_contact_zone }
		if = { limit = { is_variable_set = d_portal_research_zone	NOT = { has_deposit = d_portal_research_zone } } while = { count = d_portal_research_zone	add_deposit = d_portal_research_zone_gestalt } clear_variable = d_portal_research_zone }
		if = { limit = { is_variable_set = d_portal_research_zone_gestalt NOT = { has_deposit = d_portal_research_zone_gestalt } } while = { count = d_portal_research_zone_gestalt add_deposit = d_portal_research_zone_gestalt } clear_variable = d_portal_research_zone_gestalt }
		if = { limit = { is_variable_set = d_egg_cracking			NOT = { has_deposit = d_egg_cracking } } while = { count = d_egg_cracking				add_deposit = d_egg_cracking } clear_variable = d_egg_cracking }
		# if = { limit = { is_variable_set = d_the_zone	NOT = { has_deposit = d_the_zone } } while = { count = d_the_zone					add_deposit = d_the_zone } clear_variable = d_the_zone }
		# if = { limit = { is_variable_set = d_odd_factory	NOT = { has_deposit = d_odd_factory } } while = { count = d_odd_factory					add_deposit = d_odd_factory } clear_variable = d_odd_factory }
		# if = { limit = { is_variable_set = d_ancient_particle_accelerator	NOT = { has_deposit = d_ancient_particle_accelerator } } while = { count = d_ancient_particle_accelerator add_deposit = d_ancient_particle_accelerator } clear_variable = d_ancient_particle_accelerator }
		# if = { limit = { is_variable_set = d_underground_vault	NOT = { has_deposit = d_underground_vault } } while = { count = d_underground_vault			add_deposit = d_underground_vault } clear_variable = d_underground_vault }
		# if = { limit = { is_variable_set = d_underground_vault_2	NOT = { has_deposit = d_underground_vault_2 } } while = { count = d_underground_vault_2		add_deposit = d_underground_vault_2 } clear_variable = d_underground_vault_2 }
	}
}

######################################
#									 #
######## Expandable Knowledge ########
#									 #
######################################
# on_ascension_perk_picked (FALLBACKS)
country_event = {
	id = UniqueAscensionPerksEvents.30
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		merg_is_default_empire = yes
		has_ascension_perk = ap_transcendent_learning
		NOR = { has_ascension_perk = ap_expandable_brain_1 has_country_flag = ap_transcendent_learning_project }
	}
	immediate = {
		# These were former on_yearly_pulse
		# random_playable_country = {
		##	limit = { has_ascension_perk = ap_expandable_brain_2 any_owned_leader = { num_traits < 3 } }
		#	every_owned_leader = { limit = { num_traits < 3 } BR_add_random_leader_trait = yes }
		#}
		# random_playable_country = {
		# 	limit = { has_ascension_perk = ap_expandable_brain_2 NOT = { has_country_flag = ap_expandable_brain_2_project } }
		# 	country_event = { id = UniqueAscensionPerksEvents.3038 days = 30 random = 70 }
		# }
		# random_playable_country = {
		# 	limit = { has_ascension_perk = ap_expandable_brain_2 has_country_flag = ap_expandable_brain_2_project_completed NOT = { has_country_flag = ap_expandable_brain_2_project_2 } }
		# 	country_event = { id = UniqueAscensionPerksEvents.3040 }
		# }
		# random_playable_country = {
		# 	limit = { has_ascension_perk = ap_transcendent_learning NOT = { has_country_flag = ap_transcendent_learning_project } }
		# 	country_event = { id = UniqueAscensionPerksEvents.31 days = 2 random = 5 }
		# }
		country_event = { id = UniqueAscensionPerksEvents.31 days = 30 random = 70 }
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.31
	title = "UniqueAscensionPerksEvents.31.Name"
	desc = "UniqueAscensionPerksEvents.31.Desc"
	show_sound = event_engineered_evolution
	picture = GFX_evt_expandable_brain_1
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = {
		NOR = { has_ascension_perk = ap_expandable_brain_1 has_country_flag = ap_transcendent_learning_project }
	}
	immediate = { get_capital_planet = yes set_country_flag = ap_transcendent_learning_project }
	option = { name = EXCELLENT enable_special_project = { name = EXPANDABLE_BRAIN_1 location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.32
	title = "expandable_brain_1"
	desc = "UniqueAscensionPerksEvents.32.Desc"
	show_sound = event_engineered_evolution
	picture = GFX_evt_expandable_brain_1
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = {
		name = EXCELLENT
		custom_tooltip = "ALLOW_LEADER_MIN_LVL_2"
		add_modifier = { modifier = expandable_brain_1 }
		hidden_effect = {
			every_owned_leader = { limit = { has_skill < 2 } set_skill = 2 }
			every_pool_leader = { limit = { has_skill < 2 } set_skill = 2 }
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.33
	title = "ap_expandable_brain_1"
	desc = "ap_expandable_brain_1_desc"
	show_sound = event_psionic
	picture = GFX_evt_expandable_brain_2
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = {
		name = EXCELLENT
		custom_tooltip = "ALLOW_LEADER_MIN_LVL_3"
		custom_tooltip = "ALLOW_LEADER_MIN_TRAIT_2"
		add_research_option = tech_expandable_brain_1
		hidden_effect = {
			every_owned_leader = { if = { limit = { has_skill < 3 } set_skill = 3 } BR_add_random_leader_trait = yes }
			every_pool_leader = { if = { limit = { has_skill < 3 } set_skill = 3 } BR_add_random_leader_trait = yes }
		}
	}
}
# on_tech_increased
country_event = {
	id = UniqueAscensionPerksEvents.34
	title = "tech_expandable_brain_1"
	desc = "UniqueAscensionPerksEvents.34.Desc"
	show_sound = event_psionic
	picture = GFX_evt_expandable_brain_3
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = {
		merg_is_default_empire = yes
		last_increased_tech = tech_expandable_brain_1
		NOT = { has_country_flag = tech_expandable_brain_1_project }
	}
	immediate = { set_country_flag = tech_expandable_brain_1_project get_capital_planet = yes }
	option = {
		name = EXCELLENT
		enable_special_project = { name = EXPANDABLE_BRAIN_2 location = event_target:capital_planet owner = root }
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.35
	title = "expandable_brain_2"
	desc = "UniqueAscensionPerksEvents.35.Desc"
	show_sound = event_psionic
	picture = GFX_evt_expandable_brain_4
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = {
		name = EXCELLENT
		custom_tooltip = "ALLOW_LEADER_MIN_LVL_4"
		add_modifier = { modifier = expandable_brain_2 }
		add_research_option = tech_expandable_brain_2
		hidden_effect = {
			every_owned_leader	= { limit = { has_skill < 4 } set_skill = 3 add_skill_without_trait_selection = 1 } # prev = { country_event = { id = paragon_2.2095 scopes = { from = prev } } }
			every_pool_leader	= { limit = { has_skill < 4 } set_skill = 3 add_skill_without_trait_selection = 1 } # prev = { country_event = { id = paragon_2.2095 scopes = { from = prev } } }
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.36
	title = "tech_expandable_brain_2"
	desc = "UniqueAscensionPerksEvents.36.Desc"
	show_sound = event_psionic
	picture = GFX_evt_expandable_brain_5
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = {
		merg_is_default_empire = yes
		last_increased_tech = tech_expandable_brain_2
		NOT = { has_country_flag = tech_expandable_brain_2_project }
	}
	immediate = { get_capital_planet = yes set_country_flag = tech_expandable_brain_2_project }
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.37
	title = "ap_expandable_brain_2"
	desc = "ap_expandable_brain_2_desc"
	show_sound = event_psionic
	picture = GFX_evt_expandable_brain_6
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = {
		get_capital_planet = yes
		while = { count = 3
			limit = { any_owned_leader = { has_skill < 5 } }
			random_owned_leader	= { if = { limit = { has_skill < 5 exists = species species = { is_sapient = yes } } set_skill = 3 add_skill_without_trait_selection = 2 } BR_add_random_leader_trait = yes } # prev = { country_event = { id = paragon_2.2095 scopes = { from = prev } } }
		}
	}
	after = {
		hidden_effect = {
			country_event = { id = UniqueAscensionPerksEvents.3038 days = 30 random = 70 }
			while = { count = 3
				limit = { any_pool_leader = { has_skill < 5 } }
				random_pool_leader	= { if = { limit = { has_skill < 5 exists = species species = { is_sapient = yes } } set_skill = 3 add_skill_without_trait_selection = 2 } BR_add_random_leader_trait = yes } # prev = { country_event = { id = paragon_2.2095 scopes = { from = prev } } }
			}
		}
	}
	option = { name = "UniqueAscensionPerksEvents.37.Offense"		add_modifier = { modifier = expandable_brain_3_offense } custom_tooltip = "ALLOW_LEADER_MIN_LVL_5" custom_tooltip = "ALLOW_LEADER_MIN_TRAIT_3" }
	option = { name = "UniqueAscensionPerksEvents.37.Expansion"		add_modifier = { modifier = expandable_brain_3_expansion } custom_tooltip = "ALLOW_LEADER_MIN_LVL_5" custom_tooltip = "ALLOW_LEADER_MIN_TRAIT_3" }
	option = { name = "UniqueAscensionPerksEvents.37.Construction"	add_modifier = { modifier = expandable_brain_3_construction } custom_tooltip = "ALLOW_LEADER_MIN_LVL_5" custom_tooltip = "ALLOW_LEADER_MIN_TRAIT_3" }
	option = { name = "UniqueAscensionPerksEvents.37.Production"	add_modifier = { modifier = expandable_brain_3_production } custom_tooltip = "ALLOW_LEADER_MIN_LVL_5" custom_tooltip = "ALLOW_LEADER_MIN_TRAIT_3" }
}

country_event = {
	id = UniqueAscensionPerksEvents.3038
	title = "EXPANDABLE_BRAIN_3"
	desc = "EXPANDABLE_BRAIN_3_DESC"
	show_sound = event_engineered_evolution
	picture = GFX_evt_expandable_brain_6
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = { has_ascension_perk = ap_expandable_brain_2 NOT = { has_country_flag = ap_expandable_brain_2_project } }
	immediate = { set_country_flag = ap_expandable_brain_2_project get_capital_planet = yes }
	option = { name = EXCELLENT enable_special_project = { name = EXPANDABLE_BRAIN_3 location = event_target:capital_planet owner = root } }
}

# Final EXPANDABLE_BRAIN_3
country_event = {
	id = UniqueAscensionPerksEvents.3039
	title = "EXPANDABLE_BRAIN_3"
	desc = "UniqueAscensionPerksEvents.3039.Desc"
	show_sound = event_psionic
	picture = GFX_evt_expandable_brain_6
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = {
		get_capital_planet = yes
		# set_country_flag = ap_expandable_brain_2_project_completed
		if = {
			limit = { NOT = { has_country_flag = ap_expandable_brain_2_project_2 } }
			country_event = { id = UniqueAscensionPerksEvents.3040 days = 60 random = 300 }
		}
	}
	after = {
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.3038 days = 90 random = 150 } }
	}
	option = { name = "UniqueAscensionPerksEvents.37.Offense"		allow = { NOT = { has_modifier = expandable_brain_3_offense } }	add_modifier = { modifier = expandable_brain_3_offense } }
	option = { name = "UniqueAscensionPerksEvents.37.Expansion"		allow = { NOT = { has_modifier = expandable_brain_3_expansion } }	add_modifier = { modifier = expandable_brain_3_expansion } }
	option = { name = "UniqueAscensionPerksEvents.37.Construction"	allow = { NOT = { has_modifier = expandable_brain_3_construction } }	add_modifier = { modifier = expandable_brain_3_construction } }
	option = { name = "UniqueAscensionPerksEvents.37.Production"	allow = { NOT = { has_modifier = expandable_brain_3_production } }	add_modifier = { modifier = expandable_brain_3_production } }
}

country_event = {
	id = UniqueAscensionPerksEvents.3040
	title = "EXPANDABLE_BRAIN_4"
	desc = "EXPANDABLE_BRAIN_4_DESC"
	show_sound = event_engineered_evolution
	picture = GFX_evt_expandable_brain_6
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = {
		has_ascension_perk = ap_expandable_brain_2
		# has_country_flag = ap_expandable_brain_2_project_completed
		NOT = { has_country_flag = ap_expandable_brain_2_project_2 }
	}
	immediate = { get_capital_planet = yes set_country_flag = ap_expandable_brain_2_project_2 }
	option = { name = EXCELLENT enable_special_project = { name = EXPANDABLE_BRAIN_4 location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.3041
	title = "EXPANDABLE_BRAIN_4"
	desc = "UniqueAscensionPerksEvents.3041.Desc"
	show_sound = event_psionic
	picture = GFX_evt_expandable_brain_6
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes set_country_flag = ap_expandable_brain_3_project_completed }
	option = { name = "UniqueAscensionPerksEvents.37.Offense"		allow = { NOT = { has_modifier = expandable_brain_3_offense } }	add_modifier = { modifier = expandable_brain_3_offense } }
	option = { name = "UniqueAscensionPerksEvents.37.Expansion"		allow = { NOT = { has_modifier = expandable_brain_3_expansion } }	add_modifier = { modifier = expandable_brain_3_expansion } }
	option = { name = "UniqueAscensionPerksEvents.37.Construction"	allow = { NOT = { has_modifier = expandable_brain_3_construction } }	add_modifier = { modifier = expandable_brain_3_construction } }
	option = { name = "UniqueAscensionPerksEvents.37.Production"	allow = { NOT = { has_modifier = expandable_brain_3_production } }	add_modifier = { modifier = expandable_brain_3_production } }
}
# on_leader_spawned
country_event = {
	id = UniqueAscensionPerksEvents.39
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		OR = {
			has_global_flag = ap_expandable_brain_2
			has_modifier = expandable_brain_1
			has_modifier = expandable_brain_2
			has_ascension_perk = ap_expandable_brain_1
			has_ascension_perk = ap_expandable_brain_2
		}
	}
	immediate = {
		# TODO needs test?
		if = { limit = { OR = { has_modifier = expandable_brain_1 has_global_flag = ap_expandable_brain_2 } from = { has_skill < 2 } } from = { set_skill = 2 } }
		if = { limit = { OR = { has_ascension_perk = ap_expandable_brain_1 has_global_flag = ap_expandable_brain_2 } from = { has_skill < 3 } } from = { set_skill = 3 BR_add_random_leader_trait = yes } }
		if = { limit = { OR = { has_modifier = expandable_brain_2 has_global_flag = ap_expandable_brain_2 } from = { has_skill < 4 } } from = { set_skill = 3 add_skill_without_trait_selection = 1 } } # country_event = { id = paragon_2.2095 scopes = { from = from } }
		if = { limit = { OR = { has_ascension_perk = ap_expandable_brain_2 has_global_flag = ap_expandable_brain_2 } from = { has_skill < 5 } } from = { set_skill = 3 add_skill_without_trait_selection = 2 BR_add_random_leader_trait = yes } } # country_event = { id = paragon_2.2095 scopes = { from = from } }
	}
}

######################################
#									 #
############ Nano Drones ###########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.40
	title = "ap_nano_drones"
	desc = "ap_nano_drones_desc"
	show_sound = event_ai_started
	picture = GFX_evt_nano_workers
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = {
		name = EXCELLENT
		give_tech_option_or_progress_effect = { TECH = tech_auto_drone }
		add_resource = { automatic_drone = 3000 }
		generate_lcluster_clue = yes
	}
}

# on_half_yearly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.8041
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 2 }
	trigger = {
		has_ascension_perk = ap_nano_drones
		OR = { has_country_flag = nano_auto_upgrade has_country_flag = nano_resource_replacement }
		has_country_resource = { type = automatic_drone amount > 200 }
	}
	immediate = {
		if = {
			limit = { has_country_flag = ap_nano_drones_pulse }
			if = { limit = { has_ascension_perk = ap_nano_to_nanite }
				random = { chance = 50 remove_country_flag = ap_nano_drones_pulse }
			}
			else = { remove_country_flag = ap_nano_drones_pulse }

			if = {
				limit = { has_country_flag = nano_auto_upgrade has_country_resource = { type = automatic_drone amount > 200 } }
				random_owned_planet = {
					limit = { is_colony = yes is_colonizable = no }
					while = { count = 3
						# nano_drones_auto_upgrade = yes
						random_list = {
							1 = {}
							999 = { modifier = { factor = 0 NOT = { has_building = building_auto_power_plant_1 } } remove_building = building_auto_power_plant_1 add_building = building_auto_power_plant_2 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_power_plant_2 owner = { has_technology = tech_power_plant_3 } } } remove_building = building_auto_power_plant_2 add_building = building_auto_power_plant_3 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_power_plant_3 has_upgraded_capital = yes owner = { has_technology = tech_power_plant_3 } } } remove_building = building_auto_power_plant_3 add_building = building_auto_power_plant_4 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_power_plant_4 has_major_upgraded_capital = yes owner = { has_technology = tech_power_plant_4 } } } remove_building = building_auto_power_plant_4 add_building = building_auto_power_plant_5 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NOT = { has_building = building_auto_farming_complex_1 } } remove_building = building_auto_farming_complex_1 add_building = building_auto_farming_complex_2 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_farming_complex_2 owner = { has_technology = tech_gene_crops } } } remove_building = building_auto_farming_complex_2 add_building = building_auto_farming_complex_3 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_farming_complex_3 has_upgraded_capital = yes owner = { has_technology = tech_gene_crops } } } remove_building = building_auto_farming_complex_3 add_building = building_auto_farming_complex_4 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_farming_complex_4 has_major_upgraded_capital = yes owner = { has_technology = tech_nano_vitality_crops } } } remove_building = building_auto_farming_complex_4 add_building = building_auto_farming_complex_5 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NOT = { has_building = building_auto_mining_complex_1 } } remove_building = building_auto_mining_complex_1 add_building = building_auto_mining_complex_2 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_mining_complex_2 owner = { has_technology = tech_mining_2 } } } remove_building = building_auto_mining_complex_2 add_building = building_auto_mining_complex_3 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_mining_complex_3 has_upgraded_capital = yes owner = { has_technology = tech_mining_2 } } } remove_building = building_auto_mining_complex_3 add_building = building_auto_mining_complex_4 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_mining_complex_4 has_major_upgraded_capital = yes owner = { has_technology = tech_mining_3 } } } remove_building = building_auto_mining_complex_4 add_building = building_auto_mining_complex_5 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NOT = { has_building = building_auto_physics_campus_1 } } remove_building = building_auto_physics_campus_1 add_building = building_auto_physics_campus_2 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_physics_campus_2 owner = { has_technology = tech_cryostasis_2 } } } remove_building = building_auto_physics_campus_2 add_building = building_auto_physics_campus_3 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_physics_campus_3 has_upgraded_capital = yes owner = { has_technology = tech_cryostasis_2 } } } remove_building = building_auto_physics_campus_3 add_building = building_auto_physics_campus_4 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_physics_campus_4 has_major_upgraded_capital = yes owner = { has_technology = tech_combat_computers_3 } } } remove_building = building_auto_physics_campus_4 add_building = building_auto_physics_campus_5 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NOT = { has_building = building_auto_sociological_campus_1 } } remove_building = building_auto_sociological_campus_1 add_building = building_auto_sociological_campus_2 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_sociological_campus_2 owner = { has_technology = tech_colonization_3 } } } remove_building = building_auto_sociological_campus_2 add_building = building_auto_sociological_campus_3 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_sociological_campus_3 has_upgraded_capital = yes owner = { has_technology = tech_colonization_3 } } } remove_building = building_auto_sociological_campus_3 add_building = building_auto_sociological_campus_4 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_sociological_campus_4 has_major_upgraded_capital = yes owner = { has_technology = tech_colonization_4 } } } remove_building = building_auto_sociological_campus_4 add_building = building_auto_sociological_campus_5 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NOT = { has_building = building_auto_engineering_campus_1 } } remove_building = building_auto_engineering_campus_1 add_building = building_auto_engineering_campus_2 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_engineering_campus_2 owner = { has_technology = tech_space_mining_4 } } } remove_building = building_auto_engineering_campus_2 add_building = building_auto_engineering_campus_3 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_engineering_campus_3 has_upgraded_capital = yes owner = { has_technology = tech_space_mining_4 } } } remove_building = building_auto_engineering_campus_3 add_building = building_auto_engineering_campus_4 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_engineering_campus_4 has_major_upgraded_capital = yes owner = { has_technology = tech_advanced_metallurgy_2 } } } remove_building = building_auto_engineering_campus_4 add_building = building_auto_engineering_campus_5 owner = { add_resource = { automatic_drone = -200 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_nanite_facility_1 has_upgraded_capital = yes owner = { has_ascension_perk = ap_nano_to_nanite has_country_resource = { type = automatic_drone amount >= 400 } } } } remove_building = building_nanite_facility_1 add_building = building_nanite_facility_2 owner = { add_resource = { automatic_drone = -400 } } }
							999 = { modifier = { factor = 0 NAND = { has_building = building_nanite_facility_2 has_major_upgraded_capital = yes owner = { has_ascension_perk = ap_nano_to_nanite has_country_resource = { type = automatic_drone amount >= 400 } } } } remove_building = building_nanite_facility_2 add_building = building_nanite_facility_3 owner = { add_resource = { automatic_drone = -400 } } }
							999 = {
								modifier = { factor = 0 NOT = { has_building = building_auto_drone_facility_1 } }
								random_list = {
									1 = {}
									100 = { modifier = { factor = 0 has_upgraded_capital = no } remove_building = building_auto_drone_facility_1 add_building = building_auto_drone_facility_2 owner = { add_resource = { automatic_drone = -200 } } }
									10 = { modifier = { factor = 0 owner = { NOT = { has_technology = tech_power_plant_2 } } } remove_building = building_auto_drone_facility_1 add_building = building_auto_power_plant_1 owner = { add_resource = { automatic_drone = -200 } } }
									10 = { modifier = { factor = 0 owner = { NOT = { has_technology = tech_mining_1 } } } remove_building = building_auto_drone_facility_1 add_building = building_auto_farming_complex_1 owner = { add_resource = { automatic_drone = -200 } } }
									10 = { modifier = { factor = 0 owner = { NOT = { has_technology = tech_eco_simulation } } } remove_building = building_auto_drone_facility_1 add_building = building_auto_farming_complex_1 owner = { add_resource = { automatic_drone = -200 } } }
									10 = { modifier = { factor = 0 owner = { NOT = { has_technology = tech_administrative_ai } } } remove_building = building_auto_drone_facility_1 add_building = building_auto_physics_campus_1 owner = { add_resource = { automatic_drone = -200 } } }
									10 = { modifier = { factor = 0 owner = { NOT = { has_technology = tech_colonization_3 } } } remove_building = building_auto_drone_facility_1 add_building = building_auto_sociological_campus_1 owner = { add_resource = { automatic_drone = -200 } } }
									10 = { modifier = { factor = 0 owner = { NOT = { has_technology = tech_space_mining_4 } } } remove_building = building_auto_drone_facility_1 add_building = building_auto_engineering_campus_1 owner = { add_resource = { automatic_drone = -200 } } }
									20 = { modifier = { factor = 0 owner = { NOR = { has_ascension_perk = ap_nano_to_nanite has_country_resource = { type = automatic_drone amount > 400 } } } } remove_building = building_auto_drone_facility_1 add_building = building_auto_engineering_campus_1 owner = { add_resource = { automatic_drone = -400 } } }
								}
							}
							999 = { modifier = { factor = 0 NAND = { has_building = building_auto_drone_facility_2 has_major_upgraded_capital = yes } } remove_building = building_auto_drone_facility_2 add_building = building_auto_drone_facility_3 owner = { add_resource = { automatic_drone = -400 } } }
						}
					}
				}
			}
			# Perfect Resource Replacement: if empire (or sector?) is running low of any strategic resources.
			if = {
				limit = { has_country_flag = nano_resource_replacement has_country_resource = { type = automatic_drone amount > 200 } }
				random_list = {
					1 = {}
					99 = { modifier = { factor = 0 NOR = { has_technology = tech_mine_volatile_motes	has_country_resource = { type = volatile_motes	amount = 12 } } } add_resource = { volatile_motes	= 10	automatic_drone = -100 } }
					99 = { modifier = { factor = 0 NOR = { has_technology = tech_mine_rare_crystals		has_country_resource = { type = rare_crystals	amount = 12 } } } add_resource = { rare_crystals	= 10	automatic_drone = -100 } }
					99 = { modifier = { factor = 0 NOR = { has_technology = tech_mine_exotic_gases		has_country_resource = { type = exotic_gases	amount = 12 } } } add_resource = { exotic_gases		= 10	automatic_drone = -100 } }
					99 = { modifier = { factor = 0 NOR = { has_technology = tech_mine_zro				has_country_resource = { type = sr_zro			amount = 12 } } } add_resource = { sr_zro			= 10	automatic_drone = -100 } }
					99 = { modifier = { factor = 0 NOR = { has_technology = tech_mine_living_metal		has_country_resource = { type = sr_living_metal	amount = 12 } } } add_resource = { sr_living_metal	= 10	automatic_drone = -100 } }
					99 = { modifier = { factor = 0 NOR = { has_technology = tech_mine_dark_matter		has_country_resource = { type = sr_dark_matter	amount = 12 } } } add_resource = { sr_dark_matter	= 10	automatic_drone = -100 } }
					99 = { modifier = { factor = 0 NOR = { has_country_flag = ap_nano_to_nanite_project	has_country_resource = { type = nanites			amount = 12 } } } add_resource = { nanites			= 10	automatic_drone = -100 } }
				}
			}
		}
		else = { set_country_flag = ap_nano_drones_pulse } # Only each 2nd
	}
}

######################################
#									 #
######### Nanite Composition #########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.8001
	title = "ap_nano_to_nanite"
	desc = "ap_nano_to_nanite_desc"
	show_sound = event_ai_started
	picture = GFX_evt_nano_to_nanite
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = {
		name = EXCELLENT
		enable_special_project = { name = NANITES_SHIP_SECTION location = event_target:capital_planet owner = root }
		add_research_option = tech_nanite_transmutation
		add_research_option = tech_nanite_repair_system
		generate_lcluster_clue = yes
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.8002
	title = "NANITES_SHIP_SECTION"
	desc = "UniqueAscensionPerksEvents.8002.Desc"
	show_sound = event_ai_started
	picture = GFX_evt_nano_to_nanite
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes set_country_flag = ap_nano_to_nanite_project }
	option = {
		name = EXCELLENT
		add_resource = { nanites = 2500 }
		add_research_option = tech_nanite_ship_section
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.8003
	title = "UniqueAscensionPerksEvents.8003.Name"
	desc = "UniqueAscensionPerksEvents.8003.Desc"
	picture = GFX_evt_l-gateway
	show_sound = event_mystic_reveal
	location = from
	is_triggered_only = yes
	# immediate = { from = { save_event_target_as = gateway_system } }
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.8004
	title = "nanite_factory_site"
	desc = "UniqueAscensionPerksEvents.8004.Desc"
	picture = GFX_evt_gray_goo_ships
	show_sound = event_mystic_reveal
	location = from
	is_triggered_only = yes
	# immediate = { from = { save_event_target_as = gateway_system } }
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.8005
	title = "NAME_Nanite_Factory"
	desc = "UniqueAscensionPerksEvents.8005.Desc"
	picture = GFX_evt_gray_goo_ships
	show_sound = event_think_tank_build_upgrade
	location = from
	is_triggered_only = yes
	# immediate = { from = { save_event_target_as = gateway_system } }
	option = { name = EXCELLENT }
}

######################################
#									 #
####### Advanced Colonisation ########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.43
	title = "ap_adv_colonisation"
	desc = "ap_adv_colonisation_desc"
	show_sound = event_ship_thrusters
	picture = GFX_evt_adv_colonisation
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT }
}

# on_colonized
planet_event = {
	id = UniqueAscensionPerksEvents.44
	hide_window = yes
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	trigger = { exists = owner owner = { has_ascension_perk = ap_adv_colonisation } }
	immediate = { set_advanced_colony = yes }
}

######################################
#									 #
####### Expansion of Infinity ########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.45
	title = "ap_expansion_infinity"
	desc = "ap_expansion_infinity_desc"
	show_sound = event_cityscape
	picture = GFX_evt_expansion_infinity
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT add_resource = { unity = 5000 } }
}

planet_event = {
	id = UniqueAscensionPerksEvents.46
	title = "UniqueAscensionPerksEvents.46.Name"
	desc = "UniqueAscensionPerksEvents.46.Desc"
	show_sound = event_administrative_work
	picture = GFX_evt_expansion_infinity
	location = this # event_target:ap_expansion_infinity_planet
	is_triggered_only = yes
	option = { name = EXCELLENT }
	option = { name = "UniqueAscensionPerks.no_message"
		from = { set_country_flag = ap_expansion_infinity_collection_no_warning }
		custom_tooltip = "UniqueAscensionPerks.no_message.tooltip"
	}
}

# on_yearly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.8000
	hide_window = yes
	# mean_time_to_happen = { months = 9 }
	is_triggered_only = yes
	# trigger = {
	# 	has_ascension_perk = ap_expansion_infinity
	# 	any_owned_planet = {
	# 		NOT = { has_planet_flag = ap_expansion_infinity_collection }
	# 		colony_age > 2
	# 		num_pops > 10
	# 		count_owned_pop = { count > 10 limit = { has_job = yes } }
	# 	}
	# }
	immediate = {
		random_owned_planet = {
			limit = {
				NOT = { has_planet_flag = ap_expansion_infinity_collection }
				colony_age > 2
				num_pops > 10
				count_owned_pop = { count > 10 limit = { has_job = yes } }
			}
			# save_event_target_as = ap_expansion_infinity_planet
			set_timed_planet_flag = { flag = ap_expansion_infinity_collection years = 6 }
			surgical_strike_resources = yes
			if = {
				limit = { root = { NOR = { is_ai = yes has_country_flag = ap_expansion_infinity_collection_no_warning } } }
				planet_event = { id = UniqueAscensionPerksEvents.46 }
			}
		}
	}
}

######################################
#									 #
####### Emergency Calculation ########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.53
	title = "ap_emergency_calculation"
	desc = "ap_emergency_calculation_desc"
	show_sound = event_ship_thrusters
	picture = GFX_evt_emergency_calculation
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT generate_lcluster_clue = yes add_research_option = tech_jump_drive_1 }
	after = {
		give_tech_no_error_effect = { TECH = tech_lgate_activation MESSAGE = yes }
		if = {
			limit = { can_research_technology = tech_lgate_construction }
			add_research_option = tech_lgate_construction
		}
	}
}

# on_build_complete lgate
country_event = {
	id = UniqueAscensionPerksEvents.8054
	title = "UniqueAscensionPerksEvents.8054.Name"
	desc = "UniqueAscensionPerksEvents.8054.Desc"
	picture = GFX_evt_drifting_gateway
	show_sound = event_mystic_reveal
	location = from
	is_triggered_only = yes
	# immediate = { from = { save_event_target_as = gateway_system } }
	option = { name = EXCELLENT }
}

######################################
#									 #
######## Economic Prosperity #########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.54
	title = "ap_economic_prospertity"
	desc = "ap_economic_prospertity_desc"
	show_sound = event_galactic_market
	picture = GFX_evt_financial_instruments
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT }
}

######################################
#									 #
####### Security Strike Forces #######
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.55
	title = "ap_advanced_security"
	desc = "ap_advanced_security_desc"
	show_sound = event_public_unrest
	picture = GFX_evt_security_forces
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT add_resource = { unity = 1000 } }
}

# Attack System Intruder (on_monthly_pulse_country)
country_event = {
	id = UniqueAscensionPerksEvents.56
	title = "UniqueAscensionPerksEvents.56.Name"
	desc = "UniqueAscensionPerksEvents.56.Desc"
	show_sound = event_public_unrest
	picture = GFX_evt_security_forces
	is_triggered_only = yes
	# mean_time_to_happen = { months = 1 }
	location = event_target:spawn_location_system
	trigger = {
		NOT = { has_active_event = { UniqueAscensionPerksEvents.56 } }
	}
	immediate = {
		# DEPLOY_SECURY_STRIKE_FORCES
		create_security_forces_country = yes
		random_system_within_border = {
			limit = {
				is_in_frontier_space = no
				has_trade_route = yes
				trade_protected_value >= 1
				NOT = { has_star_flag = recent_security_strike_force }
				any_fleet_in_system = {
					exists = owner
					owner = {
						NOT = { is_same_empire = root }
						OR = { is_pirate_country = yes is_crisis_faction = yes is_hostile = root }
					}
				}
			}
			save_event_target_as = spawn_location_system
			set_timed_star_flag = { flag = recent_security_strike_force years = 1 }
			if = {
				limit = {
					any_fleet_in_system = {
						exists = owner
						owner = { is_country_type = security_forces }
					}
				}
				random_fleet_in_system = {
					limit = {
						exists = owner
						is_disabled = yes
						is_in_combat = no
						owner = { is_country_type = security_forces }
					}
					every_owned_ship = { set_disabled = no }
					set_event_locked = no
					if = {
						limit = { num_ships < 10 }
						create_ship = { name = random random_existing_design = corvette }
					}
					set_fleet_stance = aggressive
					save_event_target_as = security_fleet
				}
			}
			else = {
				create_fleet = {
					name = ap_advanced_security
					settings = {
						garrison = yes
						can_disband = no
						can_upgrade = no
						can_change_composition = no
						can_change_leader = no
						uses_naval_capacity = no
						spawn_debris = no
						ai_ignore_strength = yes
					}
					effect = {
						set_owner = root
						while = { count = 10 create_ship = { name = random random_existing_design = corvette } }
						while = { count = 10 random = { chance = 50 create_ship = { name = random random_existing_design = corvette } } }
						set_location = { target = event_target:spawn_location_system.star distance = 325 angle = random }
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 5000
						save_event_target_as = security_fleet
					}
				}
				event_target:security_fleet = { set_owner = event_target:security_forces_country }
			}
		}
	}
	option = {
		name = OK
		hidden_effect = {
			if = { # Deactivate fleet
				limit = { exists = event_target:security_fleet }
				event_target:security_fleet = { fleet_event = { id = UniqueAscensionPerksEvents.57 days = 180 } }
			}
		}
	}
}

fleet_event = {
	id = UniqueAscensionPerksEvents.57
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		exists = owner
		exists = solar_system
		is_disabled = no
		is_in_combat = no
	}
	immediate = {
		if = {
			limit = {
				solar_system = {
					NAND = {
						has_owner = yes
						exists = starbase
						exists = starbase.owner
						starbase.owner = { has_ascension_perk = ap_advanced_security }
						is_in_frontier_space = no
					}
				}
			}
			destroy_fleet = this
		}
		else = {
			set_fleet_stance = passive
			if = {
				limit = { num_ships < 10 }
				# random_existing_design = corvette TODO not exists
				random_owned_ship = {
					limit = { is_ship_size = corvette }
					prev = { create_ship = { name = random design = prev } }
				}
			}
			set_event_locked = yes
			every_owned_ship = { set_disabled = yes }
		}
	}
	after = {
		# Deactivate all (self loop)
		owner = {
			random_owned_fleet = {
				limit = {
					NOR = {
						# is_same_value = root
						is_disabled = yes
						is_in_combat = yes
						solar_system = { has_star_flag = recent_security_strike_force }
					}
				}
				fleet_event = { id = UniqueAscensionPerksEvents.57 }
			}
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.58
	title = "UniqueAscensionPerksEvents.58.Name"
	desc = "UniqueAscensionPerksEvents.58.Desc"
	show_sound = event_conversation
	picture = GFX_evt_security_place
	location = event_target:preventive_strike_planet
	# mean_time_to_happen = { months = 6 }
	is_triggered_only = yes
	# trigger = {
	# 	has_ascension_perk = ap_advanced_security
	# 	any_owned_planet = {
	# 		is_colony = yes
	# 		OR = {
	# 			planet_crime > 75
	# 			has_modifier = has_criminal_branch_office
	# 			has_modifier = criminal_underworld
	# 			has_modifier = drone_deviancy
	# 			has_modifier = drone_corruption
	# 		}
	# 		NOR = {
	# 			has_planet_flag = recent_security_preventive_strike
	# 			has_planet_flag = recent_security_preventive_strike_energy_small
	# 			has_planet_flag = recent_security_preventive_strike_energy_medium
	# 			has_planet_flag = recent_security_preventive_strike_energy_big
	# 			has_planet_flag = recent_security_preventive_strike_energy_huge
	# 			has_planet_flag = recent_security_preventive_strike_energy_minerals
	# 			has_planet_flag = recent_security_preventive_strike_energy_consumers
	# 			has_planet_flag = recent_security_preventive_strike_energy_members
	# 			has_planet_flag = recent_security_preventive_strike_energy_leaders
	# 			has_planet_flag = recent_security_preventive_strike_energy_weapons
	# 			has_planet_flag = recent_security_preventive_strike_energy_ships
	# 		}
	# 	}
	# }
	immediate = {
		random_owned_planet = {
			limit = {
				is_colony = yes
				num_sapient_pops > 12
				OR = {
					planet_crime > 75
					has_modifier = has_criminal_branch_office
					has_modifier = criminal_underworld
					has_modifier = drone_deviancy
					has_modifier = drone_corruption
				}
				NOR = {
					has_planet_flag = recent_security_preventive_strike
					has_planet_flag = recent_security_preventive_strike_energy_small
					has_planet_flag = recent_security_preventive_strike_energy_medium
					has_planet_flag = recent_security_preventive_strike_energy_big
					has_planet_flag = recent_security_preventive_strike_energy_huge
					has_planet_flag = recent_security_preventive_strike_energy_minerals
					has_planet_flag = recent_security_preventive_strike_energy_consumers
					has_planet_flag = recent_security_preventive_strike_energy_members
					has_planet_flag = recent_security_preventive_strike_energy_leaders
					has_planet_flag = recent_security_preventive_strike_energy_weapons
					has_planet_flag = recent_security_preventive_strike_energy_ships
				}
			}
			set_timed_planet_flag = { flag = recent_security_preventive_strike years = 2 }
			random_list = {
				20 = { set_planet_flag = recent_security_preventive_strike_energy_small }
				10 = { set_planet_flag = recent_security_preventive_strike_energy_medium }
				5 = { set_planet_flag = recent_security_preventive_strike_energy_big }
				1 = { set_planet_flag = recent_security_preventive_strike_energy_huge }
				10 = { set_planet_flag = recent_security_preventive_strike_energy_minerals }
				10 = { modifier = { factor = 0 owner = { is_gestalt = yes } } set_planet_flag = recent_security_preventive_strike_energy_consumers }
				10 = { set_planet_flag = recent_security_preventive_strike_energy_members }
				10 = { set_planet_flag = recent_security_preventive_strike_energy_leaders }
				10 = { set_planet_flag = recent_security_preventive_strike_energy_weapons }
				10 = { set_planet_flag = recent_security_preventive_strike_energy_ships }
			}
			save_event_target_as = preventive_strike_planet
		}
	}
	option = {
		name = EXCELLENT
		event_target:preventive_strike_planet = {
			if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_small } owner = { add_resource = { energy = 250 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_medium } owner = { add_resource = { energy = 500 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_big } owner = { add_resource = { energy = 750 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_huge } owner = { add_resource = { energy = 1000 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_minerals } owner = { add_resource = { minerals = 500 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_consumers } owner = { add_resource = { consumer_goods = 500 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_members } owner = { add_resource = { unity = 500 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_leaders } owner = { add_resource = { influence = 30 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_weapons } owner = { add_resource = { engineering_research = 600 } } }
			else_if = { limit = { has_planet_flag = recent_security_preventive_strike_energy_ships } owner = { add_resource = { alloys = 300 } } }
		}
	}
}
# Edict
country_event = {
	id = UniqueAscensionPerksEvents.8059
	title = "UniqueAscensionPerksEvents.8059.Name"
	desc = "UniqueAscensionPerksEvents.8059.Desc"
	show_sound = event_public_unrest
	picture = GFX_evt_security_forces
	location = from
	is_triggered_only = yes
	trigger = {
		has_country_resource = { type = energy amount > 500 } has_country_resource = { type = influence amount > 10 }
	}
	immediate = {
		random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship } save_event_target_as = ship_1
			root = { random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship NOT = { is_same_value = event_target:ship_1 } } save_event_target_as = ship_2 }
				root = { random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship NOR = { is_same_value = event_target:ship_1 is_same_value = event_target:ship_2 } } save_event_target_as = ship_3 }
					root = { random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship NOR = { is_same_value = event_target:ship_1 is_same_value = event_target:ship_2 is_same_value = event_target:ship_3 } } save_event_target_as = ship_4 }
						root = { random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship NOR = { is_same_value = event_target:ship_1 is_same_value = event_target:ship_2 is_same_value = event_target:ship_3 is_same_value = event_target:ship_4 } } save_event_target_as = ship_5 }
							root = { random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship NOR = { is_same_value = event_target:ship_1 is_same_value = event_target:ship_2 is_same_value = event_target:ship_3 is_same_value = event_target:ship_4 is_same_value = event_target:ship_5 } } save_event_target_as = ship_6 }
								root = { random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship NOR = { is_same_value = event_target:ship_1 is_same_value = event_target:ship_2 is_same_value = event_target:ship_3 is_same_value = event_target:ship_4 is_same_value = event_target:ship_5 is_same_value = event_target:ship_6 } } save_event_target_as = ship_7 }
									root = { random_owned_fleet = { limit = { is_ship_class = shipclass_science_ship NOR = { is_same_value = event_target:ship_1 is_same_value = event_target:ship_2 is_same_value = event_target:ship_3 is_same_value = event_target:ship_4 is_same_value = event_target:ship_5 is_same_value = event_target:ship_6 is_same_value = event_target:ship_7 } } save_event_target_as = ship_8 } }
								}
							}
						}
					}
				}
			}
		}
		# if = { limit = { exists = event_target:ship_escorted }
		# 	event_target:ship_escorted = { save_global_event_target_as = ship_escorted }
		# 	clear_global_event_target = ship_escorted
		# }
	}
	after = {
		if = {
			limit = { exists = event_target:ship_escorted event_target:ship_escorted = { is_scope_type = ship } }
			create_security_forces_country = yes
			event_target:ship_escorted = {
				ship_event = { id = UniqueAscensionPerksEvents.8060 }
				fleet = { save_event_target_as = ship_escorted }
			}
			create_fleet = {
				name = ap_advanced_security
				settings = {
					# garrison = yes
					can_disband = no
					can_upgrade = no
					can_change_composition = no
					can_change_leader = no
					uses_naval_capacity = no
					spawn_debris = no
					ai_ignore_strength = yes
				}
				effect = {
					set_owner = root
					while = { count = 10
						create_ship = { name = random random_existing_design = corvette }
						random = { chance = 50 create_ship = { name = random random_existing_design = corvette } }
					}
					set_location = { target = event_target:ship_escorted.star distance = 325 angle = random }
					# set_fleet_stance = aggressive
					# set_aggro_range_measure_from = return_point
					# set_aggro_range = 5000
					set_fleet_flag = security_escort_fleet
					save_event_target_as = security_fleet
				}
			}
			# Just superflous fallback
			if = {
				limit = {
					NOT = { exists = event_target:security_forces_country }
					last_created_country = { has_country_flag = security_strike_force }
				}
				if = {
					limit = { last_created_country = { has_country_flag = security_strike_force } }
					last_created_country = { save_event_target_as = security_forces_country }
				}
				else_if = {
					limit = { any_country = { has_country_flag = security_strike_force is_friendly_to = root } }
					random_country = {
						limit = { has_country_flag = security_strike_force is_friendly_to = root }
						save_event_target_as = security_forces_country
					}
				}
				else = { log = "DEBUG WARNING: no security_forces_country found!?!" }
			}
			event_target:security_fleet = { # last_created_fleet = {
				set_owner = event_target:security_forces_country auto_follow_fleet = { target = event_target:ship_escorted attack_fleet = no }
			}
		}
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.1
		# allow = { has_country_resource = { type = energy amount > 500 } has_country_resource = { type = influence amount > 10 } }
		trigger = { exists = event_target:ship_1 exists = event_target:ship_1.solar_system }
		allow = { event_target:ship_1.solar_system = { trade_protected_value >= 2 } }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_1 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.2
		# allow = { has_country_resource = { type = energy amount > 500 } has_country_resource = { type = influence amount > 10 } }
		trigger = { exists = event_target:ship_2 exists = event_target:ship_2.solar_system }
		allow = { event_target:ship_2.solar_system = { trade_protected_value >= 2 } }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_2 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.3
		# allow = { has_country_resource = { type = energy amount > 500 } has_country_resource = { type = influence amount > 10 } }
		trigger = { exists = event_target:ship_3 exists = event_target:ship_3.solar_system }
		allow = { event_target:ship_3.solar_system = { trade_protected_value >= 2 } }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_3 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.4
		# allow = { has_country_resource = { type = energy amount > 500 } has_country_resource = { type = influence amount > 10 } }
		trigger = { exists = event_target:ship_4 exists = event_target:ship_4.solar_system }
		allow = { event_target:ship_4.solar_system = { trade_protected_value >= 2 } }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_4 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.5
		# allow = { has_country_resource = { type = energy amount > 500 } has_country_resource = { type = influence amount > 10 } }
		trigger = { exists = event_target:ship_5 exists = event_target:ship_5.solar_system }
		allow = { event_target:ship_5.solar_system = { trade_protected_value >= 2 } }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_5 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.6
		# allow = { has_country_resource = { type = energy amount > 500 } has_country_resource = { type = influence amount > 10 } }
		trigger = { exists = event_target:ship_6 exists = event_target:ship_6.solar_system }
		allow = { event_target:ship_6.solar_system = { trade_protected_value >= 2 } }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_6 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.7
		# allow = { has_country_resource = { type = energy amount > 500 } has_country_resource = { type = influence amount > 10 } }
		trigger = { exists = event_target:ship_7 exists = event_target:ship_7.solar_system }
		allow = { event_target:ship_7.solar_system = { trade_protected_value >= 2 } }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_7 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = UniqueAscensionPerksEvents.8059.Ship.8
		# allow = { has_country_resource = { type = energy amount > 500 } has_country_resource = { type = influence amount > 10 } }
		trigger = { exists = event_target:ship_8 exists = event_target:ship_8.solar_system }
		allow = { event_target:ship_8.solar_system = { trade_protected_value >= 2 } }
		add_resource = { energy = -500 influence = -10 }
		hidden_effect = { event_target:ship_8 = { save_event_target_as = ship_escorted } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.8059.Select"
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.8059 } } }
	option = { name = ABORT }
}

ship_event = {
	id = UniqueAscensionPerksEvents.8060
	title = "UniqueAscensionPerksEvents.8060.Name"
	desc = "UniqueAscensionPerksEvents.8060.Desc"
	show_sound = event_public_unrest
	picture = GFX_evt_security_forces
	location = root
	is_triggered_only = yes
	immediate = {
		# save_event_target_as = ship_escorted
	}
	option = { name = EXCELLENT }
}

# destroy_fleet
country_event = {
	id = UniqueAscensionPerksEvents.8061
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { years = 1 }
	trigger = { is_country_type = security_forces any_owned_fleet = { has_fleet_flag = security_escort_fleet is_fleet_idle = yes } }
	immediate = {
		random_owned_fleet = { limit = { has_fleet_flag = security_escort_fleet is_fleet_idle = yes } destroy_fleet = this }
	}
}

# on_crossing_border: Sync virtual relation (v3.12)
# From = Origin System
# fromfrom = Destination System
fleet_event = {
	id = UniqueAscensionPerksEvents.8062
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		fromfrom = {
			exists = space_owner
			has_star_flag = recent_security_strike_force
			space_owner = {
				merg_is_default_empire = yes
				OR = { has_ascension_perk = ap_advanced_security has_ascension_perk = ap_defense_sentinels }
				NOT = { has_country_flag = sync_crossing_border_virtual_relation } # is_same_empire = root.owner
				is_hostile = root.owner # OR = { root.owner = { is_hostile = prev } }
			}
		}
	}
	immediate = {
		fromfrom = {
			space_owner = { save_event_target_as = system_owner }
			if = {
				limit = { space_owner = { is_hostile = root.owner } }
				if = {
					limit = {
						any_fleet_in_system = {
							exists = owner
							owner = {
								is_country_type = security_forces
								# There is a possibility both opponents have this but a remaining force is in the system
								OR = {
									has_country_flag = is_unique_perk_special_subject_of@event_target:system_owner # New in v3.14
									has_relation_flag = { who = event_target:system_owner flag = security_strike_force }
									has_relation_flag = { who = event_target:system_owner flag = defense_sentinels }
								}
							}
						}
					}
					random_fleet_in_system = {
						limit = {
							exists = owner
							owner = {
								is_country_type = security_forces
								# There is a possibility both opponents have this but a remaining force is in the system
								OR = {
									has_country_flag = is_unique_perk_special_subject_of@event_target:system_owner # New in v3.14
									has_relation_flag = { who = event_target:system_owner flag = security_strike_force }
									has_relation_flag = { who = event_target:system_owner flag = defense_sentinels }
								}
							}
						}
						if = {
							limit = { is_disabled = yes is_in_combat = no }
							every_owned_ship = { set_disabled = no }
							set_event_locked = no
							if = {
								limit = { num_ships < 10 }
								create_ship = { name = random random_existing_design = corvette }
							}
							set_fleet_stance = aggressive
						}
						owner = {
							if = {
								limit = { NOT = { has_communications = root.owner } }
								establish_communications_no_message = root.owner
							}
							if = {
								limit = { NOT = { is_hostile = root.owner } }
								set_faction_hostility = { target = root.owner set_hostile = yes }
							}
						}
					}
					event_target:system_owner = {
						set_timed_country_flag = { flag = sync_crossing_border_virtual_relation days = 15 }
					}
					log ="Security Forces found not synced enemy in \\[This.solar_system.GetName]"
				}
				else_if = { # No fleet in system, find relation.
					limit = {
						event_target:system_owner = {
							any_relation = {
								is_country_type = security_forces
								NOT = { is_hostile = root.owner }
								OR = {
									has_country_flag = is_unique_perk_special_subject_of@event_target:system_owner # New in v3.14
									has_relation_flag = { who = prev flag = security_strike_force }
									has_relation_flag = { who = prev flag = defense_sentinels }
								}
							}
						}
					}
					event_target:system_owner = {
						random_relation = {
							limit = {
								is_country_type = security_forces
								NOT = { is_hostile = root.owner }
								OR = {
									has_country_flag = is_unique_perk_special_subject_of@event_target:system_owner # New in v3.14
									has_relation_flag = { who = prev flag = security_strike_force }
									has_relation_flag = { who = prev flag = defense_sentinels }
								}
							}
							if = {
								limit = { NOT = { has_communications = root.owner } }
								establish_communications_no_message = root.owner
							}
							set_faction_hostility = { target = root.owner set_hostile = yes }
						}
						set_timed_country_flag = { flag = sync_crossing_border_virtual_relation days = 15 }
					}
				}
			}
			else = { # Friendly
				if = {
					limit = {
						any_fleet_in_system = {
							exists = owner
							owner = {
								is_country_type = security_forces
								is_hostile = root.owner
								# There is a possibility both opponents have this but a remaining force is in the system
								OR = {
									has_country_flag = is_unique_perk_special_subject_of@event_target:system_owner # New in v3.14
									has_relation_flag = { who = event_target:system_owner flag = security_strike_force }
									has_relation_flag = { who = event_target:system_owner flag = defense_sentinels }
								}
							}
						}
					}
					random_fleet_in_system = {
						limit = {
							exists = owner
							owner = {
								is_country_type = security_forces
								is_hostile = root.owner
								# There is a possibility both opponents have this but a remaining force is in the system
								OR = {
									has_country_flag = is_unique_perk_special_subject_of@event_target:system_owner # New in v3.14
									has_relation_flag = { who = event_target:system_owner flag = security_strike_force }
									has_relation_flag = { who = event_target:system_owner flag = defense_sentinels }
								}
							}
						}
						owner = {
							if = {
								limit = { NOT = { has_communications = root.owner } }
								establish_communications_no_message = root.owner
							}
							set_faction_hostility = { target = root.owner set_hostile = no }
						}
					}
					event_target:system_owner = {
						set_timed_country_flag = { flag = sync_crossing_border_virtual_relation days = 15 }
					}
					log ="Security Forces found not synced friendly in \\[This.solar_system.GetName]"
				}
				else_if = { # No fleet in system, find relation.
					limit = {
						event_target:system_owner = {
							any_relation = {
								is_country_type = security_forces
								is_hostile = root.owner
								OR = {
									has_country_flag = is_unique_perk_special_subject_of@event_target:system_owner # New in v3.14
									has_relation_flag = { who = prev flag = security_strike_force }
									has_relation_flag = { who = prev flag = defense_sentinels }
								}
							}
						}
					}
					event_target:system_owner = {
						random_relation = {
							limit = {
								is_country_type = security_forces
								is_hostile = root.owner
								OR = {
									has_country_flag = is_unique_perk_special_subject_of@event_target:system_owner # New in v3.14
									has_relation_flag = { who = prev flag = security_strike_force }
									has_relation_flag = { who = prev flag = defense_sentinels }
								}
							}
							if = {
								limit = { NOT = { has_communications = root.owner } }
								establish_communications_no_message = root.owner
							}
							set_faction_hostility = { target = root.owner set_hostile = no }
						}
						set_timed_country_flag = { flag = sync_crossing_border_virtual_relation days = 15 }
					}
				}
			}
		}
	}
}

######################################
#									 #
########## Friendly Nature ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.59
	title = "ap_friendly_nature"
	desc = "ap_friendly_nature_desc"
	show_sound = event_alien_nature
	picture = GFX_evt_friendly_nature
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT }
}

planet_event = {
	id = UniqueAscensionPerksEvents.60
	title = "decision_nature_pacification"
	desc = "UniqueAscensionPerksEvents.60.Desc"
	show_sound = event_alien_nature
	picture = GFX_evt_friendly_nature
	location = root
	is_triggered_only = yes
	option = { name = EXCELLENT }
}
# on_yearly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.3061
	title = "UniqueAscensionPerksEvents.3061.Name"
	desc = "UniqueAscensionPerksEvents.3061.Desc"
	show_sound = event_alien_nature
	picture = GFX_evt_friendly_nature
	location = event_target:friendly_nature_discovery # root
	is_triggered_only = yes
	# mean_time_to_happen = { months = 3 }
	trigger = {
		NOT = { has_active_event = { UniqueAscensionPerksEvents.3061 } }
		# has_ascension_perk = ap_friendly_nature
		# # NOT = { has_country_flag = friendly_nature_discovery_cooldown }
		# any_owned_planet = {
		# 	NOT = { has_planet_flag = friendly_nature_discovery }
		# 	can_find_rare_deposits = yes
		# }
	}
	immediate = {
		random_owned_planet = {
			limit = {
				can_find_rare_deposits = yes
				NOT = { has_planet_flag = friendly_nature_discovery }
			}
			set_planet_flag = friendly_nature_discovery
			save_event_target_as = friendly_nature_discovery
		}
		# set_timed_country_flag = { flag = friendly_nature_discovery_cooldown years = 1 }
	}
	option = {
		name = EXCELLENT
		custom_tooltip = "UniqueAscensionPerksEvents.3061.a.tooltip"
		# nature_rare_deposits_found = yes
		hidden_effect = {
			event_target:friendly_nature_discovery = {
				random_list = {
					30 = { while = { count = 1 add_deposit = d_alien_pets_deposit } }
					20 = { while = { count = 2 add_deposit = d_alien_pets_deposit } }
					10 = { while = { count = 3 add_deposit = d_alien_pets_deposit } }
					10 = {}
				}
				random_list = {
					30 = { while = { count = 1 add_deposit = d_betharian_deposit } }
					20 = { while = { count = 2 add_deposit = d_betharian_deposit } }
					10 = { while = { count = 3 add_deposit = d_betharian_deposit } }
					10 = {}
				}
				random_list = {
					30 = { while = { count = 1 add_deposit = d_crystalline_caverns } }
					20 = { while = { count = 2 add_deposit = d_crystalline_caverns } }
					10 = { while = { count = 3 add_deposit = d_crystalline_caverns } }
					10 = {}
				}
				random_list = {
					30 = { while = { count = 1 add_deposit = d_dust_caverns } }
					20 = { while = { count = 2 add_deposit = d_dust_caverns } }
					10 = { while = { count = 3 add_deposit = d_dust_caverns } }
					10 = {}
				}
				random_list = {
					30 = { while = { count = 1 add_deposit = d_bubbling_swamp } }
					20 = { while = { count = 2 add_deposit = d_bubbling_swamp } }
					10 = { while = { count = 3 add_deposit = d_bubbling_swamp } }
					10 = {}
				}
			}
		}
	}
}

######################################
#									 #
########### The Recomposer ###########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.63
	title = "ap_recomposer"
	desc = "ap_recomposer_desc"
	show_sound = event_ai_started
	picture = GFX_evt_recomposer
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT enable_special_project = { name = RECOMPOSER location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.64
	title = "UniqueAscensionPerksEvents.64.Name"
	desc = "UniqueAscensionPerksEvents.64.Desc"
	show_sound = event_ai_started
	picture = GFX_evt_recomposer
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = { has_ascension_perk = ap_recomposer }
	immediate = { set_country_flag = recomposer_project get_capital_planet = yes }
	option = {
		name = EXCELLENT
		add_monthly_resource_mult = { resource = engineering_research value = 22 min = 5000 max = 15000 }
		custom_tooltip = "ap_recomposer_tooltip"
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.65
	title = "UniqueAscensionPerksEvents.65.Name"
	desc = "UniqueAscensionPerksEvents.65.Desc"
	show_sound = event_ai_started
	picture = GFX_evt_recomposer
	location = root
	is_triggered_only = yes
	immediate = { clear_variable = num_non_robot_pop }
	option = { name = EXCELLENT }
}

planet_event = {
	id = UniqueAscensionPerksEvents.66
	title = "UniqueAscensionPerksEvents.66.Name"
	desc = "UniqueAscensionPerksEvents.66.Desc"
	show_sound = event_ai_started
	picture = GFX_evt_recomposer
	location = root
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

######################################
#									 #
########## Imposed Megacorp ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.67
	title = "ap_megacorp"
	desc = "ap_megacorp_desc"
	show_sound = event_galactic_market
	picture = GFX_evt_megacorp
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT }
}
# on_yearly_pulse
# v3.12 now country event
country_event = {
	id = UniqueAscensionPerksEvents.8068
	hide_window = yes
	is_triggered_only = yes
	# trigger = {
	# 	any_playable_country = {
	# 		is_gestalt = no
	# 		has_ascension_perk = ap_megacorp
	# 		OR = {
	# 			has_modifier = aggressive_marketing_target
	# 			any_relation = {
	# 				merg_is_default_empire = yes
	# 				NOR = { is_gestalt = yes has_ascension_perk = ap_megacorp has_modifier = aggressive_marketing_target }
	# 			}
	# 		}
	# 	}
	# }
	immediate = {
		# random_playable_country = {
		# 	limit = { is_gestalt = no has_ascension_perk = ap_megacorp }
		# 	weights = { base = 1 modifier = { add = 1 has_modifier = aggressive_marketing_target } }
		if = {
			limit = { has_modifier = aggressive_marketing_target }
			remove_modifier = aggressive_marketing_target
		}
		random_relation = {
			limit = {
				merg_is_default_empire = yes
				NOR = {
					is_gestalt = yes
					has_ascension_perk = ap_megacorp
					has_modifier = aggressive_marketing_target
					is_at_war_with = prev
					is_hostile = prev
				}
			}
			weights = { base = 1
				modifier = { add = 2 is_friendly_to = prev }
				modifier = { add = 1 is_protective_to = prev }
			}
			add_modifier = { modifier = aggressive_marketing_target }
		}
	}
}

######################################
#									 #
########### Fallen Disciple ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.68
	title = "ap_fallen_disciple"
	desc = "ap_fallen_disciple_desc"
	show_sound = event_cityscape
	picture = GFX_evt_fallen_disciple
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT enable_special_project = { name = AWAKEN_FALLEN_EMPIRE_PROJECT location = event_target:capital_planet owner = root } }
}

# on_five_year_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.69
	title = "UniqueAscensionPerksEvents.69.Name"
	desc = "UniqueAscensionPerksEvents.69.Desc"
	show_sound = event_cityscape
	picture = GFX_evt_fallen_disciple
	is_triggered_only = yes
	# mean_time_to_happen = { years = 6 }
	trigger = {
		has_ascension_perk = ap_fallen_disciple
		any_country = { is_valid_fallen_empire_for_fallen_disciple = yes }
	}
	immediate = {
		random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes }
			save_event_target_as = fallen_empire_1
			random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOT = { is_same_empire = event_target:fallen_empire_1 } }
				save_event_target_as = fallen_empire_2
				random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 } }
					save_event_target_as = fallen_empire_3
					random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 is_same_empire = event_target:fallen_empire_3 } }
						save_event_target_as = fallen_empire_4
						random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 is_same_empire = event_target:fallen_empire_3 is_same_empire = event_target:fallen_empire_4 } }
							save_event_target_as = fallen_empire_5
							random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 is_same_empire = event_target:fallen_empire_3 is_same_empire = event_target:fallen_empire_4 is_same_empire = event_target:fallen_empire_5 } } save_event_target_as = fallen_empire_6 }
						}
					}
				}
			}
		}
		if = {
			limit = { exists = event_target:FallenEmpireTaskOrigin }
			event_target:FallenEmpireTaskOrigin = { save_global_event_target_as = FallenEmpireTaskOrigin }
			clear_global_event_target = FallenEmpireTaskOrigin
		}
	}
	after = {
		hidden_effect = {
			if = { limit = { exists = event_target:FallenEmpireTaskOrigin }
				# fe_select_gift = yes
				random_list = {
					50 = { if = { limit = { mid_game_years_passed > 0 } set_country_flag = fe_gift_resources_large } else = { set_country_flag = fe_gift_resources_small } }
					20 = { set_country_flag = fe_gift_databanks }
					15 = { set_country_flag = fe_gift_rare_tech }
					10 = { if = { limit = { mid_game_years_passed > 0 } set_country_flag = fe_gift_escorts } else = { set_country_flag = fe_gift_resources_large } }
					5 = { if = { limit = { mid_game_years_passed > 0 } set_country_flag = fe_gift_battlecruiser } else = { set_country_flag = fe_gift_resources_large } }
					15 = { modifier = { factor = 3 is_at_war = yes } set_country_flag = fe_gift_resources_alloys }
					10 = { modifier = { factor = 0 OR = { is_at_war = yes is_gestalt = yes } } set_country_flag = fe_gift_resources_consumer }
				}
				country_event = { id = UniqueAscensionPerksEvents.70 }
			}
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.1"
		trigger = { exists = event_target:fallen_empire_1 }
		hidden_effect = { event_target:fallen_empire_1 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.2"
		trigger = { exists = event_target:fallen_empire_2 }
		hidden_effect = { event_target:fallen_empire_2 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.3"
		trigger = { exists = event_target:fallen_empire_3 }
		hidden_effect = { event_target:fallen_empire_3 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.4"
		trigger = { exists = event_target:fallen_empire_4 }
		hidden_effect = { event_target:fallen_empire_4 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.5"
		trigger = { exists = event_target:fallen_empire_5 }
		hidden_effect = { event_target:fallen_empire_5 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.6"
		trigger = { exists = event_target:fallen_empire_6 }
		hidden_effect = { event_target:fallen_empire_6 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = { name = "UniqueAscensionPerksEvents.69.Select" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.69 } } }
	option = { name = "UniqueAscensionPerksEvents.69.b" ai_chance = { factor = 0.1 } default_hide_option = yes }
}

country_event = {
	id = UniqueAscensionPerksEvents.70
	title = fallen_empires_tasks.2.name
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin.ruler
	}
	desc = { text = fallen_empires_tasks.2.desc.a.materialist	trigger = { fe_gift_resources = yes event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist } } }
	desc = { text = fallen_empires_tasks.2.desc.a.xenophile		trigger = { fe_gift_resources = yes event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile } } }
	desc = { text = fallen_empires_tasks.2.desc.a.spiritualist	trigger = { fe_gift_resources = yes event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_spiritualist } } }
	desc = { text = fallen_empires_tasks.2.desc.a.machine.o		trigger = { fe_gift_resources = yes is_synthetic_empire = no event_target:FallenEmpireTaskOrigin = { is_machine_empire = yes } } }
	desc = { text = fallen_empires_tasks.2.desc.a.machine.s		trigger = { fe_gift_resources = yes is_synthetic_empire = yes event_target:FallenEmpireTaskOrigin = { is_machine_empire = yes } } }
	desc = { text = fallen_empires_tasks.2.desc.b.materialist	trigger = { OR = { has_country_flag = fe_gift_databanks has_country_flag = fe_gift_rare_tech } event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist } } }
	desc = { text = fallen_empires_tasks.2.desc.b.xenophile		trigger = { OR = { has_country_flag = fe_gift_databanks has_country_flag = fe_gift_rare_tech } event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile } } }
	desc = { text = fallen_empires_tasks.2.desc.b.spiritualist	trigger = { OR = { has_country_flag = fe_gift_databanks has_country_flag = fe_gift_rare_tech } event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_spiritualist } } }
	desc = { text = fallen_empires_tasks.2.desc.b.machine.o		trigger = { OR = { has_country_flag = fe_gift_databanks has_country_flag = fe_gift_rare_tech } is_synthetic_empire = no event_target:FallenEmpireTaskOrigin = { is_machine_empire = yes } } }
	desc = { text = fallen_empires_tasks.2.desc.b.machine.s		trigger = { OR = { has_country_flag = fe_gift_databanks has_country_flag = fe_gift_rare_tech } is_synthetic_empire = yes event_target:FallenEmpireTaskOrigin = { is_machine_empire = yes } } }
	desc = { text = fallen_empires_tasks.2.desc.c.materialist	trigger = { has_country_flag = fe_gift_escorts event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist } } }
	desc = { text = fallen_empires_tasks.2.desc.c.xenophile		trigger = { has_country_flag = fe_gift_escorts event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile } } }
	desc = { text = fallen_empires_tasks.2.desc.c.spiritualist	trigger = { has_country_flag = fe_gift_escorts event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_spiritualist } } }
	desc = { text = fallen_empires_tasks.2.desc.c.machine.o		trigger = { OR = { has_country_flag = fe_gift_escorts has_country_flag = fe_gift_battlecruiser } is_synthetic_empire = no event_target:FallenEmpireTaskOrigin = { is_machine_empire = yes } } }
	desc = { text = fallen_empires_tasks.2.desc.c.machine.s		trigger = { OR = { has_country_flag = fe_gift_escorts has_country_flag = fe_gift_battlecruiser } is_synthetic_empire = yes	event_target:FallenEmpireTaskOrigin = { is_machine_empire = yes } } }
	desc = { text = fallen_empires_tasks.2.desc.d.materialist	trigger = { has_country_flag = fe_gift_battlecruiser event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist } } }
	desc = { text = fallen_empires_tasks.2.desc.d.xenophile		trigger = { has_country_flag = fe_gift_battlecruiser event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile } } }
	desc = { text = fallen_empires_tasks.2.desc.d.spiritualist	trigger = { has_country_flag = fe_gift_battlecruiser event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_spiritualist } } }
	location = event_target:capital_planet
	immediate = { get_capital_planet = yes }
	after = {
		hidden_effect = { # FE_CLEAR_GIFT_FLAGS
			remove_country_flag = fe_gift_escorts
			remove_country_flag = fe_gift_resources_small
			remove_country_flag = fe_gift_battlecruiser
			remove_country_flag = fe_gift_resources_large
			remove_country_flag = fe_gift_databanks
			remove_country_flag = fe_gift_rare_tech
			remove_country_flag = fe_gift_resources_alloys
			remove_country_flag = fe_gift_resources_consumer
		}
	}
	option = { name = fallen_empires_tasks.2.a
		# fe_gift_action = yes
		hidden_effect = {
			set_country_flag = fe_gift_received
			event_target:FallenEmpireTaskOrigin = {
				add_opinion_modifier = { who = root modifier = opinion_fallen_empire_gift }
				add_intel = { who = root amount = 50 }
			}
			add_intel = { who = event_target:FallenEmpireTaskOrigin amount = 50 }
		}
		switch = { trigger = has_country_flag
			fe_gift_resources_small = { add_resource = { minerals = 1500 energy = 500 } }
			fe_gift_resources_large = { add_resource = { minerals = 3000 energy = 1000 } }
			fe_gift_resources_alloys = { add_resource = { alloys = 750 } }
			fe_gift_resources_consumer = { add_resource = { consumer_goods = 750 } }
			fe_gift_databanks = {	add_modifier = { modifier = fallen_empire_gift_databanks years = 10 } }
			fe_gift_rare_tech = {
				if = { limit = { NOT = { has_technology = tech_planetary_shield_generator } } give_tech_option_or_progress_effect = { TECH = tech_planetary_shield_generator } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
				else_if = { limit = { NOT = { has_technology = tech_synchronized_defences } } give_tech_option_or_progress_effect = { TECH = tech_synchronized_defences } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
				else_if = { limit = { NOT = { has_technology = tech_selected_lineages } } give_tech_option_or_progress_effect = { TECH = tech_selected_lineages } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
				else_if = { limit = { NOT = { has_technology = tech_space_defense_station_improvement } } give_tech_option_or_progress_effect = { TECH = tech_space_defense_station_improvement } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
				else_if = { limit = { NOT = { has_technology = tech_gene_banks } } give_tech_option_or_progress_effect = { TECH = tech_gene_banks } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
				else_if = { limit = { NOT = { has_technology = tech_modular_engineering } } give_tech_option_or_progress_effect = { TECH = tech_modular_engineering } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
				else_if = { limit = { NOT = { has_technology = tech_construction_templates } } give_tech_option_or_progress_effect = { TECH = tech_construction_templates } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
				else_if = { limit = { NOT = { has_technology = tech_gateway_activation } } give_tech_option_or_progress_effect = { TECH = tech_gateway_activation } hidden_effect = { remove_country_flag = fe_gift_rare_tech } break = yes }
				# (MOD ADD MORE TECHS GIFT IN FUTURE)
				# Just give databanks instead
				add_modifier = { modifier = fallen_empire_gift_databanks years = 10 }
			}
			fe_gift_escorts = {
				custom_tooltip = fallen_empires_tasks.2.escorts_tooltip
				hidden_effect = {
					event_target:FallenEmpireTaskOrigin = {
						create_fleet = {
							settings = { spawn_debris = no }
							effect = {
								set_owner = prev
								if = { limit = { prev = { is_machine_empire = yes } } while = { count = 3 create_ship = { name = "NAME_Surplus_I" design = "NAME_Surplus_Gamma" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } } }
								else_if = { limit = { prev = { has_ethic = ethic_fanatic_materialist } } while = { count = 3 create_ship = { name = "NAME_Surplus_I" design = "NAME_Surplus_Sage" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } } }
								else_if = { limit = { prev = { has_ethic = ethic_fanatic_xenophile } } while = { count = 3 create_ship = { name = "NAME_Surplus_I" design = "NAME_Surplus_Warden" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } } }
								else_if = { limit = { prev = { has_ethic = ethic_fanatic_spiritualist } } while = { count = 3 create_ship = { name = "NAME_Surplus_I" design = "NAME_Surplus_Zealot" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } } }
								set_location = event_target:capital_planet
							}
						}
					}
					last_created_fleet = { set_owner = root }
				}
			}
			fe_gift_battlecruiser = {
				custom_tooltip = fallen_empires_tasks.2.battlecruiser_tooltip
				hidden_effect = {
					event_target:FallenEmpireTaskOrigin = {
						create_fleet = {
							settings = { spawn_debris = no }
							effect = {
								set_owner = prev
								if = { limit = { prev = { is_machine_empire = yes } } create_ship = { name = "NAME_Progress" design = "NAME_Surplus_Beta" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } }
								else_if = { limit = { prev = { has_ethic = ethic_fanatic_materialist } } create_ship = { name = "NAME_Progress" design = "NAME_Surplus_Scholar" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } }
								else_if = { limit = { prev = { has_ethic = ethic_fanatic_xenophile } } create_ship = { name = "NAME_Benevolence" design = "NAME_Surplus_Custodian" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } }
								else_if = { limit = { prev = { has_ethic = ethic_fanatic_spiritualist } } create_ship = { name = "NAME_Benevolence" design = "NAME_Surplus_Avatar" graphical_culture = event_target:FallenEmpireTaskOrigin upgradable = no } }
								set_location = event_target:capital_planet
							}
						}
					}
					last_created_fleet = { set_owner = root }
				}
			}
		}
	}
	option = { name = fallen_empires_tasks.2.b ai_chance = { factor = 0.1 } default_hide_option = yes
		# fe_refuse_gift_action = yes
		hidden_effect = {
			event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_spurned_fallen_empire_gift } }
		}
		if = { limit = { event_target:FallenEmpireTaskOrigin = { is_enigmatic_to = root } } custom_tooltip = fallen_empire_enigmatic_tooltip }
		else = { custom_tooltip = fallen_empire_unhappy_tooltip }

	}
}

country_event = {
	id = UniqueAscensionPerksEvents.71
	title = "AWAKEN_FALLEN_EMPIRE_PROJECT"
	desc = "UniqueAscensionPerksEvents.71.Desc"
	show_sound = event_cityscape
	picture = GFX_evt_fallen_disciple
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes set_country_flag = fallen_disciple_project }
	option = { name = EXCELLENT custom_tooltip = "ap_fallen_disciple_tooltip_3" }
}

country_event = {
	id = UniqueAscensionPerksEvents.72
	title = "UniqueAscensionPerksEvents.72.Name"
	desc = "UniqueAscensionPerksEvents.72.Desc"
	show_sound = event_cityscape
	picture = GFX_evt_fallen_disciple
	is_triggered_only = yes
	immediate = {
		random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes }
			save_event_target_as = fallen_empire_1
			random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOT = { is_same_empire = event_target:fallen_empire_1 } }
				save_event_target_as = fallen_empire_2
				random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 } }
					save_event_target_as = fallen_empire_3
					random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 is_same_empire = event_target:fallen_empire_3 } }
						save_event_target_as = fallen_empire_4
						random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 is_same_empire = event_target:fallen_empire_3 is_same_empire = event_target:fallen_empire_4 } }
							save_event_target_as = fallen_empire_5
							random_country = { limit = { is_valid_fallen_empire_for_fallen_disciple = yes NOR = { is_same_empire = event_target:fallen_empire_1 is_same_empire = event_target:fallen_empire_2 is_same_empire = event_target:fallen_empire_3 is_same_empire = event_target:fallen_empire_4 is_same_empire = event_target:fallen_empire_5 } } save_event_target_as = fallen_empire_6 }
						}
					}
				}
			}
		}
		if = {
			limit = { exists = event_target:FallenEmpireTaskOrigin }
			event_target:FallenEmpireTaskOrigin = { save_global_event_target_as = FallenEmpireTaskOrigin }
			clear_global_event_target = FallenEmpireTaskOrigin
		}
	}
	after = {
		if = {
			limit = { exists = event_target:FallenEmpireTaskOrigin }
			country_event = { id = UniqueAscensionPerksEvents.73 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.1"
		trigger = { exists = event_target:fallen_empire_1 }
		hidden_effect = { event_target:fallen_empire_1 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.2"
		trigger = { exists = event_target:fallen_empire_2 }
		hidden_effect = { event_target:fallen_empire_2 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.3"
		trigger = { exists = event_target:fallen_empire_3 }
		hidden_effect = { event_target:fallen_empire_3 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.4"
		trigger = { exists = event_target:fallen_empire_4 }
		hidden_effect = { event_target:fallen_empire_4 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.5"
		trigger = { exists = event_target:fallen_empire_5 }
		hidden_effect = { event_target:fallen_empire_5 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Fallen.6"
		trigger = { exists = event_target:fallen_empire_6 }
		hidden_effect = { event_target:fallen_empire_6 = { save_event_target_as = FallenEmpireTaskOrigin } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.72.Abort"
		hidden_effect = { add_resource = { influence = 950 } }
		ai_chance = { factor = 0.1 } default_hide_option = yes
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.73
	title = fallen_empires_tasks.2.name
	desc = UniqueAscensionPerksEvents.73.Desc
	is_triggered_only = yes
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin.ruler
	}
	immediate = {
		event_target:FallenEmpireTaskOrigin = {
			add_opinion_modifier = { modifier = opinion_influenced_awaken_fallen_empire who = prevprev }
			if = {
				# limit = { merg_is_fallen_empire = yes is_machine_empire = yes }
				limit = { is_fallen_empire_machine = yes }
				country_event = { id = fallen_machine_empire.1 days = 360 random = 180 }
			}
			else = { country_event = { id = UniqueAscensionPerksEvents.74 days = 360 random = 180 } }
		}
		run_in_ai_mode = yes # Without this immediate is not invoked when event runs in a special mode that allows AI to collect trade data
	}
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.74
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = sleepers_awake_happened
		country_event = { id = fallen_empires_awakening.3 }
		# Notify players
		every_playable_country = { limit = { is_ai = no } country_event = { id = fallen_empires_awakening.2 } }
		observer_event = { id = observer.73 }
		# War in Heaven
		if = {
			limit = { has_leviathans = yes }
			random_list = {
				40 = { # War in Heaven with Fallen Empire of opposing ethos.
					random_country = {
						limit = {
							merg_is_fallen_empire = yes # merg_is_fallen_empire = yes
							NOR = { is_same_empire = root is_gestalt = yes }
							OR = {
								AND = { has_ethic = ethic_fanatic_xenophobe ROOT = { has_ethic = ethic_fanatic_xenophile } }
								AND = { has_ethic = ethic_fanatic_xenophile ROOT = { has_ethic = ethic_fanatic_xenophobe } }
								AND = { has_ethic = ethic_fanatic_spiritualist ROOT = { has_ethic = ethic_fanatic_materialist } }
								AND = { has_ethic = ethic_fanatic_materialist ROOT = { has_ethic = ethic_fanatic_spiritualist } }
							}
						}
						set_country_flag = sleepers_awake_ancient_rival
						set_timed_country_flag = { flag = timed_ancient_rival years = 10 }
						set_timed_country_flag = { flag = ai_no_wars years = 10 }
						root = { set_timed_country_flag = { flag = ai_no_wars years = 10 } }
						every_playable_country = {
							set_timed_country_flag = { flag = ai_no_wars years = 10 }
						}
					}
				}
				20 = { # War in Heaven with Fallen Empire of different ethos.
					random_country = {
						limit = {
							NOT = { is_same_empire = root }
							merg_is_fallen_empire = yes
							is_gestalt = no
						}
						set_country_flag = sleepers_awake_ancient_rival
						set_timed_country_flag = { flag = timed_ancient_rival years = 10 }
						set_timed_country_flag = { flag = ai_no_wars years = 10 }
						root = { set_timed_country_flag = { flag = ai_no_wars years = 10 } }
						every_playable_country = {
							set_timed_country_flag = { flag = ai_no_wars years = 10 }
						}
					}
				}
				40 = { } # No War in Heaven
			}
		}
	}
}

######################################
#									 #
######## Stability Celebration #######
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.80
	title = "ap_stability_celebration"
	desc = "ap_stability_celebration_desc"
	show_sound = event_celebration
	picture = GFX_evt_stability_celebration
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT add_resource = { unity = 2000 influence = 100 } }
}

planet_event = {
	id = UniqueAscensionPerksEvents.81
	title = "UniqueAscensionPerksEvents.81.Name"
	desc = "UniqueAscensionPerksEvents.81.Desc"
	show_sound = event_celebration
	picture = GFX_evt_stability_celebration
	location = root
	pre_triggers = { has_owner = yes is_ai = no }
	is_triggered_only = yes
	trigger = { owner = { NOR = { is_ai = yes has_country_flag = ap_stability_celebration_no_warning } } }
	option = { name = EXCELLENT }
	option = {
		name = "UniqueAscensionPerks.no_message"
		custom_tooltip = "UniqueAscensionPerks.no_message.tooltip"
		owner = { set_country_flag = ap_stability_celebration_no_warning }
	}
}

# v3.3 performance opt (on_half_yearly_pulse)
country_event = {
	id = UniqueAscensionPerksEvents.8082
	hide_window = yes
	# mean_time_to_happen = { months = 6 }
	is_triggered_only = yes
	trigger = {
		has_ascension_perk = ap_stability_celebration
		NOT = { has_country_flag = stability_celebration_message }
		any_owned_planet = {
			NOR = { has_modifier = stability_celebration has_modifier = stability_celebration_gestalt }
			planet_stability > 55
			planet_crime < 20
			free_housing > 0
			free_jobs > 0
			free_amenities > 0
			num_pops > 20
			OR = {
				AND = {
					root = {
						OR = { has_policy_flag = ai_full_rights is_synthetic_empire = yes }
					}
					count_owned_pop = {
						count > 20
						limit = {
							is_enslaved = no
							is_being_purged = no
							is_being_assimilated = no
							is_unemployed = no
							is_robot_pop = yes
						}
					}
				}
				count_owned_pop = {
					count > 20
					limit = {
						is_enslaved = no
						is_being_purged = no
						is_being_assimilated = no
						is_unemployed = no
						is_robot_pop = no
					}
				}
			}
		}
	}
	immediate = {
		random_owned_planet = {
			limit = {
				NOR = { has_modifier = stability_celebration has_modifier = stability_celebration_gestalt }
				planet_stability > 55
				planet_crime < 20
				free_housing > 0
				free_jobs > 0
				free_amenities > 0
				num_pops > 20
				OR = {
					AND = {
						root = {
							OR = { has_policy_flag = ai_full_rights is_synthetic_empire = yes }
						}
						count_owned_pop = {
							count > 20
							limit = {
								is_enslaved = no
								is_being_purged = no
								is_being_assimilated = no
								is_unemployed = no
								is_robot_pop = yes
							}
						}
					}
					count_owned_pop = {
						count > 20
						limit = {
							is_enslaved = no
							is_being_purged = no
							is_being_assimilated = no
							is_unemployed = no
							is_robot_pop = no
						}
					}
				}
			}
			if = {
				limit = { root = { is_gestalt = yes } }
				add_modifier = { modifier = stability_celebration_gestalt years = 10 }
			}
			else = {
				add_modifier = { modifier = stability_celebration years = 10 }
			}
			if = {
				limit = { root = { NOR = { is_ai = yes has_country_flag = ap_stability_celebration_no_warning } } }
				planet_event = { id = UniqueAscensionPerksEvents.81 }
			}
		}
		set_timed_country_flag = { flag = stability_celebration_message years = 3 }
		add_monthly_resource_mult = { resource = energy value = 4 min = 500 max = 2000 }
		add_monthly_resource_mult = { resource = minerals value = 4 min = 500 max = 2000 }
		add_monthly_resource_mult = { resource = influence value = 2 min = 15 max = 35 }
		add_monthly_resource_mult = { resource = unity value = 6 min = 100 max = 500 }
	}
}

######################################
#									 #
########### Galaxy Center ############
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.82
	title = "ap_galaxy_center"
	desc = "ap_galaxy_center_desc"
	show_sound = event_cityscape
	picture = GFX_evt_galaxy_center
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT }
}

planet_event = {
	id = UniqueAscensionPerksEvents.83
	title = "UniqueAscensionPerksEvents.83.Name"
	desc = "UniqueAscensionPerksEvents.83.Desc"
	show_sound = event_administrative_work
	picture = GFX_evt_galaxy_center
	location = root
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

planet_event = {
	id = UniqueAscensionPerksEvents.84
	show_sound = event_cityscape
	title = "ap_galaxy_center"
	desc = {
		trigger = {
			text = "UniqueAscensionPerksEvents.84.Desc"
			text = newline
			text = "UniqueAscensionPerksEvents.84.Energy"
			text = "UniqueAscensionPerksEvents.84.Mineral"
			text = "UniqueAscensionPerksEvents.84.Food"
			text = "UniqueAscensionPerksEvents.84.Research"
			success_text = { text = "UniqueAscensionPerksEvents.84.Trade" owner = { is_gestalt = no } }
			success_text = { text = "UniqueAscensionPerksEvents.84.Hive" owner = { is_hive_empire = yes } }
			success_text = { text = "UniqueAscensionPerksEvents.84.Auto" owner = { is_machine_empire = yes } }
			success_text = { text = "UniqueAscensionPerksEvents.84.Entrepot" owner = { is_machine_empire = yes } }
			text = newline
			success_text = { text = "UniqueAscensionPerksEvents.84.Casino.title" has_planet_flag = galaxy_center_casino }
			success_text = { text = "UniqueAscensionPerksEvents.84.Administration.title" has_planet_flag = galaxy_center_administration }
			success_text = { text = "UniqueAscensionPerksEvents.84.Museum.title" has_planet_flag = galaxy_center_museum }
			success_text = { text = "UniqueAscensionPerksEvents.84.Shipyard.Off" NOT = { has_planet_flag = galaxy_center_super_shipyard } }
			success_text = { text = "UniqueAscensionPerksEvents.84.Shipyard.On" has_planet_flag = galaxy_center_super_shipyard }
		}
	}
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = galaxy_center_room }
	is_triggered_only = yes
	location = root
	trigger = {
		has_planet_flag = galaxy_center_planet
		NOT = { has_planet_flag = decision_galaxy_center_cooldown }
	}
	immediate = {
		if = {
			limit = { NOT = { is_variable_set = galaxy_center_features } }
			set_variable = { which = galaxy_center_features value = 0 }
		}
	}
	option = {
		allow = { hidden_trigger = { check_variable = { which = galaxy_center_features value < 100 } } }
		name = "DEPOSITS_TITLE"
		hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.85 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.84.Casino"
		trigger = { NOT = { has_planet_flag = galaxy_center_casino } }
		allow = {
			custom_tooltip = { fail_text = UniqueAscensionPerksEvents.84.Req01 NOT = { has_planet_flag = galaxy_center_casino } }
			owner = { has_country_resource = { type = energy amount > 20000 } }
		}
		owner = { add_resource = { energy = -20000 } }
		hidden_effect = {
			set_planet_flag = galaxy_center_casino
			change_variable = { which = galaxy_center_casino value = 28000 }
			set_timed_planet_flag = { flag = decision_galaxy_center_cooldown months = 2 }
			set_saved_date = { key = galaxy_center_planet_cooldown days_from_present = 60 expires = 60 }
			# planet_event = { id = UniqueAscensionPerksEvents.84 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.84.Administration"
		trigger = { NOT = { has_planet_flag = galaxy_center_administration } }
		allow = {
			custom_tooltip = { fail_text = UniqueAscensionPerksEvents.84.Req02 NOT = { has_planet_flag = galaxy_center_administration } }
			owner = { has_country_resource = { type = minerals amount > 15000 } }
		}
		owner = { add_resource = { minerals = -15000 } }
		hidden_effect = {
			set_planet_flag = galaxy_center_administration
			change_variable = { which = galaxy_center_administration value = 35 }
			set_timed_planet_flag = { flag = decision_galaxy_center_cooldown months = 2 }
			set_saved_date = { key = galaxy_center_planet_cooldown days_from_present = 60 expires = 60 }
			# planet_event = { id = UniqueAscensionPerksEvents.84 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.84.Museum"
		trigger = { NOT = { has_planet_flag = galaxy_center_museum } }
		allow = {
			custom_tooltip = { fail_text = UniqueAscensionPerksEvents.84.Req03 NOT = { has_planet_flag = galaxy_center_museum } }
			owner = { has_country_resource = { type = minerals amount > 15000 } }
		}
		owner = { add_resource = { minerals = -15000 } }
		hidden_effect = {
			set_planet_flag = galaxy_center_museum
			change_variable = { which = galaxy_center_museum value = 7500 }
			set_timed_planet_flag = { flag = decision_galaxy_center_cooldown months = 2 }
			set_saved_date = { key = galaxy_center_planet_cooldown days_from_present = 60 expires = 60 }
			# planet_event = { id = UniqueAscensionPerksEvents.84 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.84.Shipyard"
		trigger = { NOT = { has_planet_flag = galaxy_center_super_shipyard } }
		allow = { owner = { has_country_resource = { type = minerals amount > 15000 } } }
		owner = { add_resource = { minerals = -15000 } }
		hidden_effect = {
			set_planet_flag = galaxy_center_super_shipyard
			set_timed_planet_flag = { flag = decision_galaxy_center_cooldown months = 3 }
			set_saved_date = { key = galaxy_center_planet_cooldown days_from_present = 90 expires = 90 }
			# planet_event = { id = UniqueAscensionPerksEvents.84 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.84.ShipyardMenu"
		trigger = { has_planet_flag = galaxy_center_super_shipyard }
		custom_tooltip = "UniqueAscensionPerksEvents.84.ShipyardMenu.tooltip"
		hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.3086 } }
	}
	option = { name = EXIT ai_chance = { factor = 0.1 } default_hide_option = yes }
}

## Planetary Features
planet_event = {
	id = UniqueAscensionPerksEvents.85
	title = "UniqueAscensionPerksEvents.85.Name"
	desc = {
		trigger = {
			text = "UniqueAscensionPerksEvents.85.Desc"
			text = newline
			text = "UniqueAscensionPerksEvents.84.Energy"
			text = "UniqueAscensionPerksEvents.84.Mineral"
			text = "UniqueAscensionPerksEvents.84.Food"
			text = "UniqueAscensionPerksEvents.84.Research"
			success_text = { text = "UniqueAscensionPerksEvents.84.Trade"		owner = { is_gestalt = no } }
			success_text = { text = "UniqueAscensionPerksEvents.84.Hive"		owner = { is_hive_empire = yes } }
			success_text = { text = "UniqueAscensionPerksEvents.84.Auto"		owner = { is_synthetic_empire = yes } }
			success_text = { text = "UniqueAscensionPerksEvents.84.Entrepot"	owner = { is_machine_empire = yes } }
		}
	}
	show_sound = event_cityscape
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = galaxy_center_room }
	is_triggered_only = yes
	location = root
	trigger = {
		has_planet_flag = galaxy_center_planet
		NOT = { has_planet_flag = decision_galaxy_center_cooldown }
	}
	option = {
		name = "d_energy_generator"
		allow = { owner = { has_country_resource = { type = minerals amount > 1000 } has_country_resource = { type = energy amount > 1000 } } }
		owner = { add_resource = { energy = -1000 minerals = -1000 } }
		add_deposit = d_energy_generator
		hidden_effect = { change_variable = { which = energy_generator value = 1 } change_variable = { which = galaxy_center_features value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_mineral_replicator"
		allow = { owner = { has_country_resource = { type = minerals amount > 1000 } has_country_resource = { type = energy amount > 1000 } } }
		owner = { add_resource = { energy = -1000 minerals = -1000 } }
		add_deposit = d_mineral_replicator
		hidden_effect = { change_variable = { which = mineral_replicator value = 1 } change_variable = { which = galaxy_center_features value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_house_farming"
		allow = { owner = { has_country_resource = { type = minerals amount > 1000 } has_country_resource = { type = energy amount > 1000 } } }
		owner = { add_resource = { energy = -1000 minerals = -1000 } }
		add_deposit = d_house_farming
		hidden_effect = { change_variable = { which = house_farming value = 1 } change_variable = { which = galaxy_center_features value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_research_center"
		allow = { owner = { has_country_resource = { type = minerals amount > 1000 } has_country_resource = { type = energy amount > 1000 } } }
		owner = { add_resource = { energy = -1000 minerals = -1000 } }
		add_deposit = d_research_center
		hidden_effect = { change_variable = { which = research_center value = 1 } change_variable = { which = galaxy_center_features value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_trade_depot"
		allow = { owner = { is_gestalt = no has_country_resource = { type = minerals amount > 1000 } has_country_resource = { type = energy amount > 1000 } } }
		owner = { add_resource = { energy = -1000 minerals = -1000 } }
		add_deposit = d_trade_depot
		hidden_effect = { change_variable = { which = trade_depot value = 1 } change_variable = { which = galaxy_center_features value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_hivemind_node"
		trigger = { is_lithoid_empire = no }
		allow = { owner = { is_hive_empire = yes has_country_resource = { type = food amount > 1000 } has_country_resource = { type = energy amount > 1000 } } }
		owner = { add_resource = { energy = -1000 food = -1000 } }
		add_deposit = d_hivemind_node
		hidden_effect = { change_variable = { which = hivemind_node value = 1 } change_variable = { which = galaxy_center_features value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_hivemind_node"
		trigger = { is_lithoid_empire = yes }
		allow = { owner = { is_hive_empire = yes has_country_resource = { type = minerals amount > 1000 } has_country_resource = { type = energy amount > 1000 } } }
		owner = { add_resource = { energy = -1000 minerals = -1000 } }
		add_deposit = d_hivemind_node
		hidden_effect = { change_variable = { which = hivemind_node value = 1 } change_variable = { which = galaxy_center_features value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_auto_factory"
		allow = { owner = { is_synthetic_empire = yes has_country_resource = { type = minerals amount > 1000 } has_country_resource = { type = energy amount > 1000 } } }
		owner = { add_resource = { energy = -1000 minerals = -1000 } }
		add_deposit = d_auto_factory
		hidden_effect = { change_variable = { which = auto_factory value = 1 } change_variable = { which = galaxy_center_features value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = {
		name = "d_unit_entrepot"
		allow = { owner = { is_machine_empire = yes has_country_resource = { type = minerals amount > 1000 } has_country_resource = { type = energy amount > 1000 } } }
		owner = { add_resource = { energy = -1000 minerals = -1000 } }
		add_deposit = d_unit_entrepot
		hidden_effect = { change_variable = { which = unity_entrepot value = 1 } change_variable = { which = galaxy_center_features value = 1 } }
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.85.Desc"
	}
	option = { name = BACK hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.84 } } ai_chance = { factor = 0.1 } default_hide_option = yes }
}

planet_event = {
	id = UniqueAscensionPerksEvents.3086
	title = "UniqueAscensionPerksEvents.3086.Name"
	desc = "UniqueAscensionPerksEvents.3086.Desc"
	show_sound = event_cityscape
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = galaxy_center_room }
	is_triggered_only = yes
	location = root
	pre_triggers = { has_owner = yes }
	trigger = {
		has_planet_flag = galaxy_center_planet
		NOT = { has_planet_flag = decision_galaxy_center_cooldown }
	}
	immediate = {

	}
	option = {
		name = "CORVETTE"
		allow = { owner = { has_country_resource = { type = alloys amount > 150 } } }
		owner = { add_resource = { alloys = -150 } }
		# galaxy_center_build_corvette = yes
		create_fleet = {
			effect = {
				set_owner = root.owner
				create_ship = { name = random design = "Standard Basic Corvette" }
				set_location = { target = root distance = 8 angle = random }
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 1000
				set_fleet_flag = recovery_fleet
			}
		}
		hidden_effect = {
			set_timed_planet_flag = { flag = decision_galaxy_center_cooldown days = 8 }
			set_saved_date = { key = galaxy_center_planet_cooldown days_from_present = 8 expires = 8 }
		}
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.3086.Desc"
	}
	option = {
		name = "DESTROYER"
		allow = { owner = { has_country_resource = { type = alloys amount > 300 } has_technology = tech_destroyers } }
		owner = { add_resource = { alloys = -300 } }
		# galaxy_center_build_destroyer = yes
		create_fleet = {
			effect = {
				set_owner = root.owner
				create_ship = { name = random design = "Standard Basic Destroyer" }
				set_location = { target = root distance = 8 angle = random }
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 1000
				set_fleet_flag = recovery_fleet
			}
		}
		hidden_effect = {
			set_timed_planet_flag = { flag = decision_galaxy_center_cooldown days = 14 }
			set_saved_date = { key = galaxy_center_planet_cooldown days_from_present = 14 expires = 14 }
		}
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.3086.Desc"
	}
	option = {
		name = "CRUISER"
		allow = { owner = { has_country_resource = { type = alloys amount > 550 } has_technology = tech_cruisers } }
		owner = { add_resource = { alloys = -550 } }
		# galaxy_center_build_cruiser = yes
		create_fleet = {
			effect = {
				set_owner = root.owner
				create_ship = { name = random design = "Standard Basic Cruiser" }
				set_location = { target = root distance = 8 angle = random }
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 1000
				set_fleet_flag = recovery_fleet
			}
		}
		hidden_effect = {
			set_timed_planet_flag = { flag = decision_galaxy_center_cooldown days = 20 }
			set_saved_date = { key = galaxy_center_planet_cooldown days_from_present = 20 expires = 20 }
		}
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.3086.Desc"
	}
	option = {
		name = "BATTLESHIP"
		allow = { owner = { has_country_resource = { type = alloys amount > 900 } has_technology = tech_battleships } }
		owner = { add_resource = { alloys = -900 } }
		# galaxy_center_build_battleship = yes
		create_fleet = {
			effect = {
				set_owner = root.owner
				create_ship = { name = random design = "Standard Basic Battleship" }
				set_location = { target = root distance = 8 angle = random }
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 1000
				set_fleet_flag = recovery_fleet
			}
		}
		hidden_effect = {
			set_timed_planet_flag = { flag = decision_galaxy_center_cooldown months = 1 }
			set_saved_date = { key = galaxy_center_planet_cooldown days_from_present = 30 expires = 30 }
		}
		is_dialog_only = yes
		response_text = "UniqueAscensionPerksEvents.3086.Desc"
	}
	option = { name = BACK hidden_effect = { planet_event = { id = UniqueAscensionPerksEvents.84 } } ai_chance = { factor = 0.1 } default_hide_option = yes }
}
# on_bi_yearly_pulse
event = {
	id = UniqueAscensionPerksEvents.86
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_playable_country = {
			has_ascension_perk = ap_galaxy_center
			any_owned_planet = { has_planet_flag = galaxy_center_planet }
		}
	}
	immediate = {
		# galaxy_center_yearly_effect = yes
		random_playable_country = {
			limit = {
				has_ascension_perk = ap_galaxy_center
				any_owned_planet = {
					has_planet_flag = galaxy_center_planet
					OR = { has_planet_flag = galaxy_center_casino has_planet_flag = galaxy_center_administration has_planet_flag = galaxy_center_museum }
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = galaxy_center_planet
					OR = { has_planet_flag = galaxy_center_casino has_planet_flag = galaxy_center_administration has_planet_flag = galaxy_center_museum }
				}
				if = {
					limit = { has_planet_flag = galaxy_center_casino }
					set_variable = { which = galaxy_center_casino value = 0 }
					while = { count = 750
						random_list = {
							1 = {}
							2 = { change_variable = { which = galaxy_center_casino value = 1 } }
							1 = { change_variable = { which = galaxy_center_casino value = 2 } }
							1 = { change_variable = { which = galaxy_center_casino value = 3 } }
							1 = { change_variable = { which = galaxy_center_casino value = -1 } }
						}
					}
					owner = { add_resource = { energy = 100 mult = galaxy_center_casino } }
				}
				if = {
					limit = { has_planet_flag = galaxy_center_administration }
					set_variable = { which = galaxy_center_administration value = 0 }
					while = { count = 75
						random_list = {
							1 = {}
							2 = { change_variable = { which = galaxy_center_administration value = 1 } }
							1 = { change_variable = { which = galaxy_center_administration value = 2 } }
							1 = { change_variable = { which = galaxy_center_administration value = 3 } }
							1 = { change_variable = { which = galaxy_center_administration value = -1 } }
						}
					}
					owner = { add_resource = { influence = 1 mult = galaxy_center_administration } }
				}
				if = {
					limit = { has_planet_flag = galaxy_center_museum }
					set_variable = { which = galaxy_center_museum value = 0 }
					while = { count = 250
						random_list = {
							1 = {}
							2 = { change_variable = { which = galaxy_center_museum value = 1 } }
							1 = { change_variable = { which = galaxy_center_museum value = 2 } }
							1 = { change_variable = { which = galaxy_center_museum value = 3 } }
							1 = { change_variable = { which = galaxy_center_museum value = -1 } }
						}
					}
					owner = { add_resource = { unity = 100 mult = galaxy_center_museum } }
				}
			}
		}
	}
}

######################################
#									 #
###### Influenceable Population ######
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.87
	title = "ap_advanced_government_1"
	desc = "ap_advanced_government_1_desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_galactic_senate
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT }
}
# on_monthly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.4088
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 1 }
	# trigger = {
	# 	has_ascension_perk = ap_advanced_government_1
	# 	any_owned_pop = { exists = planet pop_has_right_ethics = no }
	# }
	immediate = {
		# shift_all_pops_ethics while = { limit = { any_owned_pop = { pop_has_right_ethics = no } }
		every_owned_planet = {
			limit = { any_owned_pop = { pop_has_right_ethics = no } }
			random_owned_pop = {
				limit = { pop_has_right_ethics = no }
				clear_ethos = yes
				random_list = {
					500 = { modifier = { factor = 0.01 NOT = { root = { has_ethic = ethic_materialist	} } } modifier = { factor = 100 root = { has_ethic = ethic_fanatic_materialist } }		pop_change_ethic = ethic_materialist }
					500 = { modifier = { factor = 0.01 NOT = { root = { has_ethic = ethic_spiritualist	} } } modifier = { factor = 100 root = { has_ethic = ethic_fanatic_spiritualist } }		pop_change_ethic = ethic_spiritualist }
					500 = { modifier = { factor = 0.01 NOT = { root = { has_ethic = ethic_xenophile		} } } modifier = { factor = 100 root = { has_ethic = ethic_fanatic_xenophile } }		pop_change_ethic = ethic_xenophile }
					500 = { modifier = { factor = 0.01 NOT = { root = { has_ethic = ethic_xenophobe		} } } modifier = { factor = 100 root = { has_ethic = ethic_fanatic_xenophobe } }		pop_change_ethic = ethic_xenophobe }
					500 = { modifier = { factor = 0.01 NOT = { root = { has_ethic = ethic_militarist	} } } modifier = { factor = 100 root = { has_ethic = ethic_fanatic_militarist } }		pop_change_ethic = ethic_militarist }
					500 = { modifier = { factor = 0.01 NOT = { root = { has_ethic = ethic_pacifist		} } } modifier = { factor = 100 root = { has_ethic = ethic_fanatic_pacifist } }			pop_change_ethic = ethic_pacifist }
					500 = { modifier = { factor = 0.01 NOT = { root = { has_ethic = ethic_egalitarian	} } } modifier = { factor = 100 root = { has_ethic = ethic_fanatic_egalitarian } }		pop_change_ethic = ethic_egalitarian }
					500 = { modifier = { factor = 0.01 NOT = { root = { has_ethic = ethic_authoritarian	} } } modifier = { factor = 100 root = { has_ethic = ethic_fanatic_authoritarian } }	pop_change_ethic = ethic_authoritarian }
					# (Mod) Ethics and Civics Classic
					# modifier = { factor = 0 NOT = { has_global_flag = cultural_overhaul_active } }
					inline_script = {
						script = merger_of_rules/toggled_code
						code = "
					2000 = {
						modifier = { factor = 25 has_global_flag = cultural_overhaul_active root = { OR = { has_ethic = ethic_fanatic_green has_ethic = ethic_fanatic_industrial has_ethic = ethic_fanatic_socialism has_ethic = ethic_fanatic_capitalism } } }
						random_list = {
							500 = { modifier = { factor = 0 NOT = { root = { has_ethic = ethic_green		} } } modifier = { factor = 10 root = { has_ethic = ethic_fanatic_green } }			pop_change_ethic = ethic_green }
							500 = { modifier = { factor = 0 NOT = { root = { has_ethic = ethic_industrial	} } } modifier = { factor = 10 root = { has_ethic = ethic_fanatic_industrial } }	pop_change_ethic = ethic_industrial }
							500 = { modifier = { factor = 0 NOT = { root = { has_ethic = ethic_socialism	} } } modifier = { factor = 10 root = { has_ethic = ethic_fanatic_socialism } }		pop_change_ethic = ethic_socialism }
							500 = { modifier = { factor = 0 NOT = { root = { has_ethic = ethic_capitalism	} } } modifier = { factor = 10 root = { has_ethic = ethic_fanatic_capitalism } }	pop_change_ethic = ethic_capitalism }
						}
					}
						"
						toggle = @[ has_eca_funefork + has_bug_branch + has_ecc_cog + post_revolutionary_re_revolution_years ]
					}

				}
			}
		}
	}
}

# Root = event_target:ethic_planet
planet_event = {
	id = UniqueAscensionPerksEvents.4089
	title = "decision_ethic_shift"
	desc = "UniqueAscensionPerksEvents.4089.Desc"
	show_sound = event_celebration
	picture = GFX_evt_alien_propaganda
	location = root # event_target:ethic_planet
	is_triggered_only = yes
	immediate = {
		# set_variable = { which = num_ethic_pop_on_planet value = value:num_ethic_pop_on_planet }
		export_trigger_value_to_variable = {
			trigger = count_owned_pop
			parameters = {
				limit = { pop_has_right_ethics = yes }
			}
			variable = num_ethic_pop_on_planet
		}
		set_variable = { which = unity_needed_on_planet value = num_ethic_pop_on_planet }
		multiply_variable = { which = unity_needed_on_planet value = 5 }
	}
	option = {
		name = EXCELLENT
		owner = {
			if = {
				limit = { has_country_resource = { type = unity amount > root.unity_needed_on_planet } }
				add_resource = { influence = 1 unity = -5 mult = root.num_ethic_pop_on_planet }

			}

			else = {
				while = { count = root.num_ethic_pop_on_planet
					limit = { has_country_resource = { type = unity amount > 4 } }
					add_resource = { influence = 1 unity = -5 }
				}
			}
		}
		hidden_effect = { clear_variable = num_ethic_pop_on_planet clear_variable = unity_needed_on_planet }
		# hidden_effect = {
		# 	if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 10 } } owner = { add_resource = { influence = 10 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 20 } } owner = { add_resource = { influence = 20 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 30 } } owner = { add_resource = { influence = 30 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 40 } } owner = { add_resource = { influence = 40 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 50 } } owner = { add_resource = { influence = 50 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 60 } } owner = { add_resource = { influence = 60 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 70 } } owner = { add_resource = { influence = 70 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 80 } } owner = { add_resource = { influence = 80 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 90 } } owner = { add_resource = { influence = 90 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 100 } } owner = { add_resource = { influence = 100 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 110 } } owner = { add_resource = { influence = 110 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 120 } } owner = { add_resource = { influence = 120 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 130 } } owner = { add_resource = { influence = 130 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 140 } } owner = { add_resource = { influence = 140 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 150 } } owner = { add_resource = { influence = 150 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 160 } } owner = { add_resource = { influence = 160 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 170 } } owner = { add_resource = { influence = 170 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 180 } } owner = { add_resource = { influence = 180 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 190 } } owner = { add_resource = { influence = 190 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count < 200 } } owner = { add_resource = { influence = 200 } } }
		# 	else_if = { limit = { count_owned_pop = { limit = { pop_has_right_ethics = yes } count >= 200 } } owner = { add_resource = { influence = 200 } } }
		# }
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.4090
	title = "UniqueAscensionPerksEvents.4090.Name"
	desc = "UniqueAscensionPerksEvents.4090.Desc"
	picture = GFX_evt_galactic_senate
	show_sound = event_conversation
	location = root # event_target:ethic_planet
	is_triggered_only = yes
	immediate = { remove_planet_flag = decision_ethic_shift_cooldown }
	option = { name = OK }
}

### Blind Faith into the Nation ###
country_event = {
	id = UniqueAscensionPerksEvents.88
	title = "ap_advanced_government_2"
	desc = "ap_advanced_government_2_desc"
	show_sound = event_psionic
	picture = GFX_evt_unity_symbol
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.89 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.89
	show_sound = event_administrative_work
	title = "ap_advanced_government_2"
	desc = {
		trigger = {
			text = "UniqueAscensionPerksEvents.89.Desc"
			text = newline
			success_text = { text = "Unity.Gain.Militarist" is_militarist = yes }
			success_text = { text = "Unity.Gain.Pacifist" is_pacifist = yes }
			success_text = { text = "Unity.Gain.Xenophile" is_xenophile = yes }
			success_text = { text = "Unity.Gain.Xenophobe" is_xenophobe = yes }
			success_text = { text = "Unity.Gain.Materialist" is_materialist = yes }
			success_text = { text = "Unity.Gain.Spiritualist" is_spiritualist = yes }
			success_text = { text = "Unity.Gain.Authoritarian" is_authoritarian = yes }
			success_text = { text = "Unity.Gain.Egalitarian" is_egalitarian = yes }
			success_text = { text = "Unity.Gain.Gestalt" is_gestalt = yes }
		}
	}
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = ethic_spaceship_room }
	is_triggered_only = yes
	option = { name = "distar.7.b" }
}

country_event = {
	id = UniqueAscensionPerksEvents.90
	title = "UniqueAscensionPerksEvents.90.Name"
	desc = "UniqueAscensionPerksEvents.90.Desc"
	picture = GFX_evt_unity_symbol
	show_sound = event_think_tank_build_upgrade
	location = from
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

######################################
#									 #
######### Eternal Vigilance ##########
#									 #
######################################

# event = {
# 	id = UniqueAscensionPerksEvents.128
# 	hide_window = yes
# 	is_triggered_only = yes
# 	immediate = {
# 		random_playable_country = {
# 			limit = { has_ascension_perk = ap_eternal_vigilance NOT = { has_country_flag = ap_eternal_vigilance_project_available } }
# 			country_event = { id = UniqueAscensionPerksEvents.129 }
# 		}
# 	}
# }

country_event = {
	id = UniqueAscensionPerksEvents.129
	title = "ap_eternal_vigilance"
	desc = "ap_eternal_vigilance_desc"
	show_sound = event_ship_bridge
	picture = GFX_evt_eternal_vigilance
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes set_country_flag = ap_eternal_vigilance_project_available }
	option = { name = EXCELLENT enable_special_project = { name = ETERNAL_VIGILANCE location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.130
	title = "ETERNAL_VIGILANCE"
	desc = "UniqueAscensionPerksEvents.130.Desc"
	show_sound = event_ship_bridge
	picture = GFX_evt_eternal_vigilance
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes set_country_flag = ap_eternal_vigilance_project }
	option = { name = EXCELLENT }
}

# on_bi_yearly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.131
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { years = 2 }
	trigger = {
		has_ascension_perk = ap_eternal_vigilance
		has_country_flag = ap_eternal_vigilance_project
		any_owned_starbase = {
			NOR = {
				has_starbase_flag = vigilance_starbase
				fleet = { is_in_frontier_space = yes }
				fleet = { has_modifier = eternal_vigilance_fleet }
			}
		}
		# any_system_within_border = { NOR = { is_in_frontier_space = yes has_star_flag = vigilance_system any_fleet_in_system = { has_fleet_flag = eternal_vigilance_fleet exists = owner is_owned_by = root } } }
	}
	immediate = {
		random_owned_starbase = {
			limit = {
				has_starbase_size >= starbase_starhold
				exists = fleet
				NOR = {
					has_starbase_flag = vigilance_starbase
					fleet = { is_in_frontier_space = yes }
					# fleet = { has_modifier = eternal_vigilance_fleet }
				}
			}
			set_timed_starbase_flag = { flag = vigilance_starbase years = 15 }
			fleet = {
				if = {
					limit = { NOT = { has_modifier = eternal_vigilance_fleet } }
					create_ship = { name = random random_existing_design = military_station_small }
					while = { count = 3
						random = { chance = 50 create_ship = { name = random random_existing_design = military_station_small } }
					}
					add_modifier = { modifier = eternal_vigilance_fleet }
				}
			}
			solar_system = {
				if = {
					limit = {
						is_on_border = yes
						any_system_colony = {
							is_owned_by = root
							has_orbital_station = yes
							orbital_station = { NOT = { has_modifier = eternal_vigilance_fleet } }
						}
					}
					random_system_colony = {
						limit = {
							is_owned_by = root
							has_orbital_station = yes
							orbital_station = { NOT = { has_modifier = eternal_vigilance_fleet } }
						}
						orbital_station = {
							create_ship = { name = random random_existing_design = military_station_small }
							while = { count = 2
								random = { chance = 50 create_ship = { name = random random_existing_design = military_station_small } }
							}
							add_modifier = { modifier = eternal_vigilance_fleet }
						}
					}
				}
			}
		}
		# random_system_within_border = {
		# 	limit = { NOR = { is_in_frontier_space = yes has_star_flag = vigilance_system any_fleet_in_system = { has_fleet_flag = eternal_vigilance_fleet exists = owner is_owned_by = root } } }
		# 	set_timed_star_flag = { flag = vigilance_system years = 15 }
		# 	# star = { save_event_target_as = spawn_location }
		# 	create_fleet = {
		# 		name = "eternal_vigilance_fleet"
		# 		settings = { spawn_debris = no uses_naval_capacity = no }
		# 		effect = {
		# 			set_owner = root
		# 			create_ship = { name = random random_existing_design = military_station_small }
		# 			while = { count = 3
		# 				random = { chance = 50 create_ship = { name = random random_existing_design = military_station_small } }
		# 			}
		# 			set_location = { target = prev.star distance = 100 angle = random }
		# 			set_fleet_flag = eternal_vigilance_fleet
		# 			add_modifier = { modifier = eternal_vigilance_fleet }
		# 		}
		# 	}
		# }
	}
}
# on_half_yearly_pulse
country_event = {
	id = UniqueAscensionPerksEvents.132
	hide_window = yes
	# mean_time_to_happen = { months = 6 }
	is_triggered_only = yes
	# trigger = {
	# 	host_has_dlc = "Apocalypse"
	# 	has_ascension_perk = ap_eternal_vigilance
	# 	has_country_flag = ap_eternal_vigilance_project
	# 	has_technology = tech_titans
	# 	any_owned_starbase = { NOT = { has_starbase_flag = vigilance_starbase } }
	# }
	immediate = {
		random_owned_starbase = {
			limit = {
				has_starbase_size > starbase_starhold
				exists = fleet
				NOR = {
					has_starbase_flag = vigilance_starbase
					fleet = { is_in_frontier_space = yes }
					# fleet = { any_owned_ship = { has_modifier = eternal_vigilance_fleet } }
				}
			}
			set_timed_starbase_flag = { flag = vigilance_starbase years = 15 }
			fleet = {
				if = {
					limit = { count_owned_ship = { limit = { has_modifier = eternal_vigilance_fleet } count = 0 } }
					create_ship = {
						name = "eternal_vigilance_fleet" random_existing_design = ion_cannon
						effect = { add_modifier = { modifier = eternal_vigilance_fleet } }
					}
				}
			}
			solar_system = {
				if = {
					limit = {
						is_on_border = yes
						any_system_colony = {
							is_owned_by = root
							has_orbital_station = yes
							orbital_station = { NOT = { has_modifier = eternal_vigilance_fleet } }
						}
					}
					random_system_colony = {
						limit = {
							is_owned_by = root
							has_orbital_station = yes
							orbital_station = { NOT = { has_modifier = eternal_vigilance_fleet } }
						}
						orbital_station = {
							create_ship = { name = "eternal_vigilance_fleet" random_existing_design = ion_cannon }
							add_modifier = { modifier = eternal_vigilance_fleet }
						}
					}
				}
			}
		}
		# random_owned_planet = {
		# 	limit = { NOT = { has_planet_flag = vigilance_planet } }
		# 	save_event_target_as = spawn_location
		# 	set_timed_planet_flag = { flag = vigilance_starbase years = 15 }
		# 	create_fleet = {
		# 		name = "eternal_vigilance_fleet"
		# 		settings = { spawn_debris = no uses_naval_capacity = no }
		# 		effect = {
		# 			set_owner = root
		# 			create_ship = { name = random random_existing_design = ion_cannon }
		# 			set_location = { target = prev distance = 8 angle = random }
		# 			set_fleet_flag = eternal_vigilance_ion_cannon
		# 			add_modifier = { modifier = eternal_vigilance_fleet }
		# 		}
		# 	}
		# }
	}
}

######################################
#									 #
########## Powerful Vassals ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.142
	title = "ap_powerful_vassals"
	desc = "ap_powerful_vassals_desc"
	show_sound = event_mystic_reveal_light
	picture = GFX_evt_powerful_vassals
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT }
}
# Via edict
country_event = {
	id = UniqueAscensionPerksEvents.8143
	title = "UniqueAscensionPerksEvents.8143.Name"
	desc = "UniqueAscensionPerksEvents.8143.Desc"
	show_sound = event_construction
	picture = GFX_evt_hangar_bay
	is_triggered_only = yes
	immediate = {
		random_subject = { limit = { is_valid_vassal = yes }
			save_event_target_as = country_1
			root = { random_subject = { limit = { is_valid_vassal = yes NOT = { is_same_empire = event_target:country_1 } }
				save_event_target_as = country_2
				root = { random_subject = { limit = { is_valid_vassal = yes NOR = { is_same_empire = event_target:country_1 is_same_empire = event_target:country_2 } }
					save_event_target_as = country_3
					root = { random_subject = { limit = { is_valid_vassal = yes NOR = { is_same_empire = event_target:country_1 is_same_empire = event_target:country_2 is_same_empire = event_target:country_3 } }
						save_event_target_as = country_4
						root = { random_subject = { limit = { is_valid_vassal = yes NOR = { is_same_empire = event_target:country_1 is_same_empire = event_target:country_2 is_same_empire = event_target:country_3 is_same_empire = event_target:country_4 } }
							save_event_target_as = country_5
							root = { random_subject = { limit = { is_valid_vassal = yes NOR = { is_same_empire = event_target:country_1 is_same_empire = event_target:country_2 is_same_empire = event_target:country_3 is_same_empire = event_target:country_4 is_same_empire = event_target:country_5 } } save_event_target_as = country_6 } }
						} }
					} }
				} }
			} }
		}
		if = {
			limit = { exists = event_target:VassalNavyInvestmentTarget }
			no_scope = { save_event_target_as = VassalNavyInvestmentTarget }
		}
	}
	after = {
		if = {
			limit = {
				exists = event_target:VassalNavyInvestmentTarget
				event_target:VassalNavyInvestmentTarget = { is_scope_valid = yes is_scope_type = country }
				NOT = { has_active_event = { UniqueAscensionPerksEvents.8144 } }
			}
			country_event = { id = UniqueAscensionPerksEvents.8144 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.1"
		trigger = { exists = event_target:country_1 }
		hidden_effect = { event_target:country_1 = { save_event_target_as = VassalNavyInvestmentTarget } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.2"
		trigger = { exists = event_target:country_2 }
		hidden_effect = { event_target:country_2 = { save_event_target_as = VassalNavyInvestmentTarget } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.3"
		trigger = { exists = event_target:country_3 }
		hidden_effect = { event_target:country_3 = { save_event_target_as = VassalNavyInvestmentTarget } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.4"
		trigger = { exists = event_target:country_4 }
		hidden_effect = { event_target:country_4 = { save_event_target_as = VassalNavyInvestmentTarget } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.5"
		trigger = { exists = event_target:country_5 }
		hidden_effect = { event_target:country_5 = { save_event_target_as = VassalNavyInvestmentTarget } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.206.Country.6"
		trigger = { exists = event_target:country_6 }
		hidden_effect = { event_target:country_6 = { save_event_target_as = VassalNavyInvestmentTarget } }
	}
	option = {
		name = "UniqueAscensionPerks.select_country"
		trigger = { exists = event_target:country_6 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.8143 scopes = { from = from } } }
		ai_chance = { factor = 0 }
	}
	option = {
		name = ABORT ai_chance = { factor = 0.1 } default_hide_option = yes
		hidden_effect = { no_scope = { save_event_target_as = VassalNavyInvestmentTarget } }
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.8144
	title = "UniqueAscensionPerksEvents.8144.Name"
	desc = "UniqueAscensionPerksEvents.8144.Desc"
	show_sound = event_construction
	picture = GFX_evt_hangar_bay
	is_triggered_only = yes
	trigger = { exists = event_target:VassalNavyInvestmentTarget }
	immediate = { event_target:VassalNavyInvestmentTarget = { save_event_target_as = VassalNavyInvestmentTarget } }
	option = {
		name = UniqueAscensionPerksEvents.8144.Investment.1
		allow = { has_country_resource = { type = alloys amount > 2000 } has_country_resource = { type = energy amount > 1000 } }
		add_resource = { alloys = -2000 energy = -1000 }
		hidden_effect = { event_target:VassalNavyInvestmentTarget = { save_event_target_as = VassalNavyInvestmentTarget set_country_flag = subject_navy_investment_1 } country_event = { id = UniqueAscensionPerksEvents.8145 days = 30 random = 15 } country_event = { id = UniqueAscensionPerksEvents.8146 } }
		custom_tooltip = "UniqueAscensionPerksEvents.8144.Investment.1.tooltip"
	}
	option = {
		name = UniqueAscensionPerksEvents.8144.Investment.2
		allow = { has_country_resource = { type = alloys amount > 5000 } has_country_resource = { type = energy amount > 2000 } }
		add_resource = { alloys = -5000 energy = -2000 }
		hidden_effect = { event_target:VassalNavyInvestmentTarget = { save_event_target_as = VassalNavyInvestmentTarget set_country_flag = subject_navy_investment_2 } country_event = { id = UniqueAscensionPerksEvents.8145 days = 60 random = 30 } country_event = { id = UniqueAscensionPerksEvents.8146 } }
		custom_tooltip = "UniqueAscensionPerksEvents.8144.Investment.2.tooltip"
	}
	option = {
		name = UniqueAscensionPerksEvents.8144.Investment.3
		allow = { has_country_resource = { type = alloys amount > 10000 } has_country_resource = { type = energy amount > 4000 } }
		add_resource = { alloys = -10000 energy = -4000 }
		hidden_effect = { event_target:VassalNavyInvestmentTarget = { save_event_target_as = VassalNavyInvestmentTarget set_country_flag = subject_navy_investment_3 } country_event = { id = UniqueAscensionPerksEvents.8145 days = 120 random = 60 } country_event = { id = UniqueAscensionPerksEvents.8146 } }
		custom_tooltip = "UniqueAscensionPerksEvents.8144.Investment.3.tooltip"
	}
	option = {
		name = UniqueAscensionPerksEvents.8144.Investment.4
		allow = { has_country_resource = { type = alloys amount > 20000 } has_country_resource = { type = energy amount > 8000 } }
		add_resource = { alloys = -20000 energy = -8000 }
		hidden_effect = { event_target:VassalNavyInvestmentTarget = { save_event_target_as = VassalNavyInvestmentTarget set_country_flag = subject_navy_investment_4 } country_event = { id = UniqueAscensionPerksEvents.8145 days = 240 random = 120 } country_event = { id = UniqueAscensionPerksEvents.8146 } }
		custom_tooltip = "UniqueAscensionPerksEvents.8144.Investment.4.tooltip"
	}
	option = {
		name = UniqueAscensionPerksEvents.8144.Investment.5
		allow = { has_country_resource = { type = alloys amount > 40000 } has_country_resource = { type = energy amount > 16000 } }
		add_resource = { alloys = -40000 energy = -16000 }
		hidden_effect = { event_target:VassalNavyInvestmentTarget = { save_event_target_as = VassalNavyInvestmentTarget set_country_flag = subject_navy_investment_5 } country_event = { id = UniqueAscensionPerksEvents.8145 days = 480 random = 240 } country_event = { id = UniqueAscensionPerksEvents.8146 } }
		custom_tooltip = "UniqueAscensionPerksEvents.8144.Investment.5.tooltip"
	}
	option = { name = BACK ai_chance = { factor = 0.1 } default_hide_option = yes
		hidden_effect = {
			if = {
				limit = { NOT = { has_active_event = { UniqueAscensionPerksEvents.8143 } } }
				country_event = { id = UniqueAscensionPerksEvents.8143 scopes = { from = from } }
			}
		}
	}
}
# Create Navy
country_event = {
	id = UniqueAscensionPerksEvents.8145
	title = "UniqueAscensionPerksEvents.8145.Name"
	desc = "UniqueAscensionPerksEvents.8145.Desc"
	show_sound = event_ship_thrusters
	picture = GFX_evt_fleet_neutral
	is_triggered_only = yes
	location = event_target:capital_planet
	immediate = {
		event_target:VassalNavyInvestmentTarget = {
			save_event_target_as = VassalNavyInvestmentTarget
			add_modifier = { modifier = vassal_navy_capacity_boost }
			get_capital_planet = yes
			switch = { trigger = has_country_flag
				subject_navy_investment_1 = { set_variable = { which = subject_navy_amount value = 24	} remove_country_flag = subject_navy_investment_1 }
				subject_navy_investment_2 = { set_variable = { which = subject_navy_amount value = 48	} remove_country_flag = subject_navy_investment_2 }
				subject_navy_investment_3 = { set_variable = { which = subject_navy_amount value = 96	} remove_country_flag = subject_navy_investment_3 }
				subject_navy_investment_4 = { set_variable = { which = subject_navy_amount value = 192	} remove_country_flag = subject_navy_investment_4 }
				subject_navy_investment_5 = { set_variable = { which = subject_navy_amount value = 384	} remove_country_flag = subject_navy_investment_5 }
			}
			multiply_variable = { which = subject_navy_amount value = 4 }
		}
		create_fleet = {
			settings = {
				can_upgrade = no
				can_disband = no
				can_change_composition = no
				can_change_leader = yes
				uses_naval_capacity = no
				spawn_debris = no
			}
			effect = {
				set_owner = root
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 1000
				set_fleet_flag = subject_navy_fleet

				while = { count = event_target:VassalNavyInvestmentTarget.subject_navy_amount
					limit = { event_target:VassalNavyInvestmentTarget = { check_variable = { which = subject_navy_amount value > 0 } } }
					# create_navy_ships_for_subject = yes
					random_list = {
						55	= { create_ship = { name = random random_existing_design = corvette } event_target:VassalNavyInvestmentTarget = { change_variable = { which = subject_navy_amount value = -1 } } }
						25	= { modifier = { factor = 0 ROOT = { NOT = { has_technology = tech_destroyers	} } } modifier = { factor = 0 event_target:VassalNavyInvestmentTarget = { check_variable = { which = subject_navy_amount value < 2	} } } create_ship = { name = random random_existing_design = destroyer	} event_target:VassalNavyInvestmentTarget = { change_variable = { which = subject_navy_amount value = -2 } } }
						14	= { modifier = { factor = 0 ROOT = { NOT = { has_technology = tech_cruisers		} } } modifier = { factor = 0 event_target:VassalNavyInvestmentTarget = { check_variable = { which = subject_navy_amount value < 4	} } } create_ship = { name = random random_existing_design = cruiser	} event_target:VassalNavyInvestmentTarget = { change_variable = { which = subject_navy_amount value = -4 } } }
						5	= { modifier = { factor = 0 ROOT = { NOT = { has_technology = tech_battleships	} } } modifier = { factor = 0 event_target:VassalNavyInvestmentTarget = { check_variable = { which = subject_navy_amount value < 8	} } } create_ship = { name = random random_existing_design = battleship	} event_target:VassalNavyInvestmentTarget = { change_variable = { which = subject_navy_amount value = -8 } } }
						1	= { modifier = { factor = 0 ROOT = { NOT = { has_technology = tech_titans		} } } modifier = { factor = 0 event_target:VassalNavyInvestmentTarget = { check_variable = { which = subject_navy_amount value < 16 } } } create_ship = { name = random random_existing_design = titan		} event_target:VassalNavyInvestmentTarget = { change_variable = { which = subject_navy_amount value = -16 } } }
					}
				}
				set_location = event_target:capital_planet
			}
		}
		last_created_fleet = {
			set_owner = event_target:VassalNavyInvestmentTarget
			add_modifier = { modifier = eternal_vigilance_fleet }
		}
	}
	option = { name = EXCELLENT }
}
# Notify
country_event = {
	id = UniqueAscensionPerksEvents.8146
	title = "UniqueAscensionPerksEvents.8146.Name"
	desc = "UniqueAscensionPerksEvents.8146.Desc"
	show_sound = event_construction
	picture = GFX_evt_hangar_bay
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = {
		get_capital_planet = yes
		# event_target:VassalNavyInvestmentTarget = { save_event_target_as = VassalNavyInvestmentTarget }
	}
	# option = { name = "Let's select another subject." hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.8143 } } }
	option = { name = OK }
}

######################################
#									 #
########## Defense Sentinels #########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.230
	title = "ap_defense_sentinels"
	desc = "ap_defense_sentinels_desc"
	show_sound = event_ai_started
	picture = GFX_evt_defense_sentinels
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes create_defense_sentinels_country = yes }
	option = { name = EXCELLENT }
}

# Take actions - on_monthly_pulse
# Compare: SD - .1030
country_event = {
	id = UniqueAscensionPerksEvents.231
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { days = 20 } # 14
	# trigger = {
	# 	merg_is_default_empire = yes
	# 	has_ascension_perk = ap_defense_sentinels
	# 	any_relation = { is_country_type = security_forces has_relation_flag = { who = root flag = defense_sentinels } }
	# }
	immediate =	{
		# DEFENSE_SENTINELS_IDLE_FLEET_SELECTION
		# save_event_target_as = main_country
		random_relation = {
			limit = {
				is_country_type = security_forces # defense_sentinels
				has_country_flag = defense_sentinels
				has_relation_flag = { who = root flag = defense_sentinels }
				any_owned_fleet = { has_fleet_flag = defense_sentinels_fleet NOR = { is_in_combat = yes has_fleet_flag = mobile_defender } }
			}
			every_owned_fleet = { # Select Fleets
				limit = {
					is_in_combat = no
					has_fleet_flag = defense_sentinels_fleet
					NOT = { has_fleet_flag = defender }
					# OR = { To much performance
					# 	AND = { is_fleet_idle = yes NOT = { has_fleet_flag = mobile_defender } }
					# 	NOR = { has_fleet_flag = patroller has_fleet_flag = mobile_defender }
					# 	root = { any_system_within_border = { any_fleet_in_system = { is_valid_target_for_domesticated_aliens_security = yes } } }
					# }
				}
				fleet_event = { id = UniqueAscensionPerksEvents.232 }
			}
		}
	}
}
# MTTH days = 14
fleet_event = {
	id = UniqueAscensionPerksEvents.232
	hide_window = yes
	is_triggered_only = yes
	immediate =	{
		# DEFENSE_SENTINELS_IDLE_FLEET_ACTION
		# owner = {
		# 	save_event_target_as = domesticated_spaceborn_alien
		# 	if = {
		# 		limit = { NOT = { exists = event_target:main_country } }
		# 		if = { limit = { exists = from from = { reverse_has_relation_flag = { who = prev flag = defense_sentinels } } }
		# 			from = { save_event_target_as = main_country }
		# 		}
		# 		else = {
		# 			random_relation = {
		# 				limit = { reverse_has_relation_flag = { who = prev flag = defense_sentinels } }
		# 				save_event_target_as = main_country
		# 			}
		# 		}
		# 	}
		# }
		if = { # Defense & Patrol
			limit = { has_fleet_flag = defense_sentinels_fleet NOT = { has_fleet_flag = mobile_defender } }
			if = {
				limit = {
					NOT = { has_fleet_flag = defender }
					from = {
						any_system_within_border = {
							distance = { source = root type = hyperlane max_jumps = 8 }
							any_fleet_in_system = { is_valid_target_for_domesticated_aliens_security = yes }
						}
					}
				}
				from = {
					random_system_within_border = {
						limit = { any_fleet_in_system = { is_valid_target_for_domesticated_aliens_security = yes } }
						random_fleet_in_system = {
							limit = { is_valid_target_for_domesticated_aliens_security = yes }
							random = { chance = 12 set_timed_fleet_flag = { flag = defense_sentinels_fleet_defend_against_no_more_defenders months = 6 } }
							root = {
								set_timed_fleet_flag = { flag = defender days = 45 }
								remove_auto_move_target = yes
								if = {
									limit = { has_fleet_flag = mobile_defender }
									if = {
										limit = { has_fleet_order = move_to_system_point_order }
										clear_orders = yes
										clear_fleet_actions = this
									}
									remove_fleet_flag = mobile_defender
								}
								auto_follow_fleet = { target = prev attack_fleet = yes }
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					NOR = {
						has_fleet_order = move_to_system_point_order
						has_fleet_flag = mobile_defender
						has_fleet_flag = patroller
						has_fleet_flag = defender
					}
				}
				random_list = {
					4 = {
						set_fleet_flag = mobile_defender
						queue_actions = {
							repeat = {
								find_random_system = {
									trigger = {
										id = "defense_sentinel.trigger.1"
										has_presence = yes
										has_owner = yes
										is_owned_by = from
										distance = { source = root type = hyperlane min_jumps = 6 max_jumps = 18 }
									}
									found_system = { move_to = this wait = 20 }
								}
							}
						}
					}
					6 = {
						from = {
							random_planet_within_border = {
								limit = { distance = { source = root type = hyperlane min_jumps = 6 max_jumps = 18 } }
								root = {
									set_timed_fleet_flag = { flag = patroller months = 4 }
									auto_move_to_planet = { target = prev clear_auto_move_on_arrival = yes }
								}
							}
						}
					}
				}
			}
		}
	}
}

## Recover fleet power (on_monthly_pulse Call merged with UniqueAscensionPerksEvents.239)
country_event = {
	id = UniqueAscensionPerksEvents.233
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 2 } # 14
	trigger = {
		# has_ascension_perk = ap_defense_sentinels
		exists = event_target:defense_sentinels
	}
	immediate =	{
		# CREATE_DEFENSE_SENTINELS_FLEET
		if = {
			limit = { NOT = { exists = event_target:spawn_location } }
			random_planet_within_border = {
				limit = { has_planet_flag = defense_sentinels_home }
				# weights = { base = 1 modifier = { add = 10 is_sector_capital = no } }
				save_event_target_as = spawn_location
			}
		}
		event_target:defense_sentinels = {
			random_owned_fleet = {
				limit = { is_mobile = yes num_ships < 8 any_owned_ship = { is_ship_size = large_ship_ai } }
				create_ship = { name = "" design = "Defense Sentinel" graphical_culture = "ai_01" }
			}
			create_fleet = {
				name = NAME_defense_sentinels
				settings = { garrison = yes spawn_debris = no }
				effect = {
					set_owner = prev
					defense_sentinels_spawn_default_fleet = yes
					set_location = { target = event_target:spawn_location distance = 10 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 5000
					set_formation_scale = 1.0
					set_fleet_flag = defense_sentinels_fleet
				}
			}
		}
	}
}

# Virtual Subject gives Starbase to Overlord
# This = starbase being disabled (not ship!)
# From = fleet that disabled the starbase
starbase_event = {
	id = UniqueAscensionPerksEvents.234
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = from.owner
		from.owner = {
			is_country_type = security_forces
		}
	}
	immediate = {
		from.owner = {
			random_relation = {
				limit = {
					merg_is_default_empire = yes
					OR = {
						reverse_has_relation_flag = { who = prev flag = defense_sentinels }
						prev = { has_country_flag = is_unique_perk_special_subject_of@prev } # New in v3.14
					}
				}
				root = { set_owner = prev fleet = { set_controller = prevprev } }
				sync_subjects_virtual_relation = yes
			}
		}
	}
}

## Recover fleet power (on_monthly_pulse)
country_event = {
	id = UniqueAscensionPerksEvents.239
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 2 } # 14 days
	immediate =	{
		# random_playable_country = {
		# 	limit = { has_ascension_perk = ap_defense_sentinels }
		create_defense_sentinels_country = yes
		if = {
			limit = { has_country_flag = ap_defense_sentinels_retriever_project }
			create_retriever_sentinels_fleet = yes
		}
		if = {
			limit = {
				exists = event_target:defense_sentinels
				event_target:defense_sentinels = {
					OR = {
						# num_fleets < 5
						# AND = { num_fleets < 10 } root = { has_technology = tech_defense_sentinels_1 }
						# AND = { num_fleets < 20 } root = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 }
						# AND = { num_fleets < 30 } root = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 }
						num_ships < 75
						AND = { num_ships < 150 } root = { has_technology = tech_defense_sentinels_1 }
						AND = { num_ships < 300 } root = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 }
						AND = { num_ships < 450 } root = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 }
						# count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 75 }
						# AND = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 150 }	root = { has_technology = tech_defense_sentinels_1 } }
						# AND = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 300 }	root = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 } }
						# AND = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 450 }	root = { has_technology = tech_defense_sentinels_1 has_technology = tech_defense_sentinels_2 has_technology = tech_defense_sentinels_3 } }
						# event_target:the_ally_faction = { count_owned_ship = { limit = { is_ship_size = small_ship_ai } count < 50 } }
					}
				}
			}
			country_event = { id = UniqueAscensionPerksEvents.233 days = 5 random = 5 }
		}
	}
}

# on_tech_increased was on_yearly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.235
	title = "RETRIEVER_SENTINEL"
	desc = "RETRIEVER_SENTINEL_DESC"
	show_sound = event_ai_started
	picture = GFX_evt_retriever_sentinel
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = {
		merg_is_default_empire = yes
		last_increased_tech = tech_defense_sentinels_2
		# has_ascension_perk = ap_defense_sentinels
		NOR = {
			has_active_event = { UniqueAscensionPerksEvents.235 }
			has_country_flag = ap_defense_sentinels_retriever_project
			has_special_project = RETRIEVER_SENTINEL
		}
	}
	immediate = { get_capital_planet = yes }
	option = {
		name = EXCELLENT
		enable_special_project = { name = RETRIEVER_SENTINEL location = event_target:capital_planet owner = root }
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.236
	title = "UniqueAscensionPerksEvents.236.Name"
	desc = "UniqueAscensionPerksEvents.236.Desc"
	show_sound = event_ai_started
	picture = GFX_evt_retriever_sentinel
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = {
		get_capital_planet = yes
		set_country_flag = ap_defense_sentinels_retriever_project
		create_defense_sentinels_country = yes
		while = { count = 3 create_retriever_sentinels_fleet = yes }
	}
	option = { name = EXCELLENT }
}

# Create "Defense Sentinel - Fortress" (on_yearly_pulse on_half_yearly_pulse)
country_event = {
	id = UniqueAscensionPerksEvents.237
	hide_window = yes
	# mean_time_to_happen = { months = 6 }
	is_triggered_only = yes
	immediate = {
		create_defense_sentinels_country = yes
		if = {
			limit = {
				any_system_within_border = {
					is_on_border = yes # Native trigger v3.13
					NOR = { is_in_frontier_space = yes any_fleet_in_system = { is_owned_by = event_target:defense_sentinels is_ship_size = blue_military_station_large_ai } }
				}
			}
			if = {
				limit = {
					OR = {
						NOT = { exists = event_target:spawn_location }
						event_target:spawn_location = {
							NAND = {
								is_scope_type = planet
								is_owned_by = root
								is_in_frontier_space = no
								solar_system = { is_on_border = yes }
							}
						}
						event_target:spawn_location = { has_planet_flag = defense_sentinels_planet }
						# Just one
						event_target:spawn_location.solar_system = { any_fleet_in_system = { is_owned_by = event_target:defense_sentinels is_ship_size = blue_military_station_large_ai } }
					}
				}
				random_system_within_border = {
					limit = {
						is_in_frontier_space = no
						is_on_border = yes
						any_system_colony = { num_pops > 10 NOT = { has_planet_flag = defense_sentinels_planet } }
						# Just one
						count_fleet_in_system = { limit = { is_owned_by = event_target:defense_sentinels is_ship_size = blue_military_station_large_ai } count = 0 }
					}
					# weights = { base = 1 modifier = { add = 50 } }
					random_system_colony = {
						limit = { num_pops > 10 NOT = { has_planet_flag = defense_sentinels_planet } }
						save_event_target_as = spawn_location
					}
				}
			}
			if = {
				limit = { exists = event_target:spawn_location }
				event_target:spawn_location = { set_timed_planet_flag = { flag = defense_sentinels_planet years = 15 } }
				create_fleet = {
					name = NAME_defense_sentinels
					settings = { garrison = yes spawn_debris = no }
					effect = {
						set_owner = event_target:defense_sentinels
						create_ship = { name = "" design = "Defense Sentinel - Fortress" graphical_culture = "ai_01" }
						set_location = { target = event_target:spawn_location distance = 8 angle = random }
						# set_fleet_flag = defense_sentinels_fortress
					}
				}
			}
		}
	}
}

# on_yearly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.238
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		create_defense_sentinels_country = yes
		random_system_within_border = {
			limit = { NOR = { has_star_flag = defense_sentinels_system any_fleet_in_system = { has_fleet_flag = defense_sentinels_platforms } } }
			# weights = { base = 1 modifier = { add = 10 is_capital_system = no } }
			set_timed_star_flag = { flag = defense_sentinels_system years = 15 }
			# star = { save_event_target_as = spawn_location }
			if = {
				limit = {
					any_fleet_in_system = {
						is_mobile = no
						is_owned_by = event_target:defense_sentinels
						any_owned_ship = { is_ship_class = shipclass_military_station }
					}
				}
				random_fleet_in_system = {
					limit = {
						is_mobile = no
						is_owned_by = event_target:defense_sentinels
						any_owned_ship = { is_ship_class = shipclass_military_station }
					}
					create_ship = { name = "" design = "Defense Sentinel - Platform" graphical_culture = "ai_01" }
					while = { count = 2
						random = { chance = 40 create_ship = { name = "" design = "Defense Sentinel - Platform" graphical_culture = "ai_01" } }
					}
					set_fleet_flag = defense_sentinels_platforms
				}
			}
			else = {
				create_fleet = {
					name = NAME_defense_sentinels
					settings = { garrison = yes spawn_debris = no }
					effect = {
						set_owner = event_target:defense_sentinels
						create_ship = { name = "" design = "Defense Sentinel - Platform" graphical_culture = "ai_01" }
						while = { count = 2
							random = { chance = 40 create_ship = { name = "" design = "Defense Sentinel - Platform" graphical_culture = "ai_01" } }
						}
						set_location = { target = prev.star distance = 100 angle = random }
						set_fleet_flag = defense_sentinels_platforms
					}
				}
			}
		}
	}
}

# This = Enclave on_country_created
# From = fleet
country_event = {
	id = UniqueAscensionPerksEvents.2380
	hide_window = yes
	is_triggered_only = yes
	trigger = { is_country_type = enclave_mercenary has_country_flag = mercenary_enclave_country exists = from.owner }
	immediate = {
		from.owner = {
			country_event = { id = UniqueAscensionPerksEvents.8787 days = 1 } # prev = { sync_subjects_virtual_relation = yes }
		}
	}
}

######################################
#									 #
########## Leadership Upload #########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.250
	title = "ap_leadership_transfer"
	desc = "ap_leadership_transfer_desc"
	picture = GFX_evt_machine_sapience
	show_sound = event_psionic
	location = from
	is_triggered_only = yes
	option = { name = EXCELLENT hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.251 } } add_resource = { energy = 800 } }
}

# Compare with UniqueAscensionPerksEvents.103
country_event = {
	id = UniqueAscensionPerksEvents.251
	title = "UniqueAscensionPerksEvents.251.Name"
	desc = "UniqueAscensionPerksEvents.251.Desc"
	picture = GFX_evt_machine_sapience
	show_sound = event_psionic
	location = from
	is_triggered_only = yes
	immediate = {
		random_owned_leader = { limit = { NOR = { is_ruler = yes has_leader_flag = clone } } save_event_target_as = leader_1 }
		random_owned_leader = {
			limit = { NOR = { is_ruler = yes has_leader_flag = clone is_same_value = event_target:leader_1 } } save_event_target_as = leader_2
			root = {
				random_owned_leader = {
					limit = { NOR = { is_ruler = yes has_leader_flag = clone is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 } } save_event_target_as = leader_3
					root = {
						random_owned_leader = {
							limit = { NOR = { is_ruler = yes has_leader_flag = clone is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 } } save_event_target_as = leader_4
							root = {
								random_owned_leader = {
									limit = { NOR = { is_ruler = yes has_leader_flag = clone is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 is_same_value = event_target:leader_4 } } save_event_target_as = leader_5
									root = {
										random_owned_leader = {
											limit = { NOR = { is_ruler = yes has_leader_flag = clone is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 is_same_value = event_target:leader_4 is_same_value = event_target:leader_5 } } save_event_target_as = leader_6
											root = {
												random_owned_leader = {
													limit = { NOR = { is_ruler = yes has_leader_flag = clone is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 is_same_value = event_target:leader_4 is_same_value = event_target:leader_5 is_same_value = event_target:leader_6 } } save_event_target_as = leader_7
													root = {
														random_owned_leader = { limit = { NOR = { is_ruler = yes has_leader_flag = clone is_same_value = event_target:leader_1 is_same_value = event_target:leader_2 is_same_value = event_target:leader_3 is_same_value = event_target:leader_4 is_same_value = event_target:leader_5 is_same_value = event_target:leader_6 is_same_value = event_target:leader_7 } } save_event_target_as = leader_8 }
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	option = { name = "UniqueAscensionPerksEvents.251.Leader.1" trigger = { exists = event_target:leader_1 } hidden_effect = { event_target:leader_1 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.2" trigger = { exists = event_target:leader_2 } hidden_effect = { event_target:leader_2 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.3" trigger = { exists = event_target:leader_3 } hidden_effect = { event_target:leader_3 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.4" trigger = { exists = event_target:leader_4 } hidden_effect = { event_target:leader_4 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.5" trigger = { exists = event_target:leader_5 } hidden_effect = { event_target:leader_5 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.6" trigger = { exists = event_target:leader_6 } hidden_effect = { event_target:leader_6 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.7" trigger = { exists = event_target:leader_7 } hidden_effect = { event_target:leader_7 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerksEvents.251.Leader.8" trigger = { exists = event_target:leader_8 } hidden_effect = { event_target:leader_8 = { leader_event = { id = UniqueAscensionPerksEvents.252 } } } }
	option = { name = "UniqueAscensionPerks.select_leader" hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.251 } } }
	option = { name = ABORT ai_chance = { factor = 0.1 } hidden_effect = { if = { limit = { exists = from } hidden_effect = { add_resource = { energy = 100 } } } } }
}
# From = owner
leader_event = {
	id = UniqueAscensionPerksEvents.252
	title = "UniqueAscensionPerksEvents.252.Name"
	desc = "UniqueAscensionPerksEvents.252.Desc"
	picture = GFX_evt_machine_sapience
	show_sound = event_psionic
	location = from
	is_triggered_only = yes
	immediate = { }
	after = {
		hidden_effect = {
			from = {
				if = {
					limit = { is_variable_set = cloned_leader_number }
					add_resource = { energy = -800 mult = cloned_leader_number }
					root = {
						while = { count = prev.cloned_leader_number
							switch = { trigger = leader_class
								scientist = { from = { clone_leader = { target = prev class = scientist } } }
								official = { from = { clone_leader = { target = prev class = official } } }
								commander = { from = { clone_leader = { target = prev class = commander } } }
							}
							from = {
								last_created_leader = {
									set_age = 1
									set_name = { key = "CLONED_LEADER_NAME" variable_string = "[This.GetName]" variable_string = "[Prev.cloned_leader_number]" }
									set_leader_flag = clone # TODO TEST IF NEEDED
								}
								change_variable = { which = "cloned_leader_number" value = -1 }
							}
						}
						leader_event = { id = UniqueAscensionPerksEvents.253 days = 1 }
					}
					clear_variable = cloned_leader_number
				}
			}
		}
	}
	option = { name = "UniqueAscensionPerksEvents.252.1" allow = { from = { has_country_resource = { type = energy amount > 800 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 1 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.2" allow = { from = { has_country_resource = { type = energy amount > 1600 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 2 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.3" allow = { from = { has_country_resource = { type = energy amount > 2400 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 3 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.4" allow = { from = { has_country_resource = { type = energy amount > 3200 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 4 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.5" allow = { from = { has_country_resource = { type = energy amount > 4000 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 5 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.6" allow = { from = { has_country_resource = { type = energy amount > 4800 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 6 } } } }
	option = { name = "UniqueAscensionPerksEvents.252.7" allow = { from = { has_country_resource = { type = energy amount > 5600 } } } hidden_effect = { from = { set_variable = { which = "cloned_leader_number" value = 7 } } } }
	option = {
		name = ABORT ai_chance = { factor = 0.1 } default_hide_option = yes
		hidden_effect = {
			if = { limit = { exists = fromfrom } from = { add_resource = { energy = 100 } } }
		}
	}
}

# fromfrom = owner
leader_event = {
	id = UniqueAscensionPerksEvents.253
	title = "UniqueAscensionPerksEvents.253.Name"
	desc = "UniqueAscensionPerksEvents.253.Desc"
	picture = GFX_evt_machine_sapience
	show_sound = event_psionic
	location = owner.capital_scope
	is_triggered_only = yes
	immediate = { }
	option = { name = "UniqueAscensionPerks.lets_again" hidden_effect = { owner = { country_event = { id = UniqueAscensionPerksEvents.251 } } } }
	option = { name = EXCELLENT }
}

######################################
#									 #
############ Sector Z749 #############
#									 #
######################################

# country_event = {
# 	id = UniqueAscensionPerksEvents.270
# 	title = "ap_sector_z749"
# 	desc = "ap_sector_z749_desc"
# 	show_sound = event_mystic_reveal
# 	diplomatic = yes
# 	force_open = yes
# 	picture_event_data = { room = sector_z749_room }
# 	location = event_target:sector_z749_system_capital_system
# 	is_triggered_only = yes
# 	immediate = {
# 		if = { limit = { NOT = { exists = capital_scope } }
# 			random_system_within_border = {
# 				limit = { has_natural_wormhole = no }
# 				save_event_target_as = sector_z749_system_capital_system
# 			}
# 		} else_if = { limit = { capital_scope = { solar_system = { has_natural_wormhole = yes } } }
# 			capital_scope = {
# 				solar_system = {
# 					closest_system = {
# 						limit = { has_natural_wormhole = no exists = space_owner space_owner = { is_same_empire = root } }
# 						save_event_target_as = sector_z749_system_capital_system
# 					}
# 				}
# 			}
# 		} else = { capital_scope = { solar_system = { save_event_target_as = sector_z749_system_capital_system } } }
# 		event_target:sector_z749_system_capital_system = {
# 			set_spawn_system_batch = begin
# 			spawn_system = { min_distance > 20 max_distance <= 50 min_orientation_angle = 0 max_orientation_angle = 359 initializer = "sector_z749_system" hyperlane = no }
# 			if = { limit = { NOT = { exists = event_target:sector_z749_system } }
# 				if = { limit = { exists = last_created_system last_created_system = { has_star_flag = sector_z749_system } }
# 					last_created_system = { save_event_target_as = sector_z749_system }
# 				} else = {
# 					random_system = {
# 						limit = { has_star_flag = sector_z749_system }
# 						save_event_target_as = sector_z749_system
# 					}
# 				}
# 			}
# 			event_target:sector_z749_system = {
# 				# isolate_system = yes
# 				prev = { spawn_natural_wormhole = { bypass_type = wormhole random_pos = yes orbit_angle = 170 } }
# 				spawn_natural_wormhole = { bypass_type = wormhole random_pos = yes orbit_angle = 350 }
# 				link_wormholes = prev
# 			}
# 			set_spawn_system_batch = end
# 		}
# 	}
# 	option = {
# 		name = EXCELLENT
# 		hidden_effect = {
# 			country_event = { id = distar.13060 scopes = { from = event_target:sector_z749_system_capital_system } }
# 		}
# 	}
# }

# country_event = {
# 	id = UniqueAscensionPerksEvents.271
# 	title = "Sector_Z749"
# 	desc = "UniqueAscensionPerksEvents.271.Desc"
# 	show_sound = event_mystic_reveal
# 	diplomatic = yes
# 	force_open = yes
# 	picture_event_data = { room = sector_z749_room }
# 	is_triggered_only = yes
# 	option = {
# 		name = UniqueAscensionPerksEvents.271.Gate
# 		allow = {
# 			custom_tooltip = {
# 				fail_text = UniqueAscensionPerksEvents.271.Req01
# 				NAND = {
# 					is_variable_set = invasion_gate_type
# 					check_variable = { which = invasion_gate_type value > 0 }
# 				}
# 			}
# 		}
# 		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.272 } }
# 	}
# 	option = { name = EXIT ai_chance = { factor = 0.1 } default_hide_option = yes }
# }

# country_event = {
# 	id = UniqueAscensionPerksEvents.272
# 	title = "UniqueAscensionPerksEvents.272.Name"
# 	desc = "UniqueAscensionPerksEvents.272.Desc"
# 	show_sound = event_mystic_reveal
# 	diplomatic = yes
# 	force_open = yes
# 	picture_event_data = { room = sector_z749_room }
# 	is_triggered_only = yes
# 	immediate = {
# 		set_variable = { which = invasion_gate_type value = 0 }
# 	}
# 	after = {
# 		if = { limit = { check_variable = { which = invasion_gate_type value > 0 } }
# 			country_event = { id = UniqueAscensionPerksEvents.273 }
# 		}
# 	}
# 	option = { name = UniqueAscensionPerksEvents.272.Alpha	hidden_effect = { set_variable = { which = invasion_gate_type value = 1 } } }
# 	option = { name = UniqueAscensionPerksEvents.272.Beta	 trigger = { hidden_trigger = { check_variable = { which = invasion_gate_wave_type value > 1 } } } hidden_effect = { set_variable = { which = invasion_gate_type value = 2 } } }
# 	option = { name = UniqueAscensionPerksEvents.272.Gamma	 trigger = { hidden_trigger = { check_variable = { which = invasion_gate_wave_type value > 2 } } } hidden_effect = { set_variable = { which = invasion_gate_type value = 3 } } }
# 	option = { name = UniqueAscensionPerksEvents.272.Delta	 trigger = { hidden_trigger = { check_variable = { which = invasion_gate_wave_type value > 3 } } } hidden_effect = { set_variable = { which = invasion_gate_type value = 4 } } }
# 	option = { name = UniqueAscensionPerksEvents.272.Epsilon trigger = { hidden_trigger = { check_variable = { which = invasion_gate_wave_type value > 4 } } } hidden_effect = { set_variable = { which = invasion_gate_type value = 5 } } }
# 	option = { name = UniqueAscensionPerksEvents.272.Zeta	 trigger = { hidden_trigger = { check_variable = { which = invasion_gate_wave_type value > 5 } } } hidden_effect = { set_variable = { which = invasion_gate_type value = 6 } } }
# 	option = { name = UniqueAscensionPerksEvents.272.Kappa	 trigger = { hidden_trigger = { check_variable = { which = invasion_gate_wave_type value > 6 } } } hidden_effect = { set_variable = { which = invasion_gate_type value = 7 } } }
# 	option = { name = UniqueAscensionPerksEvents.272.Omega	 trigger = { hidden_trigger = { check_variable = { which = invasion_gate_wave_type value > 7 } } } hidden_effect = { set_variable = { which = invasion_gate_type value = 8 } } }
# 	option = { name = BACK hidden_effect = { set_variable = { which = invasion_gate_type value = 0 } country_event = { id = UniqueAscensionPerksEvents.271 } } ai_chance = { factor = 0.1 } default_hide_option = yes }
# }
# # TODO
# country_event = {
# 	id = UniqueAscensionPerksEvents.273
# 	title = "UniqueAscensionPerksEvents.272.Name"
# 	desc = {
# 		trigger = {
# 			success_text = { text = "UniqueAscensionPerksEvents.273.Alpha" check_variable = { which = invasion_gate_type value = 1 } }
# 			success_text = { text = "UniqueAscensionPerksEvents.273.Beta" check_variable = { which = invasion_gate_type value = 2 } }
# 			success_text = { text = "UniqueAscensionPerksEvents.273.Gamma" check_variable = { which = invasion_gate_type value = 3 } }
# 			success_text = { text = "UniqueAscensionPerksEvents.273.Delta" check_variable = { which = invasion_gate_type value = 4 } }
# 			success_text = { text = "UniqueAscensionPerksEvents.273.Epsilon" check_variable = { which = invasion_gate_type value = 5 } }
# 			success_text = { text = "UniqueAscensionPerksEvents.273.Zeta" check_variable = { which = invasion_gate_type value = 6 } }
# 			success_text = { text = "UniqueAscensionPerksEvents.273.Kappa" check_variable = { which = invasion_gate_type value = 7 } }
# 			success_text = { text = "UniqueAscensionPerksEvents.273.Omega" check_variable = { which = invasion_gate_type value = 8 } }
# 		}
# 	}
# 	show_sound = event_mystic_reveal
# 	diplomatic = yes
# 	force_open = yes
# 	picture_event_data = { room = sector_z749_room }
# 	is_triggered_only = yes
# 	option = { name = "UniqueAscensionPerksEvents.273.a"
# 		# activate_invasion_gate = yes
# 		if		= { limit = { check_variable = { which = invasion_gate_type value = 1 } } add_resource = { energy = -1000 } }
# 		else_if = { limit = { check_variable = { which = invasion_gate_type value = 2 } } add_resource = { energy = -2000 } }
# 		else_if = { limit = { check_variable = { which = invasion_gate_type value = 3 } } add_resource = { energy = -3400 } }
# 		else_if = { limit = { check_variable = { which = invasion_gate_type value = 4 } } add_resource = { energy = -5000 } }
# 		else_if = { limit = { check_variable = { which = invasion_gate_type value = 5 } } add_resource = { energy = -6600 } }
# 		else_if = { limit = { check_variable = { which = invasion_gate_type value = 6 } } add_resource = { energy = -8800 } }
# 		else_if = { limit = { check_variable = { which = invasion_gate_type value = 7 } } add_resource = { energy = -12000 } }
# 		else_if = { limit = { check_variable = { which = invasion_gate_type value = 8 } } add_resource = { energy = -18000 } }
# 		country_event = { id = UniqueAscensionPerksEvents.274 }
# 	}
# 	option = { name = BACK hidden_effect = { set_variable = { which = invasion_gate_type value = 0 } country_event = { id = UniqueAscensionPerksEvents.272 } } ai_chance = { factor = 0.1 } default_hide_option = yes }
# }

# # TODO a lot, eg different fleets.
# country_event = {
# 	id = UniqueAscensionPerksEvents.274
# 	hide_window = yes
# 	is_triggered_only = yes
# 	immediate =	{
# 		# create_invasion_gave_country = yes
# 		# save_event_target_as = main_country

# 		if = { limit = { any_country = { has_country_flag = sector_z749_country } }
# 			random_country = {
# 				limit = { has_country_flag = sector_z749_country }
# 				save_event_target_as = sector_z749_country
# 			}
# 		} else = {
# 			event_target:sector_z749_system = {
# 				random_system_planet = {
# 					limit = { is_star = no }
# 					weights = { base = 1 modifier = { add = 3 merg_is_habitat = yes } }
# 					create_country = {
# 						name = "Sector Z-749"
# 						type = faction
# 						ignore_initial_colony_error = yes
# 						day_zero_contact = no
# 						flag = {
# 							icon = { category = "domination" file = "domination_20.dds" }
# 							background = { category = "backgrounds" file = "circle.dds" }
# 							colors = { "red" "black" "null" "null" }
# 						}
# 						effect = {
# 							# set_name = "Sector_Z749"
# 							save_event_target_as = sector_z749_country
# 							set_country_flag = sector_z749_country
# 							set_faction_hostility = { set_hostile = yes }
# 							every_country = { establish_communications_no_message = prev }
# 						}
# 					}
# 				}
# 			}
# 		}
# 		# invasion_gate_create_fleet = yes
# 		# random_system = {
# 		# 	limit = { has_star_flag = sector_z749_system }
# 		# 	star = { save_event_target_as = spawn_location }
# 		# }
# 		event_target:sector_z749_system.star = { save_event_target_as = spawn_location }
# 		event_target:sector_z749_country = {
# 			set_variable = { which = invasion_gate_wave_type value = prev.invasion_gate_type }
# 			set_variable = { which = invasion_gate_wave_count value = invasion_gate_wave_type }
# 			multiply_variable = { which = invasion_gate_wave_count value = 1.75 }
# 			round_variable = invasion_gate_wave_count
# 			while = {
# 				count = 9
# 				create_fleet = {
# 					name = "Invasion Gate Fleet"
# 					settings = { spawn_debris = no }
# 					effect = {
# 						set_owner = prev
# 						while = {
# 							count = prev.invasion_gate_wave_count
# 							if = { limit = { PREV = { check_variable = { which = invasion_gate_wave_type value = 1 } } } while = { count = 10 create_ship = { design = "NAME_Outrider" graphical_culture = "pirate_01" } } } # Pirate Corvette
# 							if = { limit = { PREV = { check_variable = { which = invasion_gate_wave_type value = 2 } } } while = { count = 6 create_ship = { design = "NAME_Lancer" graphical_culture = "pirate_01" } } } # Pirate Destroyer
# 							if = { limit = { PREV = { check_variable = { which = invasion_gate_wave_type value = 3 } } } while = { count = 3 create_ship = { design = "NAME_Void_Champion" graphical_culture = "pirate_01" } } } # Pirate Cruiser
# 							if = { limit = { PREV = { check_variable = { which = invasion_gate_wave_type value = 4 } } } while = { count = 1 create_ship = { design = "NAME_Ancestral_Glory" graphical_culture = "pirate_01" } } } # Marauder Galleon
# 						}
# 						set_location = { target = event_target:spawn_location distance = 1000 angle = random }
# 						set_fleet_stance = aggressive
# 						set_aggro_range_measure_from = self
# 						set_aggro_range = 5000
# 						set_formation_scale = 1.0
# 						save_event_target_as = invasion_gate_fleet
# 						set_fleet_flag = invasion_gate_fleet
# 					}
# 				}
# 			}
# 			# set_variable = { which = invasion_gate_wave_type value = 0 }
# 		}
# 	}
# }

# on_country_destroyed
# TODO different rewards + DESC
# country_event = {
# 	id = UniqueAscensionPerksEvents.275
# 	hide_window = yes
# 	is_triggered_only = yes
# 	trigger = {
# 		is_country_type = faction
# 		has_country_flag = sector_z749_country
# 		exists = from
# 		from = { has_ascension_perk = ap_sector_z749 }
# 	}
# 	immediate =	{
#		# give_fe_tech = yes
# 		change_variable = { which = invasion_gate_wave_type value = 1 }
# 		from = {
# 			set_variable = { which = invasion_gate_wave_type value = prev.invasion_gate_wave_type }
# 			add_resource = {
# 				energy = 1000
# 				alloys = 1000
# 				unity = 1000
# 				minerals = 1000
# 				influence = 10
# 				consumer_goods = 100
# 				exotic_gases = 10
# 				volatile_motes = 10
# 				rare_crystals = 10
# 				sr_living_metal = 5
# 				nanites = 5
# 				sr_dark_matter = 2
# 				sr_zro = 1
# 				mult = invasion_gate_wave_type
# 			}
# 		}
# 	}
# }

######################################
#									 #
########## Pinnacle Society ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.300
	title = "ap_pyramidal_society"
	desc = "ap_pyramidal_society_desc"
	show_sound = event_administrative_work
	picture = GFX_evt_pyramidal_society
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT country_event = { id = UniqueAscensionPerksEvents.301 days = 3 } }
}

# v3.3: chance & amount 2/3
country_event = {
	id = UniqueAscensionPerksEvents.301
	hide_window = yes
	# mean_time_to_happen = { days = 42 } # days = 30
	is_triggered_only = yes
	trigger = {
		# merg_is_default_empire = yes
		OR = { has_ascension_perk = ap_pyramidal_society has_country_flag = ap_pyramidal_society }
		OR = {
			AND = { is_common_empire = yes any_owned_planet = { NOR = { has_deposit = d_district_governor has_deposit = d_district_university has_deposit = d_district_defense has_deposit = d_district_industry } } }
			AND = { is_hive_empire = yes any_owned_planet = { NOR = { has_deposit = d_district_queen has_deposit = d_district_nursery has_deposit = d_district_forest has_deposit = d_district_entrepot } } }
			AND = { is_machine_empire = yes any_owned_planet = { NOR = { has_deposit = d_district_foundry has_deposit = d_district_security has_deposit = d_district_upgrade } } } # has_deposit = d_district_recycling
			AND = { is_megacorp = yes any_owned_planet = { NOR = { has_deposit = d_district_finance has_deposit = d_district_casino has_deposit = d_district_bank has_deposit = d_district_journalism } } }
		}
	}
	immediate = {
		# PINNACLE_SOCIETY_DEPOSIT_SPAWN
		if = {
			limit = { is_common_empire = yes }
			if = { limit = { any_owned_planet = { NOR = { has_deposit = d_district_governor has_deposit = d_district_university has_deposit = d_district_defense has_deposit = d_district_industry } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_governor } } while = { count = 4 random = { chance = 50 add_deposit = d_district_governor } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_university } } while = { count = 10 random = { chance = 70 add_deposit = d_district_university } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_defense } } while = { count = 6 random = { chance = 60 add_deposit = d_district_defense } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_industry } } while = { count = 6 random = { chance = 60 add_deposit = d_district_industry } } }
			}
			if = { limit = { any_owned_planet = { has_deposit = yes OR = {
						has_deposit = d_district_queen
						has_deposit = d_district_nursery
						has_deposit = d_district_entrepot
						has_deposit = d_district_forest
						has_deposit = d_district_foundry
						has_deposit = d_district_security
						has_deposit = d_district_upgrade
						# has_deposit = d_district_recycling
						has_deposit = d_district_finance
						has_deposit = d_district_casino
						has_deposit = d_district_bank
						has_deposit = d_district_journalism
				} } }
				every_owned_planet = { limit = { has_deposit = yes OR = {
						has_deposit = d_district_queen
						has_deposit = d_district_nursery
						has_deposit = d_district_entrepot
						has_deposit = d_district_forest
						has_deposit = d_district_foundry
						has_deposit = d_district_security
						has_deposit = d_district_upgrade
						# has_deposit = d_district_recycling
						has_deposit = d_district_finance
						has_deposit = d_district_casino
						has_deposit = d_district_bank
						has_deposit = d_district_journalism
					} }
					planet_event = { id = UniqueAscensionPerksEvents.302 days = 5 }
				}
			}
		}
		else_if = {
			limit = { is_hive_empire = yes }
			if = { limit = { any_owned_planet = { NOR = { has_deposit = d_district_queen has_deposit = d_district_nursery has_deposit = d_district_forest has_deposit = d_district_entrepot } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_queen } } while = { count = 4 random = { chance = 50 add_deposit = d_district_queen } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_nursery } } while = { count = 10 random = { chance = 70 add_deposit = d_district_nursery } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_forest } } while = { count = 10 random = { chance = 70 add_deposit = d_district_forest } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_entrepot } } while = { count = 4 random = { chance = 50 add_deposit = d_district_entrepot } } }
			}
			if = { limit = { any_owned_planet = { has_deposit = yes OR = {
						has_deposit = d_district_governor
						has_deposit = d_district_university
						has_deposit = d_district_defense
						has_deposit = d_district_industry
						has_deposit = d_district_foundry
						has_deposit = d_district_security
						has_deposit = d_district_upgrade
						# has_deposit = d_district_recycling
						has_deposit = d_district_finance
						has_deposit = d_district_casino
						has_deposit = d_district_bank
						has_deposit = d_district_journalism
				} } }
				every_owned_planet = { limit = { has_deposit = yes OR = {
						has_deposit = d_district_governor
						has_deposit = d_district_university
						has_deposit = d_district_defense
						has_deposit = d_district_industry
						has_deposit = d_district_foundry
						has_deposit = d_district_security
						has_deposit = d_district_upgrade
						# has_deposit = d_district_recycling
						has_deposit = d_district_finance
						has_deposit = d_district_casino
						has_deposit = d_district_bank
						has_deposit = d_district_journalism
					} }
					planet_event = { id = UniqueAscensionPerksEvents.302 days = 5 }
				}
			}
		}
		else_if = {
			limit = { is_machine_empire = yes }
			if = { limit = { any_owned_planet = { NOR = { has_deposit = d_district_foundry has_deposit = d_district_security has_deposit = d_district_upgrade } } } # has_deposit = d_district_recycling
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_security } } while = { count = 6 random = { chance = 60 add_deposit = d_district_security } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_foundry } } while = { count = 10 random = { chance = 70 add_deposit = d_district_foundry } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_upgrade } } while = { count = 6 random = { chance = 60 add_deposit = d_district_upgrade } } }
				# every_owned_planet = { limit = { NOT = { has_deposit = d_district_recycling } } while = { count = 10 random = { chance = 70 add_deposit = d_district_recycling } } }
			}
			if = { limit = { any_owned_planet = { has_deposit = yes OR = {
						has_deposit = d_district_governor
						has_deposit = d_district_university
						has_deposit = d_district_defense
						has_deposit = d_district_industry
						has_deposit = d_district_queen
						has_deposit = d_district_nursery
						has_deposit = d_district_entrepot
						has_deposit = d_district_forest
						has_deposit = d_district_finance
						has_deposit = d_district_casino
						has_deposit = d_district_bank
						has_deposit = d_district_journalism
				} } }
				every_owned_planet = { limit = { has_deposit = yes OR = {
						has_deposit = d_district_governor
						has_deposit = d_district_university
						has_deposit = d_district_defense
						has_deposit = d_district_industry
						has_deposit = d_district_queen
						has_deposit = d_district_nursery
						has_deposit = d_district_entrepot
						has_deposit = d_district_forest
						has_deposit = d_district_finance
						has_deposit = d_district_casino
						has_deposit = d_district_bank
						has_deposit = d_district_journalism
					} }
					planet_event = { id = UniqueAscensionPerksEvents.302 days = 5 }
				}
			}
		}
		else_if = {
			limit = { is_megacorp = yes }
			if = { limit = { any_owned_planet = { NOR = { has_deposit = d_district_finance has_deposit = d_district_casino has_deposit = d_district_bank has_deposit = d_district_journalism } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_finance } } while = { count = 10 random = { chance = 70 add_deposit = d_district_finance } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_casino } } while = { count = 10 random = { chance = 70 add_deposit = d_district_casino } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_bank } } while = { count = 4 random = { chance = 50 add_deposit = d_district_bank } } }
				every_owned_planet = { limit = { NOT = { has_deposit = d_district_journalism } } while = { count = 6 random = { chance = 60 add_deposit = d_district_journalism } } }
			}
			if = { limit = { any_owned_planet = { has_deposit = yes OR = {
						has_deposit = d_district_governor
						has_deposit = d_district_university
						has_deposit = d_district_defense
						has_deposit = d_district_industry
						has_deposit = d_district_queen
						has_deposit = d_district_nursery
						has_deposit = d_district_entrepot
						has_deposit = d_district_forest
						has_deposit = d_district_foundry
						has_deposit = d_district_security
						has_deposit = d_district_upgrade
						# has_deposit = d_district_recycling
				} } }
				every_owned_planet = { limit = { has_deposit = yes OR = {
						has_deposit = d_district_governor
						has_deposit = d_district_university
						has_deposit = d_district_defense
						has_deposit = d_district_industry
						has_deposit = d_district_queen
						has_deposit = d_district_nursery
						has_deposit = d_district_entrepot
						has_deposit = d_district_forest
						has_deposit = d_district_foundry
						has_deposit = d_district_security
						has_deposit = d_district_upgrade
						# has_deposit = d_district_recycling
					} }
					planet_event = { id = UniqueAscensionPerksEvents.302 days = 5 }
				}
			}
		}
	}
}

# Remove deposits
# From = owner = country
planet_event = {
	id = UniqueAscensionPerksEvents.302
	hide_window = yes
	# mean_time_to_happen = { days = 42 } # days = 30 planet MTTH is worst
	is_triggered_only = yes
	# pre_triggers = { has_owner = yes }
	trigger = {
		has_deposit = yes
		exists = from
		from = {
			OR = { has_ascension_perk = ap_pyramidal_society has_country_flag = ap_pyramidal_society }
		}
		OR = {
			AND = {
				from = { is_common_empire = no }
				OR = {
					has_deposit = d_district_governor
					has_deposit = d_district_university
					has_deposit = d_district_defense
					has_deposit = d_district_industry
				}
			}
			AND = {
				from = { is_hive_empire = no }
				OR = {
					has_deposit = d_district_queen
					has_deposit = d_district_nursery
					has_deposit = d_district_entrepot
					has_deposit = d_district_forest
				}
			}
			AND = {
				from = { is_machine_empire = no }
				OR = {
					has_deposit = d_district_foundry
					has_deposit = d_district_security
					has_deposit = d_district_upgrade
					# has_deposit = d_district_recycling
				}
			}
			AND = {
				from = { is_megacorp = no }
				OR = {
					has_deposit = d_district_finance
					has_deposit = d_district_casino
					has_deposit = d_district_bank
					has_deposit = d_district_journalism
				}
			}
		}
	}
	immediate = {
		# PINNACLE_SOCIETY_DEPOSIT_REMOVAL
		if = {
			limit = { from = { is_common_empire = no } }
			if = { limit = { has_deposit = d_district_governor} while = { limit = { has_deposit = d_district_governor } remove_deposit = d_district_governor } }
			if = { limit = { has_deposit = d_district_university} while = { limit = { has_deposit = d_district_university } remove_deposit = d_district_university } }
			if = { limit = { has_deposit = d_district_defense} while = { limit = { has_deposit = d_district_defense } remove_deposit = d_district_defense } }
			if = { limit = { has_deposit = d_district_industry} while = { limit = { has_deposit = d_district_industry } remove_deposit = d_district_industry } }
		}
		if = {
			limit = { from = { is_hive_empire = no } }
			if = { limit = { has_deposit = d_district_queen } while = { limit = { has_deposit = d_district_queen } remove_deposit = d_district_queen } }
			if = { limit = { has_deposit = d_district_nursery } while = { limit = { has_deposit = d_district_nursery } remove_deposit = d_district_nursery } }
			if = { limit = { has_deposit = d_district_forest } while = { limit = { has_deposit = d_district_forest } remove_deposit = d_district_forest } }
			if = { limit = { has_deposit = d_district_entrepot } while = { limit = { has_deposit = d_district_entrepot } remove_deposit = d_district_entrepot } }
		}
		if = {
			limit = { from = { is_machine_empire = no } }
			if = { limit = { has_deposit = d_district_security } while = { limit = { has_deposit = d_district_security } remove_deposit = d_district_security } }
			if = { limit = { has_deposit = d_district_foundry } while = { limit = { has_deposit = d_district_foundry } remove_deposit = d_district_foundry } }
			if = { limit = { has_deposit = d_district_upgrade } while = { limit = { has_deposit = d_district_upgrade } remove_deposit = d_district_upgrade } }
			# if = { limit = { has_deposit = d_district_recycling } while = { limit = { has_deposit = d_district_recycling } remove_deposit = d_district_recycling } }
		}
		if = {
			limit = { from = { is_megacorp = no } }
			if = { limit = { has_deposit = d_district_finance } while = { limit = { has_deposit = d_district_finance } remove_deposit = d_district_finance } }
			if = { limit = { has_deposit = d_district_casino } while = { limit = { has_deposit = d_district_casino } remove_deposit = d_district_casino } }
			if = { limit = { has_deposit = d_district_bank } while = { limit = { has_deposit = d_district_bank } remove_deposit = d_district_bank } }
			if = { limit = { has_deposit = d_district_journalism } while = { limit = { has_deposit = d_district_journalism } remove_deposit = d_district_journalism } }
		}
	}
}

# Remove deposits on_terraforming_complete
# From = owner = country
planet_event = {
	id = UniqueAscensionPerksEvents.303
	hide_window = yes
	is_triggered_only = yes
	# pre_triggers = { has_owner = yes }
	trigger = {
		has_deposit = yes
		exists = from
		from = {
			OR = { has_ascension_perk = ap_pyramidal_society has_country_flag = ap_pyramidal_society }
		}
		colonizable_planet = no
	}
	immediate = {
		planet_event = { id = UniqueAscensionPerksEvents.302 scopes = { from = from } }
	}
}

######################################
#									 #
###### Surgical Orbital Strike #######
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.310
	title = "ap_orbital_surgical_strike"
	desc = "ap_orbital_surgical_strike_desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_surgical_strike
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT }
}

# on_planet_bombarded
# From = Bombarder
planet_event = {
	id = UniqueAscensionPerksEvents.311
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		from = { has_ascension_perk = ap_orbital_surgical_strike has_country_flag = surgical_strike_active }
		NOT = { has_planet_flag = had_surgical_strike }
		any_fleet_in_orbit = {
			is_ship_class = shipclass_military
			# exists = owner
			is_owned_by = from
			fleet_size > 20
		}
 	}
	immediate = {
		random_fleet_in_orbit = {
			limit = {
				is_ship_class = shipclass_military
				# exists = owner
				is_owned_by = from
				# exists = orbit
				# orbit = { is_planet = root }
				fleet_size > 20
			}
			root = {
				set_timed_planet_flag = { flag = had_surgical_strike months = 4 }
				random = { chance = 15 random_owned_pop = { kill_pop = yes } }
			}
			save_event_target_as = surgical_strike_fleet
			from = { country_event = { id = UniqueAscensionPerksEvents.312 } }
		}
	}
}

country_event = {
	id = UniqueAscensionPerksEvents.312
	title = "UniqueAscensionPerksEvents.312.Name"
	desc = "UniqueAscensionPerksEvents.312.Desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_surgical_strike
	location = event_target:surgical_strike_planet
	is_triggered_only = yes
	immediate = {
		from = { save_event_target_as = surgical_strike_planet }
	}
	option = {
		name = "UniqueAscensionPerksEvents.312.Raid"
		allow = { has_technology = tech_raid_resources }
		trigger = { event_target:surgical_strike_planet = { NOT = { has_planet_flag = had_surgical_strike_resources_raid } } }
		custom_tooltip = "UniqueAscensionPerksEvents.312.Raid.tooltip"
		hidden_effect = {
			event_target:surgical_strike_planet = {
				# surgical_strike_take_resources = yes
				set_timed_planet_flag = { flag = had_surgical_strike_resources_raid years = 5 }
				surgical_strike_resources = yes
				if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 50 } } surgical_strike_resources = yes
					if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 100 } } surgical_strike_resources = yes
						if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 150 } } surgical_strike_resources = yes
							if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 200 } } surgical_strike_resources = yes
								if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 250 } } surgical_strike_resources = yes
									if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 300 } } surgical_strike_resources = yes }
								}
							}
						}
					}
				}
			}
			country_event = { id = UniqueAscensionPerksEvents.313 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.312.District"
		trigger = { event_target:surgical_strike_planet = { num_districts = { type = any value > 0 } } } # has_district = yes
		custom_tooltip = "UniqueAscensionPerksEvents.312.District.tooltip"
		hidden_effect = {
			event_target:surgical_strike_planet = {
				# surgical_strike_destroy_districts = yes
				surgical_strike_districts = yes
				while = { count = 3 random = { chance = 50 surgical_strike_districts = yes } }
				if = {
					limit = { event_target:surgical_strike_fleet = { fleet_size > 40 } } random = { chance = 50 surgical_strike_districts = yes }
					if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 80 } } random = { chance = 50 surgical_strike_districts = yes }
						if = {
							limit = { event_target:surgical_strike_fleet = { fleet_size > 120 } } random = { chance = 50 surgical_strike_districts = yes }
							if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 160 } } random = { chance = 50 surgical_strike_districts = yes }
								if = {
									limit = { event_target:surgical_strike_fleet = { fleet_size > 200 } } random = { chance = 50 surgical_strike_districts = yes }
									if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 240 } } random = { chance = 50 surgical_strike_districts = yes }
										if = {
											limit = { event_target:surgical_strike_fleet = { fleet_size > 280 } } random = { chance = 50 surgical_strike_districts = yes }
											if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 320 } } random = { chance = 50 surgical_strike_districts = yes } }
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.312.Building"
		trigger = { event_target:surgical_strike_planet = { has_building = yes } }
		custom_tooltip = "UniqueAscensionPerksEvents.312.Building.tooltip"
		hidden_effect = {
			event_target:surgical_strike_planet = {
				# surgical_strike_destroy_buildings = yes
				surgical_strike_buildings = yes
				while = { count = 1 random = { chance = 50 surgical_strike_buildings = yes } }
				if = {
					limit = { event_target:surgical_strike_fleet = { fleet_size > 60 } } random = { chance = 50 surgical_strike_buildings = yes }
					if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 120 } } random = { chance = 50 surgical_strike_buildings = yes }
						if = {
							limit = { event_target:surgical_strike_fleet = { fleet_size > 180 } } random = { chance = 50 surgical_strike_buildings = yes }
							if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 240 } } random = { chance = 50 surgical_strike_buildings = yes }
								if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 300 } } random = { chance = 50 surgical_strike_buildings = yes } }
							}
						}
					}
				}
			}
		}
	}
	option = {
		allow = { OR = { has_ascension_perk = ap_nihilistic_acquisition has_valid_civic = civic_barbaric_despoilers is_homicidal = yes has_valid_civic = civic_machine_assimilator } }
		name = "UniqueAscensionPerksEvents.312.Abduct"
		custom_tooltip = "UniqueAscensionPerksEvents.312.Abduct.tooltip"
		hidden_effect = {
			event_target:surgical_strike_planet = {
				# surgical_strike_abduct_pop = yes
				random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes
				while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
				if = {
					limit = { event_target:surgical_strike_fleet = { fleet_size > 40 } } while = { count = 2 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
					if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 80 } } while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
						if = {
							limit = { event_target:surgical_strike_fleet = { fleet_size > 120 } } while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
							if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 160 } } while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
								if = {
									limit = { event_target:surgical_strike_fleet = { fleet_size > 200 } } while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
									if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 240 } } while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
										if = {
											limit = { event_target:surgical_strike_fleet = { fleet_size > 280 } } while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } }
											if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 320 } } while = { count = 5 random = { chance = 50 random_owned_pop = { save_event_target_as = abducted_pop } surgical_strike_abducted_pop_colony_transfer = yes } } }
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.312.Pop"
		custom_tooltip = "UniqueAscensionPerksEvents.312.Pop.tooltip"
		hidden_effect = {
			event_target:surgical_strike_planet = {
				# surgical_strike_kill_pop = yes
				random_owned_pop = { surgical_strike_killed_pop = yes }
				while = { count = 9 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
				if = {
					limit = { event_target:surgical_strike_fleet = { fleet_size > 40 } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
					if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 80 } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
						if = {
							limit = { event_target:surgical_strike_fleet = { fleet_size > 120 } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
							if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 160 } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
								if = {
									limit = { event_target:surgical_strike_fleet = { fleet_size > 200 } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
									if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 240 } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
										if = {
											limit = { event_target:surgical_strike_fleet = { fleet_size > 280 } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } }
											if = { limit = { event_target:surgical_strike_fleet = { fleet_size > 320 } } while = { count = 5 random = { chance = 50 random_owned_pop = { surgical_strike_killed_pop = yes } } } }
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.312.Ragnarok"
		custom_tooltip = "ragnarok_strike_tooltip"
		allow = { has_technology = tech_ragnarok_strike event_target:surgical_strike_fleet = { fleet_size > 200 any_owned_ship = { is_ship_size = titan } } }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.314 } }
	}
	option = { name = ABORT ai_chance = { factor = 0.1 } default_hide_option = yes }
}

country_event = {
	id = UniqueAscensionPerksEvents.313
	title = "UniqueAscensionPerksEvents.313.Name"
	desc = "UniqueAscensionPerksEvents.313.Desc"
	picture = GFX_evt_victorious_army
	show_sound = event_ground_battle
	is_triggered_only = yes
	location = event_target:surgical_strike_planet
	option = { name = EXCELLENT }
}

country_event = {
	id = UniqueAscensionPerksEvents.314
	show_sound = event_red_alert
	title = "UniqueAscensionPerksEvents.314.Name"
	desc = "UniqueAscensionPerksEvents.314.Desc"
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = surgical_strike_room }
	location = event_target:surgical_strike_planet
	is_triggered_only = yes
	option = {
		name = "UniqueAscensionPerksEvents.314.a"
		custom_tooltip = "ragnarok_strike_tooltip"
		hidden_effect = {
			event_target:surgical_strike_fleet = { set_event_locked = yes }
			country_event = { id = UniqueAscensionPerksEvents.315 days = 30 }
		}
	}
	option = { name = ABORT ai_chance = { factor = 0.1 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.312 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.315
	show_sound = event_super_explosion
	title = "UniqueAscensionPerksEvents.315.Name"
	desc = "UniqueAscensionPerksEvents.315.Desc"
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = surgical_strike_room }
	location = event_target:surgical_strike_planet
	is_triggered_only = yes
	immediate = {
		event_target:surgical_strike_planet = {
			every_owned_pop = { surgical_strike_killed_pop = yes }
			remove_all_buildings = yes
			destroy_colony = yes
			add_threat = { who = root amount = 2 }
			if = {
				limit = { OR = { merg_is_habitat = yes has_ringworld_output_boost = yes } }
				if = {
					limit = { merg_is_habitat = yes }
					spawn_habitat_cracker_effect = yes
				}
				else_if = {
					limit = { has_ringworld_output_boost = yes }
					spawn_ringworld_cracker_effect = yes
					change_pc = pc_ringworld_habitable_damaged
				}
				else_if = {
					limit = { is_planet_class = pc_ringworld_tech }
					spawn_ringworld_cracker_effect = yes
					change_pc = pc_ringworld_tech_damaged
				}
				else_if = {
					limit = { is_planet_class = pc_ringworld_seam }
					spawn_ringworld_cracker_effect = yes
					change_pc = pc_ringworld_seam_damaged
				}
			}
			else = { change_pc = pc_broken }
			if = {
				limit = { exists = orbital_station }
				orbital_station = { dismantle = yes }
			}
		}
	}
	option = { name = EXCELLENT event_target:surgical_strike_fleet = { set_event_locked = no } }
}

######################################
#									 #
############ Slow Learner ############
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.400
	title = "ap_slow_learner"
	desc = "ap_slow_learner_desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = slow_learner_room }
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = {
		NOT = { has_active_event = { UniqueAscensionPerksEvents.400 UniqueAscensionPerksEvents.401 } }
	}
	immediate = {
		get_capital_planet = yes
		country_event = { id = UniqueAscensionPerksEvents.401 days = 3584 } # 10 years
		run_in_ai_mode = yes # Without this immediate is not invoked when event runs in a special mode that allows AI to collect trade data
	}
	option = {
		name = EXCELLENT
		enable_special_project = { name = SLOW_LEARNER_ARMY location = event_target:capital_planet owner = root }
	}
}
# v3.3 values reduced
country_event = {
	id = UniqueAscensionPerksEvents.401
	title = "UniqueAscensionPerksEvents.401.Name"
	desc = "UniqueAscensionPerksEvents.401.Desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	auto_select = yes
	force_open = yes
	auto_opens = yes
	picture_event_data = { room = slow_learner_room }
	is_triggered_only = yes
	trigger = {
		NAND = {
			has_modifier = slow_learner_bonus_1
			has_modifier = slow_learner_bonus_2
			has_modifier = slow_learner_bonus_3
			has_modifier = slow_learner_bonus_4
		}
		NOT = { has_active_event = { UniqueAscensionPerksEvents.400 UniqueAscensionPerksEvents.401 } }
	}
	immediate = {
		# Do self call for performance reason.
		if = {
			limit = { NOT = { has_modifier = slow_learner_bonus_5 } }
			if = {
				limit = {
					NOR = {
						has_modifier = slow_learner_bonus_1
						has_modifier = slow_learner_bonus_2
						has_modifier = slow_learner_bonus_3
						has_modifier = slow_learner_bonus_4
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.401 days = 5376 } # 25 years
			}
			else_if = {
				limit = {
					calc_true_if = {
						amount = 1
						has_modifier = slow_learner_bonus_1
						has_modifier = slow_learner_bonus_2
						has_modifier = slow_learner_bonus_3
						has_modifier = slow_learner_bonus_4
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.401 days = 8960 } # 50 years
				add_resource = { unity = 1024 }
			}
			else_if = {
				limit = {
					calc_true_if = {
						amount = 2
						has_modifier = slow_learner_bonus_1
						has_modifier = slow_learner_bonus_2
						has_modifier = slow_learner_bonus_3
						has_modifier = slow_learner_bonus_4
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.401 days = 17920 } # 100 years
				add_resource = { unity = 2048 }
			}
			else = {
				add_modifier = { modifier = slow_learner_bonus_5 } # Final reward
				add_resource = { unity = 4096 }
			}
		}
		run_in_ai_mode = yes # Without this immediate is not invoked when event runs in a special mode that allows AI to collect trade data
	}
	# Halved values
	option = { name = "UniqueAscensionPerksEvents.401.Alpha"	trigger = { NOT = { has_modifier = slow_learner_bonus_1 } }	add_modifier = { modifier = slow_learner_bonus_1 } add_resource = { unity = 2000 } }
	option = { name = "UniqueAscensionPerksEvents.401.Beta" 	trigger = { NOT = { has_modifier = slow_learner_bonus_2 } }	add_modifier = { modifier = slow_learner_bonus_2 } add_resource = { unity = 2000 } }
	option = { name = "UniqueAscensionPerksEvents.401.Gamma"	trigger = { NOT = { has_modifier = slow_learner_bonus_3 } }	add_modifier = { modifier = slow_learner_bonus_3 } add_resource = { unity = 2000 } }
	option = { name = "UniqueAscensionPerksEvents.401.Delta"	trigger = { NOT = { has_modifier = slow_learner_bonus_4 } }	add_modifier = { modifier = slow_learner_bonus_4 } add_resource = { unity = 2000 } }
	option = { name = OK default_hide_option = yes	hidden_effect = { if = { limit = { NOT = { has_modifier = slow_learner_bonus_5 } } country_event = { id = UniqueAscensionPerksEvents.401 days = 800 } } } }
}
# v3.3 value reduced
# Project
country_event = {
	id = UniqueAscensionPerksEvents.402
	title = "SLOW_LEARNER_ARMY"
	desc = "UniqueAscensionPerksEvents.402.Desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_slow_learner
	is_triggered_only = yes
	immediate = { set_country_flag = slow_learner_army }
	option = { name = EXCELLENT add_resource = { unity = 12000 } }
}

######################################
#									 #
######## Utopian Realisation #########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.410
	title = "ap_utopian_realisation"
	desc = "ap_utopian_realisation_desc"
	show_sound = event_laboratory_sound
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = utopian_realisation_room }
	is_triggered_only = yes
	location = event_target:capital_planet
	immediate = { get_capital_planet = yes }
	option = {
		name = EXCELLENT
		event_target:capital_planet = {
			enable_special_project = { name = UTOPIAN_REALISATION location = event_target:capital_planet owner = root }
		}
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.411
	title = "UniqueAscensionPerksEvents.411.Name"
	desc = "UniqueAscensionPerksEvents.411.Desc"
	show_sound = event_laboratory_sound
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = utopian_realisation_room }
	is_triggered_only = yes
	location = this
	immediate = {
		while = { count = 8
			limit = {
				any_galaxy_species = {
					is_sapient = yes
					is_robotic = no
					root.owner = {
						count_owned_species = { limit = { is_same_species = prevprev } count = 0 }
					}
				}
			}
			random_galaxy_species = {
				limit = {
					is_sapient = yes
					is_robotic = no
					root.owner = {
						count_owned_species = { limit = { is_same_species = prevprev } count = 0 }
					}
				}
				root = { create_pop = { species = prev } }
			}
		}
		while = { count = 2
			create_species = {
				name = random
				class = random_non_machine
				portrait = random
				traits = random
				# homeworld = root
				# sapient = no
				effect = {
					reroll_random = yes
					random_list = {
						24 = { modifier = { factor = 2 ideal_planet_class = root } }
						24 = { modifier = { factor = 24 is_same_species_class = root.growing_species } set_species_homeworld = root }
						2 = {
							modifier = { factor = 0 OR = { root = { merg_is_gaia_basic = yes } NOT = { has_trait = trait_pc_gaia_preference } } }
							modifier = { factor = 24 has_trait = trait_pc_gaia_preference }
							modify_species = {
								species = this
								base = none
								remove_trait = trait_pc_gaia_preference
								ideal_planet_class = root
								add_traits_at_start_of_list = yes
								# change_scoped_species = no
							}
						}
					}
				}
			}
			create_pop = { species = last_created_species }
			reroll_random = yes
		}
		run_in_ai_mode = yes # Without this immediate is not invoked when event runs in a special mode that allows AI to collect trade data
	}

	after = {
		hidden_effect = {
			if = { limit = { planet_size < 11 } change_planet_size = 6 } # min
			else_if = { limit = { planet_size < 14 } change_planet_size = 7 }
			else_if = { limit = { planet_size < 17 } change_planet_size = 8 }
			else_if = { limit = { planet_size < 21 } change_planet_size = 9 }
			else_if = { limit = { planet_size < 28 } set_planet_size = 29 }
			else = { change_planet_size = 1 } # max
			while = { count = 2
				create_species = {
					name = random
					class = random_non_machine
					portrait = random
					traits = random
					homeworld = root
					sapient = no
				}
				create_pop = { species = last_created_species }
				reroll_random = yes
			}
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.411.a" # "Do it completely."
		custom_tooltip = "UniqueAscensionPerksEvents.411.a.tooltip"
		trigger = { merg_is_gaia_basic = no is_artificial = no }
		change_pc = pc_gaia
		add_modifier = { modifier = "utopian_gaia_world" }
		ai_chance = {
			factor = 0.1
			modifier = { factor = 0 owner = { OR = { is_gestalt = yes is_synthetic_empire = yes } } }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.411.a"
		trigger = { merg_is_gaia_basic = yes }
		custom_tooltip = "UniqueAscensionPerksEvents.411.a.tooltip"
		add_modifier = { modifier = "utopian_gaia_world" }
	}
	option = {
		name = "UniqueAscensionPerksEvents.411.b"
		trigger = { merg_is_gaia_basic = no }
		custom_tooltip = "UniqueAscensionPerksEvents.411.a.tooltip"
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.412
	hide_window = yes
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	trigger = {
		has_megacorp = yes
		has_modifier = "utopian_gaia_world"
		gpm_is_planet_class_city = yes # merg_is_arcology = yes
		exists = owner
		owner = { has_ascension_perk = ap_utopian_realisation }
	}
	immediate = {
		remove_modifier = "utopian_gaia_world"
		add_modifier = { modifier = "utopian_ecumenopolis_world" }
	}
}

######################################
#									 #
########## Executive Vigor ###########
#									 #
######################################

# event = {
# 	id = UniqueAscensionPerksEvents.420
# 	hide_window = yes
# 	is_triggered_only = yes
# 	immediate = {
# 		random_playable_country = {
# 			limit = { has_ascension_perk = ap_executive_vigor NOT = { has_country_flag = ap_executive_vigor_project_available } }
# 			country_event = { id = UniqueAscensionPerksEvents.421 }
# 		}
# 	}
# }

country_event = {
	id = UniqueAscensionPerksEvents.421
	title = "ap_executive_vigor"
	desc = "ap_executive_vigor_desc"
	show_sound = event_factions
	picture = GFX_evt_galactic_senate
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes set_country_flag = ap_executive_vigor_project_available }
	option = { name = EXCELLENT enable_special_project = { name = EXECUTIVE_VIGOR location = event_target:capital_planet owner = root } }
}

country_event = {
	id = UniqueAscensionPerksEvents.422
	title = "EXECUTIVE_VIGOR"
	desc = "EXECUTIVE_VIGOR_DESC"
	show_sound = event_mystic_reveal
	picture = GFX_evt_galactic_senate
	is_triggered_only = yes
	trigger = {
		NAND = { has_modifier = executive_vigor_bonus_1 has_modifier = executive_vigor_bonus_2 has_modifier = executive_vigor_bonus_3 }
	}
	option = { name = "UniqueAscensionPerksEvents.422.First"	allow = { NOT = { has_modifier = executive_vigor_bonus_1 } }	add_modifier = { modifier = executive_vigor_bonus_1 } }
	option = { name = "UniqueAscensionPerksEvents.422.Second"	allow = { NOT = { has_modifier = executive_vigor_bonus_2 } }	add_modifier = { modifier = executive_vigor_bonus_2 } }
	option = { name = "UniqueAscensionPerksEvents.422.Third"	allow = { NOT = { has_modifier = executive_vigor_bonus_3 } }	add_modifier = { modifier = executive_vigor_bonus_3 } }
	option = { name = OK default_hide_option = yes }
}

######################################
#									 #
######### Light of Eternity ##########
#									 #
###################################### Credits to Thanatos996 the original creator of that feature in Stellaris 2.1

country_event = {
	id = UniqueAscensionPerksEvents.430
	title = "ap_antimatter"
	desc = "ap_antimatter_desc"
	show_sound = event_activating_unknown_technology
	picture = GFX_evt_antimatter
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = {
		set_spawn_system_batch = begin
		get_capital_planet = yes
		event_target:capital_planet = {
			spawn_system = { min_distance >= 4 max_distance <= 9 initializer = "white_hole_system_1" }
		}
		set_spawn_system_batch = end
		last_created_system = { # Gives also techs
			system_event = { id = UniqueAscensionPerksEvents.439 days = 120 random = 60 }
		}
		# v3.4 values doubled
		set_variable = { which = white_hole_systems value = 1 }
		event_target:global_event_country = { change_variable = { which = white_hole_systems value = 1 } }
	}
	after = { add_research_option = tech_mine_anti_matter }
	option = { name = "UniqueAscensionPerksEvents.430.a" hidden_effect = { set_country_flag = white_hole_detection_manually } }
	option = { name = EXCELLENT hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.432 days = 720 random = 360 } } default_hide_option = yes }
}

ship_event = {
	id = UniqueAscensionPerksEvents.431
	title = "UniqueAscensionPerksEvents.431.Name"
	desc = {
		trigger = {
			success_text = { text = "UniqueAscensionPerksEvents.431.anti_matter" hidden:owner = { has_country_resource = { type = anti_matter amount > 0 } } }
			success_text = { text = "UniqueAscensionPerksEvents.431.has_tech" OR = { AND = { hidden:owner = { has_country_resource = { type = anti_matter amount > 0 } } hidden:owner = { has_technology = tech_mine_anti_matter } } } }
			success_text = { text = "UniqueAscensionPerksEvents.431.no_tech" NOR = { AND = { hidden:owner = { has_country_resource = { type = anti_matter amount > 0 } } hidden:owner = { has_technology = tech_mine_anti_matter } } } }
		}
	}
	picture = GFX_evt_surreal_visions
	show_sound = event_default
	location = from
	is_triggered_only = yes
	trigger = {
		from = { has_any_strategic_resource = yes }
		owner = {
			root.owner = { has_country_resource = { type = anti_matter amount > 0 } }
			NOT = { has_country_flag = anti_matter_found }
		}
	}
	immediate = { from = { if = { limit = { has_country_resource = { type = anti_matter amount > 0 } } root.owner = { set_country_flag = anti_matter_found } } } }
	option = { name = OK from = { if = { limit = { has_country_resource = { type = anti_matter amount > 0 } } custom_tooltip = UniqueAscensionPerksEvents.431.anti_matter.tooltip } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.432
	hide_window = yes
	is_triggered_only = yes
	trigger = { # v3.3 added limit
		check_variable = { which = white_hole_systems value < 9 }
		event_target:global_event_country = { check_variable = { which = white_hole_systems value < 36 } }
	}
	immediate = {
		# spawn_white_hole_system = yes
		random_system_within_border = {
			save_event_target_as = lh_spawned_system
			set_spawn_system_batch = begin
			reroll_random = yes
			random_list = {
				100	= { spawn_system = { min_distance >= 4 max_distance <= 9 initializer = "white_hole_system_1" hyperlane = no } }
				100	= { spawn_system = { min_distance >= 5 max_distance <= 12 initializer = "white_hole_system_2" hyperlane = no } }
				100	= { spawn_system = { min_distance >= 6 max_distance <= 15 initializer = "white_hole_system_3" hyperlane = no } }
				40	= { spawn_system = { min_distance >= 7 max_distance <= 18 initializer = "white_hole_system_4" hyperlane = no } }
				40	= { spawn_system = { min_distance >= 8 max_distance <= 21 initializer = "white_hole_system_5" hyperlane = no } }
				5	= { spawn_system = { min_distance >= 9 max_distance <= 24 initializer = "white_hole_system_10" hyperlane = no } }
			}
			last_created_system = {
				# save_event_target_as = white_hole_system
				if = {
					limit = { NOT = { root = { has_country_flag = notify_white_hole_detection_no_warning } } }
					system_event = { id = UniqueAscensionPerksEvents.433 days = 3 }
				}
				add_hyperlane = { from = this to = prev }
				system_event = { id = UniqueAscensionPerksEvents.439 days = 120 random = 60 }
			}
			set_spawn_system_batch = end
		}
		change_variable = { which = white_hole_systems value = 1 }
		event_target:global_event_country = { change_variable = { which = white_hole_systems value = 1 } }

		if = {
			limit = { NOT = { has_country_flag = white_hole_detection_manually } }
			if = {
				limit = {
					check_variable = { which = white_hole_systems value < 4 }
					event_target:global_event_country = { check_variable = { which = white_hole_systems value < 22 } }
				}
				country_event = { id = UniqueAscensionPerksEvents.432 days = 800 random = 400 }
			}
			else_if = {
				limit = { check_variable = { which = white_hole_systems value = 4 } }
				random = { chance = 33.4 country_event = { id = UniqueAscensionPerksEvents.432 days = 1080 random = 360 } }
			}
		}
	}
}

system_event = {
	id = UniqueAscensionPerksEvents.433
	title = "UniqueAscensionPerksEvents.433.Name"
	desc = "UniqueAscensionPerksEvents.433.Desc"
	show_sound = event_activating_unknown_technology
	picture = GFX_evt_antimatter
	location = root # event_target:white_hole_system
	is_triggered_only = yes
	trigger = {
		from = { NOT = { has_country_flag = notify_white_hole_detection_no_warning } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.433.a"
		from = { set_country_flag = notify_white_hole_detection_no_warning }
	}
	option = { name = EXCELLENT }
}

# Edict A-M Main Menu
# v3.3: halved the values
country_event = {
	id = UniqueAscensionPerksEvents.434
	title = "edict_anti_matter_menu"
	desc = "UniqueAscensionPerksEvents.434.Desc"
	show_sound = event_activating_unknown_technology
	picture = GFX_evt_antimatter
	is_advisor_event = yes
	is_triggered_only = yes
	trigger = {
		# NOT = { has_active_event = {
		# 	# UniqueAscensionPerksEvents.434 does not work for self opening.
		# 	UniqueAscensionPerksEvents.435 UniqueAscensionPerksEvents.436 UniqueAscensionPerksEvents.438
		# } }
	}
	option = {
		name = UniqueAscensionPerksEvents.434.Energy
		allow = { has_country_resource = { type = anti_matter amount > 500 } NOT = { has_modifier = anti_matter_energy } }
		add_resource = { anti_matter = -500 }
		add_modifier = { modifier = anti_matter_energy years = 15 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	}
	# option = {
	# 	name = UniqueAscensionPerksEvents.434.Physics
	# 	allow = { has_country_resource = { type = anti_matter amount > 400 } NOT = { has_modifier = anti_matter_dark_physics } }
	# 	add_resource = { anti_matter = -400 }
	# 	add_modifier = { modifier = anti_matter_dark_physics years = 15 }
	# 	hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	# }
	option = {
		name = UniqueAscensionPerksEvents.434.Engineer
		allow = { has_country_resource = { type = anti_matter amount > 400 } NOT = { has_modifier = anti_matter_dark_engineering } }
		add_resource = { anti_matter = -400 }
		add_modifier = { modifier = anti_matter_dark_engineering years = 15 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	}
	option = {
		name = UniqueAscensionPerksEvents.434.Dark
		allow = { has_country_resource = { type = anti_matter amount > 750 } NOT = { has_modifier = anti_matter_dark_matter } has_technology = tech_mine_dark_matter }
		add_resource = { anti_matter = -750 }
		add_modifier = { modifier = anti_matter_dark_matter years = 15 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	}
	option = {
		name = UniqueAscensionPerksEvents.434.Weapons
		allow = { has_country_resource = { type = anti_matter amount > 900 } NOT = { has_modifier = anti_matter_energy_weapons } }
		add_resource = { anti_matter = -900 }
		add_modifier = { modifier = anti_matter_energy_weapons years = 15 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	}
	option = {
		name = UniqueAscensionPerksEvents.434.Shields
		allow = { has_country_resource = { type = anti_matter amount > 750 } NOT = { has_modifier = anti_matter_shields } }
		add_resource = { anti_matter = -750 }
		add_modifier = { modifier = anti_matter_shields years = 15 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	}
	option = {
		name = UniqueAscensionPerksEvents.434.Thrusters
		allow = { has_country_resource = { type = anti_matter amount > 500 } NOT = { has_modifier = anti_matter_trusters } }
		add_resource = { anti_matter = -500 }
		add_modifier = { modifier = anti_matter_trusters years = 15 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	}
	option = {
		name = UniqueAscensionPerksEvents.434.Upkeep
		allow = { has_country_resource = { type = anti_matter amount > 500 } NOT = { has_modifier = anti_matter_upkeep } }
		add_resource = { anti_matter = -500 }
		add_modifier = { modifier = anti_matter_upkeep years = 15 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } country_event = { id = UniqueAscensionPerksEvents.435 days = 5400 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.434.WhiteHole"
		trigger = { # v3.3 added limit
			check_variable = { which = white_hole_systems value < 9 }
			event_target:global_event_country = { check_variable = { which = white_hole_systems value < 36 } }
		}
		allow = {
			OR = {
				check_variable = { which = white_hole_systems value < 4 }
				has_country_resource = { type = anti_matter amount > 250 } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.434.Req01 NOT = { has_country_flag = white_hole_detection_cooldown } }
			}
		}
		if = {
			limit = { check_variable = { which = white_hole_systems value >= 4 } }
			add_resource = { anti_matter = -250 }
			if = {
				limit = { has_country_flag = white_hole_detection_manually }
				remove_country_flag = white_hole_detection_manually
			}
		}
		hidden_effect = {
			set_timed_country_flag = { flag = white_hole_detection_cooldown years = 3 }
			country_event = { id = UniqueAscensionPerksEvents.432 }
			country_event = { id = UniqueAscensionPerksEvents.434 }
			country_event = { id = UniqueAscensionPerksEvents.436 days = 1080 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.434.Cloud"
		allow = {
			has_country_resource = { type = anti_matter amount > 500 } has_technology = tech_space_cloud_weapon_1 custom_tooltip = { fail_text = UniqueAscensionPerksEvents.434.Req02 NOT = { has_country_flag = space_clouds_generation_cooldown } }
			count_owned_fleet = { count < 11 limit = { has_fleet_flag = space_clouds_generation_fleet } }
			count_owned_ship = { count < 101 limit = { is_ship_size = space_cloud } }
		}
		add_resource = { anti_matter = -500 }
		custom_tooltip = "UniqueAscensionPerksEvents.434.Cloud.tooltip"
		hidden_effect = {
			set_timed_country_flag = { flag = space_clouds_generation_cooldown years = 3 }
			country_event = { id = UniqueAscensionPerksEvents.434 }
			country_event = { id = UniqueAscensionPerksEvents.438 days = 1080 }
			if = { limit = { exists = capital_scope } capital_scope = { save_event_target_as = spawn_location }
			}
			else = { random_owned_planet = { limit = { is_colony = yes } save_event_target_as = spawn_location } }
			create_fleet = {
				name = "Space Clouds"
				settings = {
					spawn_debris = no
					can_upgrade = no
					uses_naval_capacity = no
					# can_change_composition = no
					# can_disband = no
				}
				effect = {
					set_owner = root
					while = { count = 7 create_ship = { name = "" design = NAME_Dom_Cloud effect = { add_modifier = { modifier = domesticated_aliens } } } }
					while = { count = 7 random = { chance = 50 create_ship = { name = "" design = NAME_Dom_Cloud effect = { add_modifier = { modifier = domesticated_aliens } } } } }
					set_location = { target = event_target:spawn_location distance = 250 angle = random }
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 1000
					set_formation_scale = 4.0
					set_fleet_flag = space_clouds_generation_fleet
				}
			}
		}
	}
	option = { name = EXIT ai_chance = { factor = 0.1 } default_hide_option = yes }
}

country_event = {
	id = UniqueAscensionPerksEvents.435
	title = "UniqueAscensionPerksEvents.435.Name"
	desc = "UniqueAscensionPerksEvents.435.Desc"
	show_sound = event_activating_unknown_technology
	picture = GFX_evt_antimatter
	auto_select = no
	auto_opens = no
	# hide_window = yes
	is_triggered_only = yes
	is_advisor_event = yes
	trigger = { NOT = { has_active_event = { UniqueAscensionPerksEvents.435 UniqueAscensionPerksEvents.436 UniqueAscensionPerksEvents.438 } } }
	# immediate = {
	# 	create_message = {
	# 		type = TRIGG_MOD_GAINED
	# 		localization = UniqueAscensionPerksEvents.435.Desc
	# 		days = 30
	#		target = capital_scope
	# 	}
	# 	play_sound = event_activating_unknown_technology
	# }
	option = {
		name = "edict_anti_matter_menu"
		allow = { NOT = { has_active_event = { UniqueAscensionPerksEvents.434 } } }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.434 } }
	}
	option = { name = "UniqueAscensionPerksEvents.436.b" ai_chance = { factor = 0.1 } default_hide_option = yes }
}

country_event = {
	id = UniqueAscensionPerksEvents.436
	title = "UniqueAscensionPerksEvents.436.Name"
	desc = "UniqueAscensionPerksEvents.436.Desc"
	show_sound = event_activating_unknown_technology
	picture = GFX_evt_antimatter
	auto_select = no
	auto_opens = no
	is_advisor_event = yes
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { UniqueAscensionPerksEvents.435 UniqueAscensionPerksEvents.436 UniqueAscensionPerksEvents.438 } } }
	option = {
		name = "edict_anti_matter_menu"
		allow = { NOT = { has_active_event = { UniqueAscensionPerksEvents.434 } } }
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = notify_white_hole_detection_no_warning } }
				country_event = { id = UniqueAscensionPerksEvents.434 }
			}
		}
	}
	option = { name = "UniqueAscensionPerksEvents.436.b" ai_chance = { factor = 0.1 } default_hide_option = yes }
}

# LEGACY (on_system_survey_ship)
# ship_event = {
# 	id = UniqueAscensionPerksEvents.437
# 	title = "UniqueAscensionPerksEvents.531.Name"
# 	desc = "UniqueAscensionPerksEvents.437.Desc"
# 	picture = GFX_evt_space_station
# 	show_sound = event_scanner
# 	location = from # event_target:survey_system
# 	is_advisor_event = yes
# 	is_triggered_only = yes
# 	trigger = {
# 		exists = owner
# 		owner = { has_ascension_perk = ap_antimatter }
# 		exists = from
# 		from = {
# 			is_star_class = sc_whitte_hole
# 			NOT = { exists = starbase }
# 		}
# 	}
# 	immediate = {
# 		owner = { save_event_target_as = science_ship_owner }
# 	}
# 	option = { name = EXCELLENT deploy_outpost = yes }
# }

country_event = {
	id = UniqueAscensionPerksEvents.438
	title = "UniqueAscensionPerksEvents.438.Name"
	desc = "UniqueAscensionPerksEvents.438.Desc"
	show_sound = event_activating_unknown_technology
	picture = GFX_evt_antimatter
	auto_select = no
	auto_opens = no
	is_advisor_event = yes
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { UniqueAscensionPerksEvents.435 UniqueAscensionPerksEvents.436 UniqueAscensionPerksEvents.438 } } }
	option = {
		name = "edict_anti_matter_menu"
		allow = { NOT = { has_active_event = { UniqueAscensionPerksEvents.434 } } }
		hidden_effect = {
			if = {
				limit = { count_owned_fleet = { count < 11 limit = { is_civilian = no has_fleet_flag = space_clouds_generation_fleet } } }
				country_event = { id = UniqueAscensionPerksEvents.434 }
			}
		}
	}
	option = { name = "UniqueAscensionPerksEvents.436.b" ai_chance = { factor = 0.1 } default_hide_option = yes }
}

# From = country
system_event = {
	id = UniqueAscensionPerksEvents.439
	hide_window = yes
	# mean_time_to_happen = { months = 5 }
	is_triggered_only = yes
	trigger = {
		any_system_planet = {
			is_planet_class = pc_white_hole
			NOT = { has_planet_flag = white_hole_physics_deposit }
		}
	}
	immediate = {
		every_system_planet = {
			limit = {
				is_planet_class = pc_white_hole
				NOT = { has_planet_flag = white_hole_physics_deposit }
			}
			set_planet_flag = white_hole_physics_deposit
			reroll_random = yes
			random_list = {
				10 = { add_deposit = d_physics_6 }
				10 = { add_deposit = d_physics_7 }
				10 = { add_deposit = d_physics_8 }
				10 = { add_deposit = d_physics_9 }
			}
		}
		from = {
			random_list = {
				40 = {}
				20 = { modifier = { factor = 0 OR = { has_technology = tech_mine_anti_matter has_tech_option = tech_mine_anti_matter } } add_research_option = tech_mine_anti_matter }
				10 = { modifier = { factor = 0 OR = { has_technology = tech_mine_dark_matter has_tech_option = tech_mine_dark_matter } } add_research_option = tech_mine_dark_matter }
				10 = { modifier = { factor = 0 OR = { has_technology = tech_space_cloud_weapon_1 has_tech_option = tech_space_cloud_weapon_1 } } add_research_option = tech_space_cloud_weapon_1 }
			}
		}
	}
}

######################################
#									 #
######### Self Managed Colony ########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.460
	title = "ap_self_aware_colony"
	desc = "ap_self_aware_colony_desc"
	show_sound = event_cityscape
	picture = GFX_evt_self_aware_colony
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

# From decision_self_aware_colony_menu
# This = event_target:self_aware_planet
planet_event = {
	id = UniqueAscensionPerksEvents.461
	title = "ap_self_aware_colony"
	desc = "UniqueAscensionPerksEvents.461.Desc"
	show_sound = event_cityscape
	picture = GFX_evt_self_aware_colony
	location = root
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	trigger = {
		exists = owner # pre_triggers are for on_action
		is_colony = yes
		has_modifier = self_aware_colony
		is_under_colonization = no
	}
	immediate = {
		# save_event_target_as = self_aware_planet
		set_planet_flag = self_aware_planet
	}
	after = {
		hidden_effect = {
			if = {
				limit = { has_planet_flag = self_aware_planet }
				if = { limit = { owner = { has_country_resource = { type = minerals amount < 200 } } }
					remove_planet_flag = self_aware_planet
				}
				else = {
					planet_event = { id = UniqueAscensionPerksEvents.461 }
				}
			}
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.461.Construct.Random"
		custom_tooltip = "UniqueAscensionPerksEvents.461.Construct.Random.tooltip"
		allow = { owner = { has_country_resource = { type = minerals amount > 1000 } } }
		hidden_effect = { set_planet_flag = self_aware_manual_order }
		planet_event = { id = UniqueAscensionPerksEvents.465 days = -1 } # self_aware_colony_deposit_selection = yes
	}
	option = { name = "UniqueAscensionPerksEvents.461.Construct.NoRandom" allow = { owner = { has_country_resource = { type = minerals amount >= 200 } NOT = { has_active_event = { UniqueAscensionPerksEvents.466 } } } } custom_tooltip = "UniqueAscensionPerksEvents.461.Construct.NoRandom.tooltip" hidden_effect = { remove_planet_flag = self_aware_planet planet_event = { id = UniqueAscensionPerksEvents.466 } } }
	option = { name = "UniqueAscensionPerksEvents.461.Energy"		allow = { NOT = { has_modifier = self_aware_energy } } self_aware_colony_clear_focus = yes	add_modifier = { modifier = self_aware_energy clear_on_owner_change = yes } }
	option = { name = "UniqueAscensionPerksEvents.461.Minerals"		allow = { NOT = { has_modifier = self_aware_minerals } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.461.Req01 OR = { merg_is_habitat = no AND = { merg_is_habitat = yes has_planet_flag = mining_habitat } } } } self_aware_colony_clear_focus = yes	add_modifier = { modifier = self_aware_minerals clear_on_owner_change = yes } }
	option = { name = "UniqueAscensionPerksEvents.461.Food"			allow = { NOT = { has_modifier = self_aware_food } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.461.Req01 merg_is_habitat = no } } self_aware_colony_clear_focus = yes	add_modifier = { modifier = self_aware_food clear_on_owner_change = yes } }
	option = { name = "UniqueAscensionPerksEvents.461.Consumers"	allow = { owner = { has_technology = tech_luxuries_2 is_gestalt = no } NOT = { has_modifier = self_aware_consumers } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.461.Req01 merg_is_habitat = no } } self_aware_colony_clear_focus = yes	add_modifier = { modifier = self_aware_consumers clear_on_owner_change = yes } }
	option = { name = "UniqueAscensionPerksEvents.461.Alloys"		allow = { owner = { has_technology = tech_alloys_2 } NOT = { has_modifier = self_aware_alloys } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.461.Req01 merg_is_habitat = no } } self_aware_colony_clear_focus = yes	add_modifier = { modifier = self_aware_alloys clear_on_owner_change = yes } }
	option = { name = "UniqueAscensionPerksEvents.461.Research"		allow = { owner = { has_technology = tech_basic_science_lab_3 } NOT = { has_modifier = self_aware_research } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.461.Req01 OR = { merg_is_habitat = no AND = { merg_is_habitat = yes has_planet_flag = research_habitat } } } } self_aware_colony_clear_focus = yes	add_modifier = { modifier = self_aware_research clear_on_owner_change = yes } }
	option = { name = "UniqueAscensionPerksEvents.461.Trade"		allow = { owner = { has_technology = tech_interstellar_economics is_gestalt = no } NOT = { has_modifier = self_aware_trade } } self_aware_colony_clear_focus = yes	add_modifier = { modifier = self_aware_trade clear_on_owner_change = yes } }
	option = { name = "UniqueAscensionPerksEvents.461.Soldiers"		allow = { owner = { has_technology = tech_centralized_command } NOT = { has_modifier = self_aware_army } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.461.Req01 merg_is_habitat = no } } self_aware_colony_clear_focus = yes	add_modifier = { modifier = self_aware_army clear_on_owner_change = yes } }
	option = { name = "UniqueAscensionPerksEvents.461.Strategic"	allow = { owner = { has_technology = tech_exotic_gases has_technology = tech_volatile_motes has_technology = tech_rare_crystals } NOT = { has_modifier = self_aware_strategic } custom_tooltip = { fail_text = UniqueAscensionPerksEvents.461.Req01 merg_is_habitat = no } } self_aware_colony_clear_focus = yes	add_modifier = { modifier = self_aware_strategic clear_on_owner_change = yes } }
	option = { name = "UniqueAscensionPerksEvents.461.NoFocus"		allow = { NOT = { has_modifier = self_aware_no_focus } } self_aware_colony_clear_focus = yes	add_modifier = { modifier = self_aware_no_focus clear_on_owner_change = yes } }
	option = {
		name = "UniqueAscensionPerksEvents.461.Reset"
		custom_tooltip = "decision_self_aware_colony_reset_tooltip"
		hidden_effect = {
			# set_variable = { which = num_pops_self_aware_planet value = trigger:num_pops }
			# reset_self_aware_planet = { POPS = "@[Root.num_pops_self_aware_planet]" } # TODO Malformed token
			remove_self_aware_planet = yes
			add_modifier = { modifier = self_aware_colony clear_on_owner_change = yes }
			add_modifier = { modifier = self_aware_no_focus clear_on_owner_change = yes }
			set_planet_flag = self_aware_planet
			switch = { trigger = num_pops
				5	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 5 } }
				10	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 10 } }
				15	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 15 } }
				20	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 20 } }
				25	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 25 } }
				30	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 30 } }
				35	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 35 } }
				40	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 40 } }
				45	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 45 } }
				50	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 50 } }
				55	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 55 } }
				60	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 60 } }
				65	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 65 } }
				70	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 70 } }
				75	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 75 } }
				80	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 80 } }
				85	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 85 } }
				90	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 90 } }
				95	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 95 } }
				100	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 100 } }
				105	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 105 } }
				110	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 110 } }
				115	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 115 } }
				120	<= { planet_event = { id = UniqueAscensionPerksEvents.465 days = 120 } }
			}
		}
	}
	option = { name = "UniqueAscensionPerksEvents.461.Off" allow = { has_modifier = self_aware_colony } hidden_effect = { remove_self_aware_planet = yes } custom_tooltip = "decision_self_aware_colony_to_normal_tooltip" }
	option = { name = EXIT hidden_effect = { remove_planet_flag = self_aware_planet } ai_chance = { factor = 0.1 } default_hide_option = yes }
	abort_effect = { remove_planet_flag = self_aware_planet }
}
# on_monthly_pulse_country
country_event = {
	id = UniqueAscensionPerksEvents.462
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 1 }
	# trigger = {
	# 	merg_is_default_empire = yes
	# 	# OR = { has_global_flag = ap_self_aware_colony
	# 	has_ascension_perk = ap_self_aware_colony
	# 	# }
	# 	has_resource = { type = minerals amount > 1000 } # has_country_resource = { type = minerals amount > 1000 }
	# 	any_owned_planet = { is_colony = yes colony_age > 12 has_modifier = self_aware_colony }
	# }
	immediate = {
		random_owned_planet = {
			limit = { is_colony = yes colony_age > 12 has_modifier = self_aware_colony }
			# self_aware_colony_deposit_selection = yes
			planet_event = { id = UniqueAscensionPerksEvents.465 days = 7 }
		}
	}
}

# planet_event = {
# 	id = UniqueAscensionPerksEvents.463
# 	hide_window = yes
# 	is_triggered_only = yes
# 	# mean_time_to_happen = { days = 6 }
# 	pre_triggers = { has_owner = yes }
# 	trigger = { exists = owner OR = { has_global_flag = ap_self_aware_colony owner = { has_ascension_perk = ap_self_aware_colony } } has_modifier = self_aware_colony }
# 	immediate = { create_pop = { species = owner_main_species } }
# }

# Removed in v3.12 now planet event: very bad method to do this
# country_event = {
# 	id = UniqueAscensionPerksEvents.464
# 	hide_window = yes
# 	is_triggered_only = yes
# 	# mean_time_to_happen = { months = 6 }
# 	trigger = {
# 		OR = {
#			any_playable_country = { has_ascension_perk = ap_self_aware_colony }
#			any_galaxy_planet = { has_owner = yes has_modifier = self_aware_colony }
#		}
# 		NOT = {
# 			# has_global_flag = ap_self_aware_colony
# 			has_ascension_perk = ap_self_aware_colony
# 		}
# 		any_owned_planet = { has_modifier = self_aware_colony }
# 	}
# 	immediate = {
# 		random_owned_planet = {
# 			limit = { has_modifier = self_aware_colony }
# 			remove_self_aware_planet = yes
# 		}
# 	}
# }
# Just for safety, maybe superflous
planet_event = {
	id = UniqueAscensionPerksEvents.464
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			NOT = { exists = fromfrom }
			fromfrom = { has_ascension_perk = ap_self_aware_colony }
		}
		NOT = { has_global_flag = ap_self_aware_colony }
		has_modifier = self_aware_colony
		NAND = {
			exists = from
			from = { has_ascension_perk = ap_self_aware_colony }
		}
	}
	immediate = { remove_self_aware_planet = yes }
}

# Warning: performance-intensive event!
# From UniqueAscensionPerksEvents.461
# TODO: more opt?
planet_event = {
	id = UniqueAscensionPerksEvents.465
	hide_window = yes
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	trigger = {
		exists = owner
		# OR = { has_global_flag = ap_self_aware_colony
		owner = {
			has_ascension_perk = ap_self_aware_colony
			has_resource = { type = minerals amount > 1000 } # has_country_resource = { type = minerals amount > 1000 }
		}
		has_modifier = self_aware_colony
	}
	immediate = {
		# self_aware_colony_deposit_selection = { hidden_effect = {
		owner = { add_resource = { minerals = -200 } }
		random_list = {
			990 = {
				modifier = { factor = 0
					is_variable_set = d_aware_administration_building
					check_variable = { which = d_aware_administration_building value > 0 }
					switch = { trigger = num_pops
						40	> { always = yes }
						80	> { check_variable = { which = d_aware_administration_building value > 1 } }
						120	> { check_variable = { which = d_aware_administration_building value > 2 } }
						160	> { check_variable = { which = d_aware_administration_building value > 3 } }
						200	> { check_variable = { which = d_aware_administration_building value > 4 } }
						240	> { check_variable = { which = d_aware_administration_building value > 5 } }
						280	> { check_variable = { which = d_aware_administration_building value > 6 } }
						320	> { check_variable = { which = d_aware_administration_building value > 7 } }
						360	> { check_variable = { which = d_aware_administration_building value > 8 } }
						400	> { check_variable = { which = d_aware_administration_building value > 9 } }
						400	<={ check_variable = { which = d_aware_administration_building value > 10 } }
						default = { always = no }
					}
					# OR = {
					# AND = { check_variable = { which = d_aware_administration_building value > 0 } num_pops < 40 }
					# AND = { check_variable = { which = d_aware_administration_building value > 1 } num_pops < 80 }
					# AND = { check_variable = { which = d_aware_administration_building value > 2 } num_pops < 120 }
					# AND = { check_variable = { which = d_aware_administration_building value > 3 } num_pops < 160 }
					# AND = { check_variable = { which = d_aware_administration_building value > 4 } num_pops < 200 }
					# AND = { check_variable = { which = d_aware_administration_building value > 5 } num_pops < 240 }
					# AND = { check_variable = { which = d_aware_administration_building value > 6 } num_pops < 280 }
					# AND = { check_variable = { which = d_aware_administration_building value > 7 } num_pops < 320 }
					# AND = { check_variable = { which = d_aware_administration_building value > 8 } num_pops < 360 }
					# AND = { check_variable = { which = d_aware_administration_building value > 9 } num_pops < 400 }
					# AND = { check_variable = { which = d_aware_administration_building value > 10 } num_pops >= 400 }
					# }
				}
				change_variable = { which = d_aware_administration_building value = 1 }
				add_deposit = d_aware_administration_building
			}
			5 = {
				modifier = { factor = 0 OR = { free_housing > 1 has_modifier = self_aware_energy has_modifier = self_aware_minerals has_modifier = self_aware_food } }
				modifier = { factor = 5 free_housing <= -1 }
				modifier = { factor = 10 free_housing <= -5 }
				# modifier = { factor = 10 free_housing <= -10 }
				add_deposit = d_aware_housing_building
			}
			5 = { modifier = { factor = 0 free_amenities > 2 } modifier = { factor = 5 free_amenities <= 0 } modifier = { factor = 10 free_amenities <= -10 } add_deposit = d_aware_amenities_building }
			5 = { modifier = { factor = 0 planet_crime < 10 } modifier = { factor = 5 planet_crime >= 20 } modifier = { factor = 10 planet_crime >= 40 } add_deposit = d_aware_crime_building }
			5 = { modifier = { factor = 0 OR = { has_planet_flag = self_aware_manual_order any_owned_pop = { is_unemployed = yes } } } modifier = { factor = 100 planet_crime < 10 free_amenities > 2 free_housing > 1 } owner = { add_resource = { minerals = 200 } } }
			205 = { # 35
				modifier = { factor = 0 NOR = { has_planet_flag = self_aware_manual_order any_owned_pop = { is_unemployed = yes } } }
				modifier = { add = -45 NOT = { owner = { has_deficit = energy } } }
				modifier = { add = -45 NOT = { owner = { has_deficit = minerals } } }
				modifier = { add = -45 NOT = { owner = { has_deficit = food } } }
				modifier = { add = -18 NOT = { owner = { has_deficit = consumer_goods } } }
				modifier = { add = -18 NOT = { owner = { has_deficit = alloys } } }
				modifier = { add = -9 NOT = { has_modifier = self_aware_no_focus } }
				modifier = { factor = 0.5 merg_is_habitat = yes }
				random_list = {
					5 = { modifier = { factor = 0 NOR = { has_modifier = self_aware_energy has_modifier = self_aware_no_focus } } modifier = { factor = 10 owner = { has_deficit = energy } } add_deposit = d_aware_energy_building }
					5 = {
						modifier = { factor = 0
							OR = {
								AND = { merg_is_habitat = yes NOT = { has_planet_flag = mining_habitat } }
								NOR = { has_modifier = self_aware_minerals has_modifier = self_aware_no_focus }
							}
						}
						modifier = { factor = 10 owner = { has_deficit = minerals } }
						add_deposit = d_aware_mining_building
					}
					5 = {
						modifier = { factor = 0
							OR = {
								merg_is_habitat = yes
								NOR = { has_modifier = self_aware_food has_modifier = self_aware_no_focus }
							}
						}
						modifier = { factor = 10 owner = { has_deficit = food } }
						modifier = { factor = 0.5 owner = { is_synthetic_empire = yes } }
						add_deposit = d_aware_farming_building
					}
					2 = {
						modifier = { factor = 0
							OR = {
								merg_is_habitat = yes
								owner = { is_gestalt = yes }
								NOR = { has_modifier = self_aware_consumers has_modifier = self_aware_no_focus }
							}
						}
						modifier = { factor = 10 owner = { has_deficit = consumer_goods } }
						# modifier = { factor = 0 owner = { NOT = { has_technology = tech_luxuries_2 } } }
						add_deposit = d_aware_consumer_building
					}
					2 = {
						modifier = { factor = 0
							OR = {
								merg_is_habitat = yes
								NOR = { has_modifier = self_aware_alloys has_modifier = self_aware_no_focus }
							}
						}
						modifier = { factor = 10 owner = { has_deficit = alloys } }
						# modifier = { factor = 0 owner = { NOT = { has_technology = tech_alloys_2 } } }
						add_deposit = d_aware_foundry_building
					}
					2 = {
						modifier = { factor = 0
							OR = {
								AND = { merg_is_habitat = yes NOT = { has_planet_flag = research_habitat } }
								NOR = { has_modifier = self_aware_research has_modifier = self_aware_no_focus }
							}
						}
						# modifier = { factor = 0 owner = { NOT = { has_technology = tech_basic_science_lab_3 } } }
						add_deposit = d_aware_research_building
					}
					3 = {
						modifier = { factor = 0 NOR = { has_modifier = self_aware_trade has_modifier = self_aware_no_focus } }
						# modifier = { factor = 0 owner = { NOT = { has_technology = tech_interstellar_economics } } }
						add_deposit = d_aware_trade_building
					}
					2 = {
						modifier = { factor = 0
							OR = {
								merg_is_habitat = yes
								NOR = { has_modifier = self_aware_army has_modifier = self_aware_no_focus }
							}
						}
						# modifier = { factor = 0 owner = { NOT = { has_technology = tech_centralized_command } } }
						add_deposit = d_aware_army_building
					}
					2 = {
						modifier = { factor = 0
							OR = {
								merg_is_habitat = yes
								NOR = { has_modifier = self_aware_strategic has_modifier = self_aware_no_focus }
								owner = { NOR = { has_technology = tech_volatile_motes has_technology = tech_exotic_gases has_technology = tech_rare_crystals } }
							}
						}
						add_deposit = d_aware_refinery_building
					}
					6 = {
						modifier = { factor = 0 NOT = { has_modifier = self_aware_no_focus } }
						modifier = { add = -2
							is_variable_set = d_aware_culture_building
							check_variable = { which = d_aware_culture_building value > 0 }
							switch = { trigger = num_pops
								30	> { always = yes }
								60	> { check_variable = { which = d_aware_culture_building value > 1 } }
								90	> { check_variable = { which = d_aware_culture_building value > 2 } }
								120	> { check_variable = { which = d_aware_culture_building value > 3 } }
								150	> { check_variable = { which = d_aware_culture_building value > 4 } }
								default = { always = no }
							}
						}
						modifier = { add = -2
							OR = {
								owner = { is_hive_empire = yes }
								owner = { is_regular_empire = yes OR = { has_policy_flag = robots_outlawed NOT = { has_technology = tech_robotic_workers } } }
								AND = {
									is_variable_set = d_aware_assembly_building
									check_variable = { which = d_aware_assembly_building value > 0 }
									switch = { trigger = num_pops
										30	> { always = yes }
										60	> { check_variable = { which = d_aware_assembly_building value > 1 } }
										90	> { check_variable = { which = d_aware_assembly_building value > 2 } }
										120	> { check_variable = { which = d_aware_assembly_building value > 3 } }
										150	> { check_variable = { which = d_aware_assembly_building value > 4 } }
										default = { always = no }
									}
								}
							}
						}
						modifier = { add = -2
							OR = {
								owner = { is_synthetic_empire = yes }
								AND = {
									is_variable_set = d_aware_growth_building
									check_variable = { which = d_aware_growth_building value > 0 }
									switch = { trigger = num_pops
										30	> { always = yes }
										60	> { check_variable = { which = d_aware_growth_building value > 1 } }
										90	> { check_variable = { which = d_aware_growth_building value > 2 } }
										120	> { check_variable = { which = d_aware_growth_building value > 3 } }
										150	> { check_variable = { which = d_aware_growth_building value > 4 } }
										default = { always = no }
									}
								}
							}
						}
						random_list = {
							2 = {
								modifier = { factor = 0
									is_variable_set = d_aware_culture_building
									check_variable = { which = d_aware_culture_building value > 0 }
									switch = { trigger = num_pops
										30	> { always = yes }
										60	> { check_variable = { which = d_aware_culture_building value > 1 } }
										90	> { check_variable = { which = d_aware_culture_building value > 2 } }
										120	> { check_variable = { which = d_aware_culture_building value > 3 } }
										150	> { check_variable = { which = d_aware_culture_building value > 4 } }
										default = { always = no }
									}
									# OR = {
									# 	AND = { check_variable = { which = d_aware_culture_building value >= 1 } num_pops <= 30 }
									# 	AND = { check_variable = { which = d_aware_culture_building value >= 2 } num_pops <= 60 }
									# 	AND = { check_variable = { which = d_aware_culture_building value >= 3 } num_pops <= 90 }
									# 	AND = { check_variable = { which = d_aware_culture_building value >= 4 } num_pops <= 120 }
									# 	AND = { check_variable = { which = d_aware_culture_building value >= 5 } num_pops <= 150 }
									# }
								}
								# modifier = { factor = 0 check_variable = { which = d_aware_culture_building value >= 5 } num_pops >= 150 }
								change_variable = { which = d_aware_culture_building value = 1 }
								add_deposit = d_aware_culture_building
							}
							2 = {
								modifier = { factor = 0
									OR = {
										owner = { is_hive_empire = yes }
										owner = { is_regular_empire = yes OR = { has_policy_flag = robots_outlawed NOT = { has_technology = tech_robotic_workers } } }
										AND = {
											is_variable_set = d_aware_assembly_building
											check_variable = { which = d_aware_assembly_building value > 0 }
											switch = { trigger = num_pops
												30	> { always = yes }
												60	> { check_variable = { which = d_aware_assembly_building value > 1 } }
												90	> { check_variable = { which = d_aware_assembly_building value > 2 } }
												120	> { check_variable = { which = d_aware_assembly_building value > 3 } }
												150	> { check_variable = { which = d_aware_assembly_building value > 4 } }
												default = { always = no }
											}
											# OR = {
											# 	AND = { check_variable = { which = d_aware_assembly_building value >= 1 } num_pops <= 30 }
											# 	AND = { check_variable = { which = d_aware_assembly_building value >= 2 } num_pops <= 60 }
											# 	AND = { check_variable = { which = d_aware_assembly_building value >= 3 } num_pops <= 90 }
											# 	AND = { check_variable = { which = d_aware_assembly_building value >= 4 } num_pops <= 120 }
											# 	AND = { check_variable = { which = d_aware_assembly_building value >= 5 } num_pops <= 150 }
											# }
										}
									}
								}
								# modifier = { factor = 0 check_variable = { which = d_aware_assembly_building value >= 5 } num_pops >= 150 }
								change_variable = { which = d_aware_assembly_building value = 1 }
								add_deposit = d_aware_assembly_building
							}
							2 = {
								modifier = { factor = 0
									OR = {
										owner = { is_synthetic_empire = yes }
										AND = {
											is_variable_set = d_aware_growth_building
											check_variable = { which = d_aware_growth_building value > 0 }
											switch = { trigger = num_pops
												30	> { always = yes }
												60	> { check_variable = { which = d_aware_growth_building value > 1 } }
												90	> { check_variable = { which = d_aware_growth_building value > 2 } }
												120	> { check_variable = { which = d_aware_growth_building value > 3 } }
												150	> { check_variable = { which = d_aware_growth_building value > 4 } }
												default = { always = no }
											}
											# OR = {
											# 	AND = { check_variable = { which = d_aware_growth_building value >= 1 } num_pops <= 30 }
											# 	AND = { check_variable = { which = d_aware_growth_building value >= 2 } num_pops <= 60 }
											# 	AND = { check_variable = { which = d_aware_growth_building value >= 3 } num_pops <= 90 }
											# 	AND = { check_variable = { which = d_aware_growth_building value >= 4 } num_pops <= 120 }
											# 	AND = { check_variable = { which = d_aware_growth_building value >= 5 } num_pops <= 150 }
											# }
										}
									}
								}
								# modifier = { factor = 0 check_variable = { which = d_aware_growth_building value >= 5 } num_pops >= 150 }
								change_variable = { which = d_aware_growth_building value = 1 }
								add_deposit = d_aware_growth_building
							}
						}
					}
				}
			}
		}
		if = { limit = { has_planet_flag = self_aware_manual_order } remove_planet_flag = self_aware_manual_order }
	}
}

# From UniqueAscensionPerksEvents.461
planet_event = {
	id = UniqueAscensionPerksEvents.466
	title = "UniqueAscensionPerksEvents.466.Name"
	desc = "UniqueAscensionPerksEvents.466.Desc"
	show_sound = event_cityscape
	picture = GFX_evt_self_aware_colony
	location = root # event_target:self_aware_planet
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	trigger = { exists = owner owner = { has_country_resource = { type = minerals amount >= 200 } } }
	immediate = { set_planet_flag = self_aware_planet }
	after = {
		hidden_effect = {
			if = {
				limit = { owner = { has_country_resource = { type = minerals amount < 200 } } }
				remove_planet_flag = self_aware_planet
			}
			if = {
				limit = { NOT = { owner = { has_active_event = { UniqueAscensionPerksEvents.461 } } } }
				if = { limit = { has_planet_flag = self_aware_planet }
					planet_event = { id = UniqueAscensionPerksEvents.466 }
				}
				else = {
					planet_event = { id = UniqueAscensionPerksEvents.461 }
				}
			}
		}
	}
	option = { name = "UniqueAscensionPerksEvents.466.Housing"		allow = { } add_deposit = d_aware_housing_building owner = { add_resource = { minerals = -200 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Energy"		allow = { } add_deposit = d_aware_energy_building owner = { add_resource = { minerals = -200 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Minerals"		allow = { } add_deposit = d_aware_mining_building owner = { add_resource = { minerals = -200 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Food"			allow = { } add_deposit = d_aware_farming_building owner = { add_resource = { minerals = -200 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Amenities"	allow = { } add_deposit = d_aware_amenities_building owner = { add_resource = { minerals = -200 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Security"		allow = { } add_deposit = d_aware_crime_building owner = { add_resource = { minerals = -200 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Consumers"	allow = { has_modifier = self_aware_consumers } add_deposit = d_aware_consumer_building owner = { add_resource = { minerals = -200 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Alloys"		allow = { has_modifier = self_aware_alloys } add_deposit = d_aware_foundry_building owner = { add_resource = { minerals = -200 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Research"		allow = { has_modifier = self_aware_research } add_deposit = d_aware_research_building owner = { add_resource = { minerals = -200 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Trade"		allow = { has_modifier = self_aware_trade } add_deposit = d_aware_trade_building owner = { add_resource = { minerals = -200 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Soldiers"		allow = { } add_deposit = d_aware_army_building owner = { add_resource = { minerals = -200 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Culture"		allow = { NOT = { has_deposit = d_aware_culture_building } } add_deposit = d_aware_culture_building owner = { add_resource = { minerals = -200 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Assembly"		allow = { NOT = { has_deposit = d_aware_assembly_building } } add_deposit = d_aware_assembly_building owner = { add_resource = { minerals = -200 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Growth"		allow = { NOT = { has_deposit = d_aware_growth_building } } add_deposit = d_aware_growth_building owner = { add_resource = { minerals = -200 } } }
	option = { name = "UniqueAscensionPerksEvents.466.Strategic"	allow = { has_modifier = self_aware_strategic } add_deposit = d_aware_refinery_building owner = { add_resource = { minerals = -200 } } }
	option = { name = BACK hidden_effect = { remove_planet_flag = self_aware_planet } ai_chance = { factor = 0.1 } default_hide_option = yes }
	abort_effect = { remove_planet_flag = self_aware_planet }
}

######################################
#									 #
###### Flourishing Technocracy #######
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.470
	title = "ap_flourishing_technocracy"
	desc = "ap_flourishing_technocracy_desc"
	show_sound = event_laboratory_sound
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = flourishing_technocracy_room }
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	after = {
		hidden_effect = {
			if = {
				limit = { NOT = { has_active_event = { UniqueAscensionPerksEvents.471 } } }
				country_event = { id = UniqueAscensionPerksEvents.471 }
			}
		}
	}
	option = {
		name = EXCELLENT
		if		= { limit = { is_regular_empire = yes }	add_modifier = { modifier = flourishing_technocracy } }
		else_if = { limit = { is_hive_empire = yes }	add_modifier = { modifier = flourishing_technocracy_hivemind } }
		else_if = { limit = { is_machine_empire = yes }	add_modifier = { modifier = flourishing_technocracy_machine } }
	}
	abort_trigger = { has_active_event = { UniqueAscensionPerksEvents.471 UniqueAscensionPerksEvents.472 UniqueAscensionPerksEvents.473 UniqueAscensionPerksEvents.474 } }
}

# Edict
country_event = {
	id = UniqueAscensionPerksEvents.471
	title = "UniqueAscensionPerksEvents.471.Name"
	desc = "UniqueAscensionPerksEvents.471.Desc"
	show_sound = event_laboratory_sound
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = flourishing_technocracy_room }
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = {
		NOR = {
			has_active_event = { UniqueAscensionPerksEvents.471 UniqueAscensionPerksEvents.472 UniqueAscensionPerksEvents.473 UniqueAscensionPerksEvents.474 }
			has_modifier = flourishing_technocracy_field_manipulation
			has_modifier = flourishing_technocracy_particles
			has_modifier = flourishing_technocracy_computing
		}
	}
	immediate = { get_capital_planet = yes }
	after = {
		hidden_effect = {
			if = {
				limit = { NOT = { has_active_event = { UniqueAscensionPerksEvents.472 } } }
				country_event = { id = UniqueAscensionPerksEvents.472 }
			}
		}
	}
	option = { name = "UniqueAscensionPerksEvents.471.a" # Let's Begin
		hidden_effect = {
			set_variable = { which = flourishing_technocracy_phy value = 0 }
			set_variable = { which = flourishing_technocracy_soc value = 0 }
			set_variable = { which = flourishing_technocracy_eng value = 0 }
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.471.b" # Let's Continue
		trigger = {
			hidden_trigger = {
				is_variable_set = flourishing_technocracy_phy
				is_variable_set = flourishing_technocracy_soc
				is_variable_set = flourishing_technocracy_eng
			}
		}
		hidden_effect = {
			if		= { limit = { check_variable = { which = flourishing_technocracy_phy value = 1 } } add_modifier = { modifier = flourishing_technocracy_field_manipulation years = 5 } }
			else_if = { limit = { check_variable = { which = flourishing_technocracy_phy value = 2 } } add_modifier = { modifier = flourishing_technocracy_particles		years = 5 } }
			else_if = { limit = { check_variable = { which = flourishing_technocracy_phy value = 2 } } add_modifier = { modifier = flourishing_technocracy_computing		years = 5 } }
			if		= { limit = { check_variable = { which = flourishing_technocracy_soc value = 1 } } add_modifier = { modifier = flourishing_technocracy_new_worlds		years = 5 } }
			else_if = { limit = { check_variable = { which = flourishing_technocracy_soc value = 2 } } add_modifier = { modifier = flourishing_technocracy_statecraft		years = 5 } }
			else_if = { limit = { check_variable = { which = flourishing_technocracy_soc value = 3 } } add_modifier = { modifier = flourishing_technocracy_biology			years = 5 } }
			else_if = { limit = { check_variable = { which = flourishing_technocracy_soc value = 4 } } add_modifier = { modifier = flourishing_technocracy_military_theory	years = 5 } }
			else_if = { limit = { check_variable = { which = flourishing_technocracy_soc value = 5 } } add_modifier = { modifier = flourishing_technocracy_psionics			years = 5 } }
			else_if = { limit = { check_variable = { which = flourishing_technocracy_soc value = 6 } } add_modifier = { modifier = flourishing_technocracy_good_trading		years = 5 } }
			if		= { limit = { check_variable = { which = flourishing_technocracy_eng value = 1 } } add_modifier = { modifier = flourishing_technocracy_materials		years = 5 } }
			else_if = { limit = { check_variable = { which = flourishing_technocracy_eng value = 2 } } add_modifier = { modifier = flourishing_technocracy_industry			years = 5 } }
			else_if = { limit = { check_variable = { which = flourishing_technocracy_eng value = 3 } } add_modifier = { modifier = flourishing_technocracy_voidcraft		years = 5 } }
			else_if = { limit = { check_variable = { which = flourishing_technocracy_eng value = 4 } } add_modifier = { modifier = flourishing_technocracy_propulsion		years = 5 } }
			country_event = { id = UniqueAscensionPerksEvents.471 days = 2000 } # > 5.5 years auto repeat
		}
	}
	abort_trigger = { has_active_event = { UniqueAscensionPerksEvents.472 UniqueAscensionPerksEvents.473 UniqueAscensionPerksEvents.474 } }
}

# Physics Domain
country_event = {
	id = UniqueAscensionPerksEvents.472
	title = "UniqueAscensionPerksEvents.472.Name"
	desc = "UniqueAscensionPerksEvents.472.Desc"
	show_sound = event_laboratory_sound
	picture = GFX_evt_physics_research
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = {
		NOT = {
			has_active_event = { UniqueAscensionPerksEvents.472 UniqueAscensionPerksEvents.473 UniqueAscensionPerksEvents.474 }
			# has_modifier = flourishing_technocracy_field_manipulation
			# has_modifier = flourishing_technocracy_particles
			# has_modifier = flourishing_technocracy_computing
		}
	}
	immediate = { get_capital_planet = yes }
	option = {
		name = "field_manipulation"
		add_modifier = { modifier = flourishing_technocracy_field_manipulation years = 5 }
		# trigger = { NOT = { has_modifier = flourishing_technocracy_field_manipulation } }
		hidden_effect = { set_variable = { which = flourishing_technocracy_phy value = 1 } country_event = { id = UniqueAscensionPerksEvents.473 } } ai_chance = { factor = 0.1 } default_hide_option = yes
	}
	option = {
		name = "particles"
		add_modifier = { modifier = flourishing_technocracy_particles years = 5 }
		# trigger = { NOT = { has_modifier = flourishing_technocracy_particles } }
		hidden_effect = { set_variable = { which = flourishing_technocracy_phy value = 2 } country_event = { id = UniqueAscensionPerksEvents.473 } }
	}
	option = {
		name = "computing"
		add_modifier = { modifier = flourishing_technocracy_computing years = 5 }
		# trigger = { NOT = { has_modifier = flourishing_technocracy_computing } }
		hidden_effect = { set_variable = { which = flourishing_technocracy_phy value = 3 } country_event = { id = UniqueAscensionPerksEvents.473 } }
	}
	option = { name = AMOUNT_NONE ai_chance = { factor = 0.1 } }
	abort_trigger = { has_active_event = { UniqueAscensionPerksEvents.473 UniqueAscensionPerksEvents.474 } }
}

# Society Domain
country_event = {
	id = UniqueAscensionPerksEvents.473
	title = "UniqueAscensionPerksEvents.473.Name"
	desc = "UniqueAscensionPerksEvents.473.Desc"
	show_sound = event_laboratory_sound
	picture = GFX_evt_society_research
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = {
		NOT = {
			has_active_event = { UniqueAscensionPerksEvents.471 UniqueAscensionPerksEvents.473 UniqueAscensionPerksEvents.474 } }
			# has_modifier = flourishing_technocracy_new_worlds
			# has_modifier = flourishing_technocracy_statecraft
			# has_modifier = flourishing_technocracy_biology
			# has_modifier = flourishing_technocracy_military_theory
			# has_modifier = flourishing_technocracy_psionics
			# has_modifier = flourishing_technocracy_good_trading
		}
	immediate = { get_capital_planet = yes }
	after = {
		hidden_effect = {
			if = {
				limit = { NOT = { has_active_event = { UniqueAscensionPerksEvents.474 } } }
				country_event = { id = UniqueAscensionPerksEvents.474 }
			}
		}
	}
	option = { name = "new_worlds"		set_variable = { which = flourishing_technocracy_soc value = 1 } add_modifier = { modifier = flourishing_technocracy_new_worlds		years = 5 } ai_chance = { factor = 0.1 } default_hide_option = yes }
	option = { name = "statecraft"		set_variable = { which = flourishing_technocracy_soc value = 2 } add_modifier = { modifier = flourishing_technocracy_statecraft		years = 5 } }
	option = { name = "biology"			set_variable = { which = flourishing_technocracy_soc value = 3 } add_modifier = { modifier = flourishing_technocracy_biology			years = 5 } }
	option = { name = "military_theory"	set_variable = { which = flourishing_technocracy_soc value = 4 } add_modifier = { modifier = flourishing_technocracy_military_theory	years = 5 } }
	option = { name = "psionics"		set_variable = { which = flourishing_technocracy_soc value = 5 } add_modifier = { modifier = flourishing_technocracy_psionics		years = 5 } allow = { has_technology = tech_psionic_theory } }
	option = { name = "good_trading"	set_variable = { which = flourishing_technocracy_soc value = 6 } add_modifier = { modifier = flourishing_technocracy_good_trading	years = 5 } trigger = { has_global_flag = cultural_overhaul_active } }
	abort_trigger = { has_active_event = { UniqueAscensionPerksEvents.474 UniqueAscensionPerksEvents.471 } }
}
# Engineering Domain
country_event = {
	id = UniqueAscensionPerksEvents.474
	title = "UniqueAscensionPerksEvents.474.Name"
	desc = "UniqueAscensionPerksEvents.474.Desc"
	show_sound = event_laboratory_sound
	picture = GFX_evt_engineering_research
	location = event_target:capital_planet
	is_triggered_only = yes
	trigger = { NOT = { has_active_event = { UniqueAscensionPerksEvents.471 UniqueAscensionPerksEvents.472 UniqueAscensionPerksEvents.474 } } }
	immediate = { get_capital_planet = yes }
	after = { hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.471 days = 2000 } } } # > 5.5 years auto repeat
	option = { name = "materials"	set_variable = { which = flourishing_technocracy_eng value = 1 } add_modifier = { modifier = flourishing_technocracy_materials	years = 5 } ai_chance = { factor = 0.1 } default_hide_option = yes }
	option = { name = "industry"	set_variable = { which = flourishing_technocracy_eng value = 2 } add_modifier = { modifier = flourishing_technocracy_industry	years = 5 } }
	option = { name = "voidcraft"	set_variable = { which = flourishing_technocracy_eng value = 3 } add_modifier = { modifier = flourishing_technocracy_voidcraft	years = 5 } }
	option = { name = "propulsion"	set_variable = { which = flourishing_technocracy_eng value = 4 } add_modifier = { modifier = flourishing_technocracy_propulsion	years = 5 } }
	abort_trigger = { has_active_event = { UniqueAscensionPerksEvents.472 UniqueAscensionPerksEvents.471 } }
}

######################################
#									 #
########## Legendary Forge ###########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.480
	title = "ap_legendary_forge"
	desc = "ap_legendary_forge_desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = legendary_forge_room }
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT add_research_option = tech_living_metal_armor }
}

country_event = {
	id = UniqueAscensionPerksEvents.481
	title = "UniqueAscensionPerksEvents.481.Name"
	desc = "UniqueAscensionPerksEvents.481.Desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_legendary_forge
	location = event_target:legendary_forge_planet
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

######################################
#									 #
######### Library of Wisdom ##########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.490
	title = "ap_library_wisedom"
	desc = "ap_library_wisedom_desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = library_wisedom_room }
	custom_gui = "enclave_trader_window"
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = {
		name = EXCELLENT
		custom_tooltip = "ap_library_wisedom_tooltip"
		add_monthly_resource_mult = { resource = society_research value = 1 min = 10000 max = 20000 }
		add_resource = { unity = 5000 }
	}
}

# v3.3: - cooldown for library itself increase to 730 days (instead of 440), decreased bonuses from relic to half (also removed society research point when "use").
# Edict (and self)
country_event = {
	id = UniqueAscensionPerksEvents.491
	title = "edict_library_wisedom_menu"
	desc = "UniqueAscensionPerksEvents.491.Desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = root room = library_wisedom_room }
	custom_gui = "enclave_trader_window"
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = {
		name = "UniqueAscensionPerksEvents.491.a"
		allow = {
			NOT = { has_country_flag = ap_library_wisedom_cooldown }
			has_country_resource = { type = unity amount > 200 }
		}
		add_resource = { unity = -200 }
		hidden_effect = {
			country_event = { id = UniqueAscensionPerksEvents.493 }
			set_timed_country_flag = { flag = ap_library_wisedom_cooldown years = 2 }
			country_event = { id = UniqueAscensionPerksEvents.492 days = 730 }
		}
		custom_tooltip = "UniqueAscensionPerksEvents.491.a.tooltip"
	}
	option = { name = GOODBYE ai_chance = { factor = 0.1 } default_hide_option = yes }
}
# From .491
country_event = {
	id = UniqueAscensionPerksEvents.492
	title = "UniqueAscensionPerksEvents.492.Name"
	desc = "UniqueAscensionPerksEvents.492.Desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_library_wisedom
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = OK ai_chance = { factor = 0.1 } default_hide_option = yes }
	option = { name = "UniqueAscensionPerks.lets_again" country_event = { id = UniqueAscensionPerksEvents.491 } }
}
# From .491
country_event = {
	id = UniqueAscensionPerksEvents.493
	title = "edict_library_wisedom_menu"
	desc = "UniqueAscensionPerksEvents.493.Desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { room = library_wisedom_room }
	custom_gui = "enclave_trader_window"
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = "UniqueAscensionPerksEvents.493.Political"	hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.494 } } }
	option = { name = "UniqueAscensionPerksEvents.493.Economy"		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.495 } } }
	option = { name = "UniqueAscensionPerksEvents.493.Military"		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.496 } } }
	option = { name = "UniqueAscensionPerksEvents.493.Research"		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.497 } } }
	option = {
		name = "UniqueAscensionPerksEvents.493.Knowledge"
		allow = { has_country_resource = { type = influence amount > 500 } NOT = { has_country_flag = has_wisedom_relic } }
		add_relic = r_orb_of_knowledge
		add_resource = { influence = -500 }
		hidden_effect = { set_country_flag = has_wisedom_relic country_event = { id = UniqueAscensionPerksEvents.520 } }
	}
	option = { name = GOODBYE ai_chance = { factor = 0.1 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.494
	title = "edict_library_wisedom_menu"
	desc = "UniqueAscensionPerksEvents.494.Desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = root room = library_wisedom_room }
	custom_gui = "enclave_trader_window"
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = "UniqueAscensionPerksEvents.494.Ethics"		allow = { NOT = { has_country_flag = ap_library_wisedom_propaganda_campaign } } trigger = { is_gestalt = no } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_propaganda_campaign } custom_tooltip = "edict_lw_propaganda_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Factions"		allow = { NOT = { has_country_flag = ap_library_wisedom_faction_campaign } } trigger = { is_gestalt = no } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_faction_campaign } custom_tooltip = "edict_lw_faction_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Diplomate"	allow = { NOT = { has_country_flag = ap_library_wisedom_diplomacy_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_diplomacy_campaign } custom_tooltip = "edict_lw_diplomacy_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Trust"		allow = { NOT = { has_country_flag = ap_library_wisedom_trust_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_trust_campaign } custom_tooltip = "edict_lw_trust_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Submit"		allow = { NOT = { has_country_flag = ap_library_wisedom_vassalization_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_vassalization_campaign } custom_tooltip = "edict_lw_vassalization_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Frictions"	allow = { NOT = { has_country_flag = ap_library_wisedom_territorial_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_territorial_campaign } custom_tooltip = "edict_lw_territorial_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Trade"		allow = { NOT = { has_country_flag = ap_library_wisedom_commercial_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_commercial_campaign } custom_tooltip = "edict_lw_commercial_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Leader"		allow = { NOT = { has_country_flag = ap_library_wisedom_teaching_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_teaching_campaign } custom_tooltip = "edict_lw_teaching_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Edict"		allow = { NOT = { has_country_flag = ap_library_wisedom_edict_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_edict_campaign } custom_tooltip = "edict_lw_edict_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.494.Unity"		allow = { NOT = { has_country_flag = ap_library_wisedom_unity_cooldown } } add_monthly_resource_mult = { resource = unity value = 8 min = 2000 max = 8000 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_timed_country_flag = { flag = ap_library_wisedom_unity_cooldown years = 5 } } custom_tooltip = "UniqueAscensionPerks.no_request_length" }
	option = { name = "UniqueAscensionPerksEvents.494.Civic"		allow = { NOT = { has_modifier = library_wisedom_civic } has_country_resource = { type = unity amount > 10000 } } add_resource = { unity = -10000 }	add_modifier = { modifier = library_wisedom_civic } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } } }
	option = { name = "UniqueAscensionPerksEvents.494.Ascension"	allow = { NOT = { has_modifier = library_wisedom_ascension } has_country_resource = { type = unity amount > 25000 } } add_resource = { unity = -25000 }	add_modifier = { modifier = library_wisedom_ascension } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } } }
	option = { name = BACK ai_chance = { factor = 0.1 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.493 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.495
	title = "edict_library_wisedom_menu"
	desc = "UniqueAscensionPerksEvents.495.Desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = root room = library_wisedom_room }
	custom_gui = "enclave_trader_window"
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = "UniqueAscensionPerksEvents.495.Output"	allow = { NOT = { has_country_flag = ap_library_wisedom_prosperity_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_prosperity_campaign } custom_tooltip = "edict_lw_prosperity_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.495.Maintain"	allow = { NOT = { has_country_flag = ap_library_wisedom_upkeep_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_upkeep_campaign } custom_tooltip = "edict_lw_upkeep_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.495.Orbit"	allow = { NOT = { has_country_flag = ap_library_wisedom_collection_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_collection_campaign } custom_tooltip = "edict_lw_collection_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.495.Trade"	allow = { NOT = { has_country_flag = ap_library_wisedom_trade_campaign } } trigger = { is_gestalt = no } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_trade_campaign } custom_tooltip = "edict_lw_trade_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.495.Scheme"	allow = { NOT = { has_country_flag = ap_library_wisedom_construction_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_construction_campaign } custom_tooltip = "edict_lw_construction_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.495.Resource"	allow = { NOT = { has_country_flag = ap_library_wisedom_survival_campaign } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_survival_campaign } custom_tooltip = "edict_lw_survival_campaign_unlock" }
	option = { name = BACK ai_chance = { factor = 0.1 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.493 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.496
	title = "edict_library_wisedom_menu"
	desc = "UniqueAscensionPerksEvents.496.Desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = root room = library_wisedom_room }
	custom_gui = "enclave_trader_window"
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = "UniqueAscensionPerksEvents.496.War"			allow = { NOT = { has_country_flag = ap_library_wisedom_war_preparation } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_war_preparation } custom_tooltip = "edict_lw_war_preparation_unlock" }
	option = { name = "UniqueAscensionPerksEvents.496.Evade"		allow = { NOT = { has_country_flag = ap_library_wisedom_evade_danger } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_evade_danger } custom_tooltip = "edict_lw_evade_danger_unlock" }
	option = { name = "UniqueAscensionPerksEvents.496.Ground"		allow = { NOT = { has_country_flag = ap_library_wisedom_ground_field_experience } has_country_resource = { type = unity amount > 1000 } } add_resource = { unity = -1000 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_ground_field_experience } custom_tooltip = "edict_lw_ground_field_experience_unlock" }
	option = { name = "UniqueAscensionPerksEvents.496.Route"		allow = { NOT = { has_country_flag = ap_library_wisedom_fast_routes } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_fast_routes } custom_tooltip = "edict_lw_fast_routes_unlock" }
	option = { name = "UniqueAscensionPerksEvents.496.Experience"	allow = { NOT = { has_country_flag = ap_library_wisedom_experience_sharing } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_experience_sharing } custom_tooltip = "edict_lw_experience_sharing_unlock" }
	option = { name = "UniqueAscensionPerksEvents.496.Pierce"		allow = { NOT = { has_country_flag = ap_library_wisedom_defense_weakness } has_country_resource = { type = unity amount > 1000 } } add_resource = { unity = -1000 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_defense_weakness } custom_tooltip = "edict_lw_defense_weakness_unlock" }
	option = { name = "UniqueAscensionPerksEvents.496.Damage"		allow = { NOT = { has_country_flag = ap_library_wisedom_damage_output } has_country_resource = { type = unity amount > 1000 } } add_resource = { unity = -1000 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_damage_output } custom_tooltip = "edict_lw_damage_output_unlock" }
	option = { name = "UniqueAscensionPerksEvents.496.Alloys"		allow = { NOT = { has_country_flag = ap_library_wisedom_alloys_cooldown } has_country_resource = { type = unity amount > 1000 } } add_resource = { unity = -1000 alloys = 2000 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_timed_country_flag = { flag = ap_library_wisedom_alloys_cooldown years = 5 } } custom_tooltip = "UniqueAscensionPerks.no_request_length" }
	option = { name = BACK ai_chance = { factor = 0.1 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.493 } } }
}

# v3.3 removed ignore_rare = no
country_event = {
	id = UniqueAscensionPerksEvents.497
	title = "edict_library_wisedom_menu"
	desc = "UniqueAscensionPerksEvents.497.Desc"
	show_sound = event_mystic_reveal
	diplomatic = yes
	force_open = yes
	picture_event_data = { portrait = root room = library_wisedom_room }
	custom_gui = "enclave_trader_window"
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = "UniqueAscensionPerksEvents.497.Research"		allow = { NOT = { has_country_flag = ap_library_wisedom_extended_opportunities } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_extended_opportunities } custom_tooltip = "edict_lw_extended_opportunities_unlock" }
	option = { name = "UniqueAscensionPerksEvents.497.Physics"		allow = { NOT = { has_country_flag = ap_library_wisedom_physics_documentation } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_physics_documentation } custom_tooltip = "edict_lw_physics_documentation_unlock" }
	option = { name = "UniqueAscensionPerksEvents.497.Society"		allow = { NOT = { has_country_flag = ap_library_wisedom_society_documentation } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_society_documentation } custom_tooltip = "edict_lw_society_documentation_unlock" }
	option = { name = "UniqueAscensionPerksEvents.497.Engineering"	allow = { NOT = { has_country_flag = ap_library_wisedom_engineering_documentation } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_engineering_documentation } custom_tooltip = "edict_lw_engineering_documentation_unlock" }
	option = { name = "UniqueAscensionPerksEvents.497.Archeology"	allow = { NOT = { has_country_flag = ap_library_wisedom_archeological_knowledge } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_archeological_knowledge } custom_tooltip = "edict_lw_archeological_knowledge_unlock" }
	option = { name = "UniqueAscensionPerksEvents.497.Data"			allow = { NOT = { has_country_flag = ap_library_wisedom_adv_data_collection } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_adv_data_collection } custom_tooltip = "edict_lw_adv_data_collectione_unlock" }
	option = { name = "UniqueAscensionPerksEvents.497.ResearchData" custom_tooltip = "UniqueAscensionPerks.no_request_length"
		allow = { NOT = { has_country_flag = ap_library_wisedom_research_cooldown }
		has_country_resource = { type = unity amount > 500 } }
		add_resource = { unity = -500 }
		add_monthly_resource_mult = { resource = physics_research value = 8 min = 1500 max = 8000 }
		add_monthly_resource_mult = { resource = society_research value = 8 min = 2000 max = 8000 }
		add_monthly_resource_mult = { resource = engineering_research value = 8 min = 2000 max = 8000 }
		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_timed_country_flag = { flag = ap_library_wisedom_research_cooldown years = 5 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.497.PhysicsTech" custom_tooltip = "UniqueAscensionPerks.no_request_length"
		allow = { NOT = { has_country_flag = ap_library_wisedom_wisedom_get_physics_tech_cooldown } has_country_resource = { type = unity amount > 500 } }
		add_resource = { unity = -500 }
		# wisedom_get_physics_tech = yes
		add_random_research_option = { area = physics add_progress = 0.2 ignore_rare = yes fail_effects = { add_monthly_resource_mult = { resource = physics_research value = 16 min = 3500 max = 14000 } } }
		hidden_effect = { set_timed_country_flag = { flag = ap_library_wisedom_wisedom_get_physics_tech_cooldown years = 5 } country_event = { id = UniqueAscensionPerksEvents.520 } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.497.SocietyTech" custom_tooltip = "UniqueAscensionPerks.no_request_length"
		allow = { NOT = { has_country_flag = ap_library_wisedom_wisedom_get_society_tech_cooldown } has_country_resource = { type = unity amount > 500 } }
		add_resource = { unity = -500 }
		# wisedom_get_society_tech = yes
		add_random_research_option = { area = society add_progress = 0.2 ignore_rare = yes fail_effects = { add_monthly_resource_mult = { resource = society_research value = 16 min = 4000 max = 14000 } } }
		hidden_effect = { set_timed_country_flag = { flag = ap_library_wisedom_wisedom_get_society_tech_cooldown years = 5 } country_event = { id = UniqueAscensionPerksEvents.520 } } }
	option = {
		name = "UniqueAscensionPerksEvents.497.EngineeringTech" custom_tooltip = "UniqueAscensionPerks.no_request_length"
		allow = { NOT = { has_country_flag = ap_library_wisedom_wisedom_get_engineering_tech_cooldown } has_country_resource = { type = unity amount > 500 } }
		add_resource = { unity = -500 }
		# wisedom_get_engineering_tech = yes
		add_random_research_option = { area = engineering add_progress = 0.2 ignore_rare = yes fail_effects = { add_monthly_resource_mult = { resource = engineering_research value = 16 min = 4000 max = 14000 } } }
		hidden_effect = { set_timed_country_flag = { flag = ap_library_wisedom_wisedom_get_engineering_tech_cooldown years = 5 } country_event = { id = UniqueAscensionPerksEvents.520 } }
	}
	option = { name = "UniqueAscensionPerksEvents.497.Growth"			allow = { NOT = { has_country_flag = ap_library_wisedom_growth_campaign } }			hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_growth_campaign } custom_tooltip = "edict_lw_growth_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.497.Assembly"			allow = { NOT = { has_country_flag = ap_library_wisedom_assembly_campaign } }		hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_assembly_campaign } custom_tooltip = "edict_lw_assembly_campaign_unlock" }
	option = { name = "UniqueAscensionPerksEvents.497.Intelligence"		allow = { NOT = { has_country_flag = ap_library_wisedom_adv_intelligence_agency } } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.520 } set_country_flag = ap_library_wisedom_adv_intelligence_agency } custom_tooltip = "edict_lw_adv_intelligence_agency_unlock" }

	option = { name = BACK ai_chance = { factor = 0.1 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.493 } } }
}

country_event = {
	id = UniqueAscensionPerksEvents.520
	title = "UniqueAscensionPerksEvents.520.Name"
	desc = "UniqueAscensionPerksEvents.520.Desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_library_wisedom
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = OK }
}

######################################
#									 #
###### Expansionist Development ######
#									 #
######################################
# TODO FIXME: Deletes any anomaly probability that the system might have.

country_event = {
	id = UniqueAscensionPerksEvents.530
	title = "ap_expansionist_development"
	desc = "ap_expansionist_development_desc"
	show_sound = event_scanner
	picture = GFX_evt_space_station
	location = event_target:capital_planet
	is_triggered_only = yes
	immediate = { get_capital_planet = yes }
	option = { name = EXCELLENT add_resource = { influence = 200 } }
}

# on_system_survey_ship
# from = survey_system
# v3.3: doubled costs due imbalance
# v3.4: exclude anomalies
# v3.6: add timer
# v3.14: add automation
ship_event = {
	id = UniqueAscensionPerksEvents.531
	title = "UniqueAscensionPerksEvents.531.Name"
	desc = "UniqueAscensionPerksEvents.531.Desc"
	picture = GFX_evt_space_station
	show_sound = event_scanner
	location = from
	is_triggered_only = yes
	# trigger = {
	# 	exists = owner
	# 	owner = {
	# 		has_ascension_perk = ap_expansionist_development
	# 		NOT = { has_country_flag = no_expansionist_development } # edict
	# 	}
	# 	exists = from
	# 	from = { NOR = { exists = starbase exists = space_owner } }
	# 	# exists = fromfrom
	# 	# fromfrom = { NOR = { exists = starbase exists = space_owner } }
	# }
	immediate = {
		owner = {
			save_event_target_as = science_ship_owner
			if = {
				limit = { is_variable_set = expansionist_development_res NOR = { has_country_flag = no_expansionist_development has_active_event = { UniqueAscensionPerksEvents.534 } } }
				clear_variable = expansionist_development_res
			}
		}
	}
	# abort_trigger = {
	# 	owner = { is_variable_set = expansionist_development_res }
	# }
	# abort_effect = { log = "ABORT" }
	after = {
		# log = "AFTER"
		if = {
			limit = { owner = { is_variable_set = expansionist_development_res NOT = { has_country_flag = no_expansionist_development } } }
			deploy_outpost = yes
			if = {
				limit = { owner = { NOR = { has_country_flag = noauto_expansionist_development has_active_event = { UniqueAscensionPerksEvents.534 } } } }
				ship_event = { id = UniqueAscensionPerksEvents.534 }
			}
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Influence"
		allow = { NOR = { fleet = { has_fleet_flag = no_expansionist_development_yet } owner = { has_country_flag = no_expansionist_development_yet } } owner = { has_country_resource = { type = influence amount > 100 } } }
		# owner = { add_resource = { influence = -100 } }
		hidden_effect = { owner = { set_variable = { which = expansionist_development_res value = 1 } } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Energy"
		allow = { NOR = { fleet = { has_fleet_flag = no_expansionist_development_yet } owner = { has_country_flag = no_expansionist_development_yet } } owner = { has_country_resource = { type = energy amount > 3000 } } }
		# owner = { add_resource = { energy = -3000 } }
		hidden_effect = { owner = { set_variable = { which = expansionist_development_res value = 2 } } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Minerals"
		allow = { NOR = { fleet = { has_fleet_flag = no_expansionist_development_yet } owner = { has_country_flag = no_expansionist_development_yet } } owner = { has_country_resource = { type = minerals amount > 2500 } } }
		# owner = { add_resource = { minerals = -2500 } }
		hidden_effect = { owner = { set_variable = { which = expansionist_development_res value = 3 } } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Alloys"
		allow = { owner = { has_country_resource = { type = alloys amount > 900 } } }
		trigger = { owner = { is_machine_empire = no } }
		# owner = { add_resource = { alloys = -900 } }
		hidden_effect = { owner = { set_variable = { which = expansionist_development_res value = 4 } } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Alloys"
		allow = { owner = { has_country_resource = { type = alloys amount > 1100 } } }
		trigger = { owner = { is_machine_empire = yes } }
		# owner = { add_resource = { alloys = -1100 } }
		hidden_effect = { owner = { set_variable = { which = expansionist_development_res value = 5 } } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Unity"
		allow = { NOR = { fleet = { has_fleet_flag = no_expansionist_development_yet } owner = { has_country_flag = no_expansionist_development_yet } } owner = { has_country_resource = { type = unity amount > 1750 } } }
		# owner = { add_resource = { unity = -1750 } }
		hidden_effect = { owner = { set_variable = { which = expansionist_development_res value = 6 } } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Food"
		allow = { NOR = { fleet = { has_fleet_flag = no_expansionist_development_yet } owner = { has_country_flag = no_expansionist_development_yet } } owner = { has_country_resource = { type = food amount > 3200 } } }
		# owner = { add_resource = { food = -3200 } }
		hidden_effect = { owner = { set_variable = { which = expansionist_development_res value = 7 } } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Treasures"
		allow = { owner = { has_country_resource = { type = treasures amount > 320 } } }
		# owner = { add_resource = { treasures = -320 } }
		hidden_effect = { owner = { set_variable = { which = expansionist_development_res value = 8 } } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.NanoDrones"
		allow = { owner = { has_country_resource = { type = automatic_drone amount > 1200 } } }
		# owner = { add_resource = { automatic_drone = -1200 } }
		hidden_effect = { owner = { set_variable = { which = expansionist_development_res value = 9 } } }
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Disable"
		ai_chance = { factor = 0 }
		hidden_effect = {
			owner = {
				set_country_flag = no_expansionist_development
				clear_variable = expansionist_development_res
			}
		}
	}
	option = {
		name = "UniqueAscensionPerksEvents.531.Enable"
		trigger = { owner = { has_country_flag = noauto_expansionist_development } }
		ai_chance = { factor = 0 }
		hidden_effect = {
			owner = {
				remove_country_flag = noauto_expansionist_development
			}
		}
		ship_event = { id = UniqueAscensionPerksEvents.531 scopes = { from = from } }
	}
	option = { name = "UniqueAscensionPerksEvents.531.Nope" ai_chance = { factor = 0.1 } default_hide_option = yes }
}

# on_system_survey_ship
ship_event = {
	id = UniqueAscensionPerksEvents.532
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = owner
		owner = {
			has_ascension_perk = ap_expansionist_development
			NOT = { has_country_flag = no_expansionist_development } # edict
		}
		exists = from
		from = { NOR = { exists = starbase exists = space_owner } }
	}
	immediate = {
		if = { # Automation
			limit = {
				owner = {
					is_variable_set = expansionist_development_res
					NOR = {
						has_country_flag = noauto_expansionist_development
						has_active_event = { UniqueAscensionPerksEvents.534 UniqueAscensionPerksEvents.531 }
					}
				}
			}
			deploy_outpost = yes
		}
		else = { ship_event = { id = UniqueAscensionPerksEvents.531 scopes = { from = from } } }
	}
}

ship_event = {
	id = UniqueAscensionPerksEvents.534
	title = "FLEETORDER_BUILD_CURRENT_shipclass_starbase_BUTTON"
	desc = "UniqueAscensionPerksEvents.534.Desc"
	show_sound = event_scanner
	picture = GFX_evt_space_station
	is_triggered_only = yes
	trigger = {
		owner = {
			is_variable_set = expansionist_development_res
			NOR = {
				has_country_flag = noauto_expansionist_development
				has_active_event = { UniqueAscensionPerksEvents.534 }
			}
		}
	}
	immediate = {
	}
	option = {
		name = "UniqueAscensionPerksEvents.534.a"
		custom_tooltip = "UniqueAscensionPerksEvents.534.a.tooltip"
		hidden_effect = { clear_variable = expansionist_development_res }
		ai_chance = { factor = 2 } default_hide_option = yes
	}
	option = {
		name = "UniqueAscensionPerksEvents.534.b"
		custom_tooltip = "UniqueAscensionPerksEvents.534.b.tooltip"
	}
}

######################################
#									 #
########### Dark Galaxy Web ##########
#									 #
######################################

# country_event = {
# 	id = UniqueAscensionPerksEvents.540
# 	title = "ap_dark_galaxy_web"
# 	desc = "ap_dark_galaxy_web_desc"
# 	show_sound = event_scanner
# 	picture = GFX_evt_glitchy_matrix
# 	location = event_target:capital_planet
# 	is_triggered_only = yes
# 	immediate = { get_capital_planet = yes }
# 	option = { name = OK enable_special_project = { name = DARK_GALAXY_WEB_PROJECT location = event_target:capital_planet owner = root } }
# }

# country_event = {
# 	id = UniqueAscensionPerksEvents.541
# 	title = "UniqueAscensionPerksEvents.541.Name"
# 	desc = "UniqueAscensionPerksEvents.541.Desc"
# 	show_sound = event_scanner
# 	picture = GFX_evt_glitchy_matrix
#	location = event_target:capital_planet
#	is_triggered_only = yes
#	immediate = { get_capital_planet = yes set_country_flag = ap_dark_galaxy_web_project }
# 	option = { name = EXCELLENT add_resource = { energy = 5000 } hidden_effect = { country_event = { id = UniqueAscensionPerksEvents.542 } } }
# }

# country_event = {
# 	id = UniqueAscensionPerksEvents.542
# 	title = "edict_dark_galaxy_web_menu"
# 	desc = "UniqueAscensionPerksEvents.542.Desc"
# 	show_sound = event_scanner
# 	diplomatic = yes
# 	force_open = yes
# 	picture_event_data = { portrait = root room = dark_galaxy_web_room }
#	location = event_target:capital_planet
#	is_triggered_only = yes
#	immediate = { get_capital_planet = yes }
# 	option = { name = LEAVE }
# }

# on_yearly_pulse and on_yearly_pulse_country action collector
event = {
	id = UniqueAscensionPerksEvents.8080
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		# ON_YEARLY_PULSE
		# UniqueAscensionPerksEvents.51		# ap_recycling_drones
		random_playable_country = {
			limit = {
				has_ascension_perk = ap_recycling_drones
				has_country_flag = ap_recycling_drones_project
				OR = {
					check_variable = { which = ship_corvette_recovered value > 0 }
					check_variable = { which = ship_frigate_recovered value > 0 }
					check_variable = { which = ship_destroyer_recovered value > 0 }
					check_variable = { which = ship_cruiser_recovered value > 0 }
					check_variable = { which = ship_battleship_recovered value > 0 }
					check_variable = { which = ship_titan_recovered value > 0 }
				}
			}
			country_event = { id = UniqueAscensionPerksEvents.52 days = 5 }
		}
		# UniqueAscensionPerksEvents.123		# aggressive_hivemind_project
		if = {
			limit = { any_playable_country = { has_ascension_perk = ap_aggressive_hivemind has_country_flag = aggressive_hivemind_project } }
			random_playable_country = {
				limit = {
					has_ascension_perk = ap_aggressive_hivemind
					has_country_flag = aggressive_hivemind_project
					OR = {
						check_variable = { which = ship_corvette_infested value > 1 }
						check_variable = { which = ship_destroyer_infested value > 1 }
						check_variable = { which = ship_cruiser_infested value > 1 }
						check_variable = { which = ship_battleship_infested value > 1 }
						check_variable = { which = ship_titan_infested value > 1 }
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.124 }
			}
		}

		# UniqueAscensionPerksEvents.126		# ap_connected_hivemind
		if = {
			limit = {
				any_playable_country = {
					is_hive_empire = yes
					has_ascension_perk = ap_connected_hivemind
					any_owned_pop = { NOR = { is_robot_pop = yes is_same_species = owner_species } }
				}
			}
			random_playable_country = {
				limit = {
					is_hive_empire = yes
					has_ascension_perk = ap_connected_hivemind
					any_owned_pop = { NOR = { is_robot_pop = yes is_same_species = owner_species } }
				}
				every_owned_planet = {
					limit = { any_owned_pop = { NOR = { is_robot_pop = yes is_same_species = owner_species } } }
					every_owned_pop = {
						limit = { NOR = { is_robot_pop = yes is_same_species = owner_species } }
						prev = { create_pop = { species = owner_species } }
						kill_pop = yes
					}
					# while = {
					# 	limit = { any_owned_pop = { NOR = { is_robot_pop = yes is_same_species = owner_species } } }
					# 	create_pop = { species = prevprev }
					# 	random_owned_pop = { limit = { NOR = { is_robot_pop = yes is_same_species = owner_species } } kill_pop = yes }
					# }
				}
			}
		}

		# UniqueAscensionPerksEvents.128		# ap_eternal_vigilance
		random_playable_country = {
			limit = { has_ascension_perk = ap_eternal_vigilance NOT = { has_country_flag = ap_eternal_vigilance_project_available } }
			country_event = { id = UniqueAscensionPerksEvents.129 }
		}

		# UniqueAscensionPerksEvents.150		# ap_void_expedition_project
		random_playable_country = {
			limit = { has_ascension_perk = ap_void_expedition has_country_flag = ap_void_expedition_project }
			country_event = { id = UniqueAscensionPerksEvents.151 days = 10 random = 10 }
		}
		# UniqueAscensionPerksEvents.213		# ap_machine_core
		random_playable_country = {
			limit = {
				has_ascension_perk = ap_machine_core
				has_country_flag = ap_machine_core_project
				NOT = { has_country_flag = expedition_discovery_cooldown }
			}
			set_timed_country_flag = { flag = expedition_discovery_cooldown years = 3 }
			# machine_constant_event = yes
			random_list = {
				10 = { modifier = { factor = 0 has_country_flag = main_core_energy }	set_timed_country_flag = { flag = main_core_energy years = 5 }		country_event = { id = UniqueAscensionPerksEvents.214 days = 90 random = 60 } }
				10 = { modifier = { factor = 0 has_country_flag = main_core_minerals }	set_timed_country_flag = { flag = main_core_minerals years = 5 }	country_event = { id = UniqueAscensionPerksEvents.215 days = 90 random = 60 } }
				10 = { modifier = { factor = 0 has_country_flag = main_core_influence }	set_timed_country_flag = { flag = main_core_influence years = 5 }	country_event = { id = UniqueAscensionPerksEvents.216 days = 90 random = 60 } }
				10 = { modifier = { factor = 0 has_modifier = main_core_alloys }		country_event = { id = UniqueAscensionPerksEvents.217 days = 90 random = 60 } }
				10 = { modifier = { factor = 0 has_modifier = main_core_physics }		country_event = { id = UniqueAscensionPerksEvents.218 days = 90 random = 60 } }
				10 = { modifier = { factor = 0 has_modifier = main_core_society }		country_event = { id = UniqueAscensionPerksEvents.219 days = 90 random = 60 } }
				10 = { modifier = { factor = 0 has_modifier = main_core_engineering }	country_event = { id = UniqueAscensionPerksEvents.220 days = 90 random = 60 } }
				20 = { modifier = { factor = 0 has_ascension_perk = ap_ai_cortana }		country_event = { id = UniqueAscensionPerksEvents.221 days = 90 random = 60 } }
				1 = {}
			}
		}
		# UniqueAscensionPerksEvents.269		# ap_civilian_activities
		if = {
			limit = {
				any_playable_country = {
					has_ascension_perk = ap_civilian_activities
					any_owned_planet = { is_colonizable = no }
				}
			}
			random_playable_country = {
				limit = {
					has_ascension_perk = ap_civilian_activities
					any_owned_planet = { is_colonizable = no }
				}
				country_event = { id = UniqueAscensionPerksEvents.269 days = 16 random = 16 }
			}
		}
		# UniqueAscensionPerksEvents.420		# ap_executive_vigor
		random_playable_country = {
			limit = { has_ascension_perk = ap_executive_vigor NOT = { has_country_flag = ap_executive_vigor_project_available } }
			country_event = { id = UniqueAscensionPerksEvents.421 }
		}
		# UniqueAscensionPerksEvents.8068		# ap_megacorp
		if = {
			limit = {
				any_playable_country = {
					is_gestalt = no
					has_ascension_perk = ap_megacorp
					OR = {
						has_modifier = aggressive_marketing_target
						any_relation = {
							merg_is_default_empire = yes
							NOR = { is_gestalt = yes has_ascension_perk = ap_megacorp has_modifier = aggressive_marketing_target }
						}
					}
				}
			}
			random_playable_country = {
				limit = {
					is_gestalt = no
					has_ascension_perk = ap_megacorp
					OR = {
						has_modifier = aggressive_marketing_target
						any_relation = {
							merg_is_default_empire = yes
							NOR = { is_gestalt = yes has_ascension_perk = ap_megacorp has_modifier = aggressive_marketing_target }
						}
					}
				}
				weights = { base = 1 modifier = { add = 1 has_modifier = aggressive_marketing_target } }
				country_event = { id = UniqueAscensionPerksEvents.8068 days = 16 random = 16 }
			}
		}
		# on_half_yearly_pulse simulation
		event_target:global_event_country = {
			country_event = { id = UniqueAscensionPerksEvents.8888 days = 8 random = 15 }
			country_event = { id = UniqueAscensionPerksEvents.8888 days = 180 random = 30 }
		}

		## ON_YEARLY_PULSE_COUNTRY
		# # ap_defense_sentinels
		if = {
			limit = { any_playable_country = { has_ascension_perk = ap_defense_sentinels } }
			# every_playable_country = {
			# 	limit = {
			# 		has_ascension_perk = ap_defense_sentinels
			# 		has_technology = tech_defense_sentinels_2
			# 		NOR = { has_active_event = { UniqueAscensionPerksEvents.235 } has_country_flag = ap_defense_sentinels_retriever_project }
			# 	}
			# 	country_event = { id = UniqueAscensionPerksEvents.235 }
			# }
			# UniqueAscensionPerksEvents.238		# ap_defense_sentinels
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_defense_sentinels
					any_system_within_border = {
						NOR = { has_star_flag = defense_sentinels_system any_fleet_in_system = { has_fleet_flag = defense_sentinels_platforms } }
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.238 }
			}
			# UniqueAscensionPerksEvents.237		# ap_defense_sentinels
			# if = {
			# 	limit = {
			# 		any_playable_country = {
			# 			has_ascension_perk = ap_defense_sentinels
			# 			has_country_flag = ap_defense_sentinels_retriever_project
			# 			any_relation = { is_country_type = security_forces has_relation_flag = { who = prev flag = defense_sentinels } }
			# 			NOR = { is_in_frontier_space = yes has_planet_flag = defense_sentinels_planet }
			# 		}
			# 	}
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_defense_sentinels
					has_country_flag = ap_defense_sentinels_retriever_project
					# any_relation = { is_country_type = security_forces has_relation_flag = { who = prev flag = defense_sentinels } }
					any_owned_planet = {
						NOR = { is_in_frontier_space = yes has_planet_flag = defense_sentinels_planet num_pops < 11 }
						solar_system = {
							is_on_border = yes # Native trigger v3.13
							count_fleet_in_system = { limit = { is_ship_size = blue_military_station_large_ai } count = 0 } # Just one
						}
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.237 random = 8 }
			}
		}
		# UniqueAscensionPerksEvents.351		# ap_wheel_fortune
		if = {
			limit = {
				any_playable_country = {
					has_ascension_perk = ap_wheel_fortune
					NOT = { has_country_flag = treasures_on_colony_found_cooldown }
					any_owned_planet = { is_colony = yes NOT = { has_deposit = d_treasures_planet } }
				}
			}
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_wheel_fortune
					NOT = { has_country_flag = treasures_on_colony_found_cooldown }
					any_owned_planet = { is_colony = yes NOT = { has_deposit = d_treasures_planet } }
				}
				country_event = { id = UniqueAscensionPerksEvents.351 }
			}
		}
		# UniqueAscensionPerksEvents.3061		# ap_friendly_nature
		if = {
			limit = {
				any_playable_country = {
					has_ascension_perk = ap_friendly_nature
					any_owned_planet = {
						NOT = { has_planet_flag = friendly_nature_discovery }
						can_find_rare_deposits = yes
					}
				}
			}
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_friendly_nature
					# NOT = { has_country_flag = friendly_nature_discovery_cooldown }
					any_owned_planet = {
						NOT = { has_planet_flag = friendly_nature_discovery }
						can_find_rare_deposits = yes
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.3061 }
			}
		}
		# UniqueAscensionPerksEvents.6163		# ap_robot_command
		if = {
			limit = { any_playable_country = { has_ascension_perk = ap_robot_command } }
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_robot_command
					# any_owned_planet = { has_building = building_unit_assembler }
				}
				country_event = { id = UniqueAscensionPerksEvents.6163 }
			}
		}
		# UniqueAscensionPerksEvents.4088		# ap_advanced_government_1
		if = {
			limit = { any_playable_country = { has_ascension_perk = ap_advanced_government_1 } }
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_advanced_government_1
					any_owned_pop = { exists = planet pop_has_right_ethics = no }
				}
				country_event = { id = UniqueAscensionPerksEvents.4088 }
			}
		}
		# UniqueAscensionPerksEvents.8000		# ap_expansion_infinity
		every_playable_country = {
			limit = {
				has_ascension_perk = ap_expansion_infinity
				any_owned_planet = {
					NOT = { has_planet_flag = ap_expansion_infinity_collection }
					colony_age > 2
					num_pops > 10
					count_owned_pop = { count > 10 limit = { has_job = yes } }
				}
			}
			country_event = { id = UniqueAscensionPerksEvents.8000 }
		}

		# UniqueAscensionPerksEvents.8061		# ap_advanced_security
		# every_country = {
		# 	limit = {
		# 		is_country_type = security_forces
		# 		any_owned_fleet = { has_fleet_flag = security_escort_fleet is_fleet_idle = yes }
		# 	}
		# 	random_owned_fleet = { limit = { has_fleet_flag = security_escort_fleet is_fleet_idle = yes } destroy_fleet = this }
		# }
	}
}

# Simulated on_half_yearly_pulse
country_event = {
	id = UniqueAscensionPerksEvents.8888
	hide_window = yes
	# mean_time_to_happen = { months = 6 }
	is_triggered_only = yes
	immediate = {
		# UniqueAscensionPerksEvents.58
		if = {
			limit = { any_playable_country = { has_ascension_perk = ap_advanced_security } }
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_advanced_security
					any_owned_planet = {
						is_colony = yes
						num_sapient_pops > 12
						OR = {
							planet_crime > 75
							has_modifier = has_criminal_branch_office
							has_modifier = criminal_underworld
							has_modifier = drone_deviancy
							has_modifier = drone_corruption
						}
						NOR = {
							has_planet_flag = recent_security_preventive_strike
							has_planet_flag = recent_security_preventive_strike_energy_small
							has_planet_flag = recent_security_preventive_strike_energy_medium
							has_planet_flag = recent_security_preventive_strike_energy_big
							has_planet_flag = recent_security_preventive_strike_energy_huge
							has_planet_flag = recent_security_preventive_strike_energy_minerals
							has_planet_flag = recent_security_preventive_strike_energy_consumers
							has_planet_flag = recent_security_preventive_strike_energy_members
							has_planet_flag = recent_security_preventive_strike_energy_leaders
							has_planet_flag = recent_security_preventive_strike_energy_weapons
							has_planet_flag = recent_security_preventive_strike_energy_ships
						}
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.58 random = 8 }
			}
		}
		# UniqueAscensionPerksEvents.132		# ap_eternal_vigilance
		if = {
			limit = {
				host_has_dlc = "Apocalypse"
				any_playable_country = {
					has_ascension_perk = ap_eternal_vigilance
					has_country_flag = ap_eternal_vigilance_project
					has_technology = tech_titans
					any_owned_starbase = { NOT = { has_starbase_flag = vigilance_starbase } }
				}
			}
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_eternal_vigilance
					has_country_flag = ap_eternal_vigilance_project
					has_technology = tech_titans
					any_owned_starbase = { NOT = { has_starbase_flag = vigilance_starbase } }
				}
				country_event = { id = UniqueAscensionPerksEvents.132 random = 8 }
			}
		}
		# UniqueAscensionPerksEvents.451		# ap_artifact_hunter
		if = {
			limit = {
				any_playable_country = {
					has_ascension_perk = ap_artifact_hunter
					NOT = { has_country_flag = ap_artifact_hunter_cooldown }
				}
			}
			random_playable_country = {
				limit = {
					has_ascension_perk = ap_artifact_hunter
					NOT = { has_country_flag = ap_artifact_hunter_cooldown }
					any_owned_planet = {
						has_active_building = building_deep_space_scanner
						num_buildings = { type = building_deep_space_scanner value > 0 disabled = no }
						OR = {
							root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 2 } can_spawn_archaeological_site = yes } }
							AND = {
								num_buildings = { type = building_deep_space_scanner value > 1 }
								OR = {
									root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 4 } can_spawn_archaeological_site = yes } }
									AND = {
										num_buildings = { type = building_deep_space_scanner value > 2 }
										OR = {
											root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 6 } can_spawn_archaeological_site = yes } }
											AND = {
												num_buildings = { type = building_deep_space_scanner value > 3 }
												OR = {
													root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 8 } can_spawn_archaeological_site = yes } }
													AND = {
														num_buildings = { type = building_deep_space_scanner value > 4 }
														OR = {
															root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 10 } can_spawn_archaeological_site = yes } }
															AND = {
																num_buildings = { type = building_deep_space_scanner value > 5 }
																OR = {
																	root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 12 } can_spawn_archaeological_site = yes } }
																	AND = {
																		num_buildings = { type = building_deep_space_scanner value > 6 }
																		root = { any_planet_within_border = { distance = { source = prevprev use_bypasses = no min_jumps = 1 max_jumps = 14 } can_spawn_archaeological_site = yes } }
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.451 days = 30 random = 60 }
			}
		}
		# UniqueAscensionPerksEvents.8041		# ap_nano_drones
		if = {
			limit = {
				any_playable_country = {
					has_ascension_perk = ap_nano_drones
					OR = { has_country_flag = nano_auto_upgrade has_country_flag = nano_resource_replacement }
					has_country_resource = { type = automatic_drone amount > 200 }
				}
			}
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_nano_drones
					OR = { has_country_flag = nano_auto_upgrade has_country_flag = nano_resource_replacement }
					has_country_resource = { type = automatic_drone amount > 200 }
				}
				country_event = { id = UniqueAscensionPerksEvents.8041 days = 1 random = 5 }
			}
		}
		# UniqueAscensionPerksEvents.8082		# ap_stability_celebration
		if = {
			limit = {
				any_playable_country = {
					has_ascension_perk = ap_stability_celebration
					NOT = { has_country_flag = stability_celebration_message }
				}
			}
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_stability_celebration
					NOT = { has_country_flag = stability_celebration_message }
					any_owned_planet = {
						NOR = { has_modifier = stability_celebration has_modifier = stability_celebration_gestalt }
						planet_stability > 55
						planet_crime < 20
						free_housing > 0
						free_jobs > 0
						free_amenities > 0
						num_pops > 20
						OR = {
							AND = {
								root = {
									OR = { has_policy_flag = ai_full_rights is_synthetic_empire = yes }
								}
								count_owned_pop = {
									count > 20
									limit = {
										is_enslaved = no
										is_being_purged = no
										is_being_assimilated = no
										is_unemployed = no
										is_robot_pop = yes
									}
								}
							}
							count_owned_pop = {
								count > 20
								limit = {
									is_enslaved = no
									is_being_purged = no
									is_being_assimilated = no
									is_unemployed = no
									is_robot_pop = no
								}
							}
						}
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.8082 random = 8 }
			}
		}
		# UniqueAscensionPerksEvents.8787		# Special Subject - Sync relations
		if = {
			limit = {
				any_country = {
					is_subject = no
					is_unique_perk_special_subject = yes
					OR = {
						has_country_flag = domesticated_spaceborn_alien
						has_country_flag = security_strike_force
						has_country_flag = defense_sentinels
						has_country_flag = civilian_activities_country
					}
				}
			}
			every_country = {
				limit = {
					is_subject = no
					is_unique_perk_special_subject = yes
					OR = {
						has_country_flag = domesticated_spaceborn_alien
						has_country_flag = security_strike_force
						has_country_flag = defense_sentinels
						has_country_flag = civilian_activities_country
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.8787 random = 8 }
			}
		}
		# UniqueAscensionPerksEvents.8789		# Remove Special Subject countries
		country_event = { id = UniqueAscensionPerksEvents.8789 }

		# CORTANA EVENT
		if = {
			limit = {
				any_playable_country = {
					has_ascension_perk = ap_ai_cortana
					NOR = { has_country_flag = cortana_ready has_country_flag = cortana_cooldown }
				}
			}
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_ai_cortana
					NOR = {
						has_active_event = { CortanaEvent.0 CortanaEvent.1 }
						has_country_flag = cortana_ready
						has_country_flag = cortana_cooldown
					}
				}
				country_event = { id = CortanaEvent.0 days = 1 random = 5 }
			}
		}
	}
}

# ON_MONTHLY_PULSE AND ON_MONTHLY_PULSE_COUNTRY ACTION COLLECTOR
event = {
	id = UniqueAscensionPerksEvents.4040
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		# ON_MONTHLY_PULSE_COUNTRY
		# UniqueAscensionPerksEvents.4143		# ap_genius_cloning
		if = {
			limit = { any_playable_country = { has_ascension_perk = ap_genius_cloning } }
			every_playable_country = {
				limit = { has_ascension_perk = ap_genius_cloning }
				country_event = { id = UniqueAscensionPerksEvents.4143 days = 1 random = 5 }
			}
		}
		# UniqueAscensionPerksEvents.56			# ap_advanced_security
		if = {
			limit = {
				any_playable_country = {
					has_ascension_perk = ap_advanced_security
					any_system_within_border = {
						is_in_frontier_space = no
						has_trade_route = yes
						trade_protected_value >= 1
						NOT = { has_star_flag = recent_security_strike_force }
					}
				}
			}
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_advanced_security
					any_system_within_border = {
						is_in_frontier_space = no
						has_trade_route = yes
						trade_protected_value >= 1
						NOT = { has_star_flag = recent_security_strike_force }
						any_fleet_in_system = {
							exists = owner
							owner = {
								NOT = { is_same_empire = prevprevprev }
								OR = { is_pirate_country = yes is_crisis_faction = yes is_hostile = prevprevprev }
							}
						}
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.56 days = 1 random = 5 }
			}
		}
		# UniqueAscensionPerksEvents.462		# ap_self_aware_colony
		if = {
			limit = {
				any_playable_country = {
					has_ascension_perk = ap_self_aware_colony
					has_resource = { type = minerals amount > 1000 } # has_country_resource = { type = minerals amount > 1000 }
					any_owned_planet = { is_colony = yes colony_age > 12 has_modifier = self_aware_colony }
				}
			}
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_self_aware_colony
					has_resource = { type = minerals amount > 1000 } # has_country_resource = { type = minerals amount > 1000 }
					any_owned_planet = { is_colony = yes colony_age > 12 has_modifier = self_aware_colony }
				}
				country_event = { id = UniqueAscensionPerksEvents.462 days = 1 random = 5 }
			}
		}
		# UniqueAscensionPerksEvents.321		# ap_chosen_ruler
		if = {
			limit = { any_playable_country = { has_ascension_perk = ap_chosen_ruler exists = ruler } }
			every_playable_country = {
				limit = { has_ascension_perk = ap_chosen_ruler exists = ruler }
				country_event = { id = UniqueAscensionPerksEvents.321 days = 1 random = 5 }
			}
		}

		# UniqueAscensionPerksEvents.266		# ap_civilian_activities
		if = {
			limit = {
				any_playable_country = {
					has_ascension_perk = ap_civilian_activities
					OR = {
						any_relation = { is_country_type = civilian_activities has_relation_flag = { who = prev flag = civilian_activities_country } }
						any_country = { is_country_type = civilian_activities has_relation_flag = { who = prev flag = civilian_activities_country } }
					}
				}
			}
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_civilian_activities
					OR = {
						any_relation = { is_country_type = civilian_activities has_relation_flag = { who = prev flag = civilian_activities_country } }
						any_country = { is_country_type = civilian_activities has_relation_flag = { who = prev flag = civilian_activities_country } }
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.266 days = 1 random = 5 }
			}
		}
		# UniqueAscensionPerksEvents.301		# ap_pyramidal_society
		if = {
			limit = {
				any_playable_country = {
					OR = { has_ascension_perk = ap_pyramidal_society has_country_flag = ap_pyramidal_society }
				}
			}
			every_playable_country = {
				limit = {
					OR = { has_ascension_perk = ap_pyramidal_society has_country_flag = ap_pyramidal_society }
					OR = {
						AND = { is_common_empire = yes any_owned_planet = { NOR = { has_deposit = d_district_governor has_deposit = d_district_university has_deposit = d_district_defense has_deposit = d_district_industry } } }
						AND = { is_hive_empire = yes any_owned_planet = { NOR = { has_deposit = d_district_queen has_deposit = d_district_nursery has_deposit = d_district_forest has_deposit = d_district_entrepot } } }
						AND = { is_machine_empire = yes any_owned_planet = { NOR = { has_deposit = d_district_foundry has_deposit = d_district_security has_deposit = d_district_upgrade } } } # has_deposit = d_district_recycling
						AND = { is_megacorp = yes any_owned_planet = { NOR = { has_deposit = d_district_finance has_deposit = d_district_casino has_deposit = d_district_bank has_deposit = d_district_journalism } } }
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.301 days = 10 random = 5 }
			}
		}

		# UniqueAscensionPerksEvents.231		# ap_defense_sentinels
		if = {
			limit = {
				any_playable_country = {
					has_ascension_perk = ap_defense_sentinels
					# any_relation = { is_country_type = security_forces has_relation_flag = { who = prev flag = defense_sentinels } }
				}
			}
			every_playable_country = {
				limit = {
					has_ascension_perk = ap_defense_sentinels
					any_relation = { is_country_type = security_forces has_relation_flag = { who = prev flag = defense_sentinels } }
				}
				country_event = { id = UniqueAscensionPerksEvents.231 days = 3 }
				# country_event = { id = UniqueAscensionPerksEvents.231 days = 17 } # on_half_monthly_pulse
				# TODO on_bi_monthly_pulse?
				if = {
					limit = {
						any_relation = {
							is_country_type = security_forces has_relation_flag = { who = prev flag = defense_sentinels }
							OR = {
								num_fleets < 30
								count_owned_ship = { limit = { is_ship_size = large_ship_ai } count < 20 }
							}
						}
					}
					country_event = { id = UniqueAscensionPerksEvents.239 }
				}
			}
		}

		# UniqueAscensionPerksEvents.1020		# ap_space_domestication Space Domestication
		if = {
			limit = { any_playable_country = { has_ascension_perk = ap_space_domestication } }
			random_playable_country = {
				limit = { has_ascension_perk = ap_space_domestication }
				if = { # Only on_bi_monthly_pulse
					limit = { NOT = { has_country_flag = bi_space_domestication_protocol } }
					set_country_flag = bi_space_domestication_protocol
				}
				else = {
					remove_country_flag = bi_space_domestication_protocol
					country_event = { id = UniqueAscensionPerksEvents.1020 }
				}
			}
		}
	}
}
