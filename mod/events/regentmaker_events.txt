# regentmaker_events.txt
namespace = regentmaker

# Edict "Regentmaker Control"
country_event = {
	id = regentmaker.0
	title = "regentmaker.0"
	desc = "regentmaker.0.desc"
	picture = GFX_evt_salute
	is_triggered_only = yes
	trigger = {
		is_ai = no
		NOR = {
			has_active_event = { regentmaker.0 }
			has_country_flag = regentmaker_control_engaged
		}
		is_overlord = yes
	}
	immediate = {
		set_timed_country_flag = { flag = regentmaker_control_engaged days = 7 }
		switch = { # In theory, there shouldn't be any (to be sure)
			trigger = has_country_flag
			regentmaker.502 = { remove_country_flag = "regentmaker.502" }
			regentmaker.503 = { remove_country_flag = "regentmaker.503" }
			regentmaker.504 = { remove_country_flag = "regentmaker.504" }
			regentmaker.510 = { remove_country_flag = "regentmaker.510" }
			regentmaker.511 = { remove_country_flag = "regentmaker.511" }
		}
	}
	# after = {}
	# option = {
	# 	name = "edict_request_resources"
	# 	custom_tooltip = "edict_request_resources_desc"
	# 	allow = {
	# 		has_modifier = perfect_vassal_leader
	# 		NOT = { has_active_event = { decentralized.14 } }
	# 	}
	# 	hidden_effect = {
	# 		country_event = { id = decentralized.14 }
	# 	}
	# }
	option = {
		name = "edict_regentmaker_give_tech"
		custom_tooltip = "edict_regentmaker_give_tech_desc"
		allow = {
			has_resource = { type = influence amount > 50 }
			NOT = {
				has_active_event = { regentmaker.4 }
				# has_modifier = electoral
			}
		}
		hidden_effect = {
			country_event = { id = regentmaker.4 }
		}
	}
	option = {
		name = regentmaker.7 # "edict_regentmaker_choose_ethics"
		custom_tooltip = regentmaker.7.desc # "edict_regentmaker_choose_ethics_desc"
		allow = {
			NOT = { has_active_event = { regentmaker.7 } }
		}
		hidden_effect = {
			country_event = { id = regentmaker.7 }
		}
	}
	option = {
		name = regentmaker.8 # "edict_regentmaker_choose_gov"
		custom_tooltip = regentmaker.8.desc # "edict_regentmaker_choose_gov_desc"
		allow = {
			NOT = { has_active_event = { regentmaker.8 } }
		}
		hidden_effect = {
			country_event = { id = regentmaker.8 }
		}
	}
	# Requires Dynamic Mod Menu
	option = {	# Compatible with Decentralized Empires
		name = regentmaker.501 # RENAME_EMPIRE_TITLE
		custom_tooltip = regentmaker.501.desc
		trigger = {
			# has_global_flag = gf_regentmaker_active
			any_subject = { is_perfect_vassal = yes }
		}
		allow = {
			has_global_flag = dmm_installed
			NOT = { has_active_event = { regentmaker.504 } }
		}
		hidden_effect = {
			set_timed_country_flag = { flag = "regentmaker.504" days = 10 }
			country_event = { id = regentmaker.500 }
			# country_event = { id = regentmaker.501 }
		}
	}
	# True Regent (subject control)
	option = {
		name = decision_true_emperor
		custom_tooltip = decision_true_emperor_desc
		trigger = {
			NOT = { has_global_flag = regentmaker_control_sel@owner }
			# OR = {
			# 	has_ascension_perk = ap_decentralization
				has_ascension_perk = ap_powerful_vassals
			# }
			any_subject = { is_perfect_vassal = yes }
		}
		allow = {
			NOT = { has_active_event = { regentmaker.510 } }
		}
		hidden_effect = {
			set_timed_country_flag = { flag = "regentmaker.510" days = 10 }
			country_event = { id = regentmaker.500 }
		}
	}
	# "Fleet Sharing"
	option = {
		name = regentmaker.11 #  origin.28.tooltip: "Eine kleine Flotte von [scion_master.GetSpeciesNamePlural]-Raumschiffen wird an [Root.GetName] Ã¼bergeben"
		custom_tooltip = regentmaker.11.desc # "edict_regentmaker_choose_gov_desc"
		allow = {
			NOT = { has_active_event = { regentmaker.11 } }
		}
		hidden_effect = {
			country_event = { id = regentmaker.11 }
		}
	}
	option = { name = "LEAVE" }
}

# Decision release subject
planet_event = {
	id = regentmaker.1
	title = "regentmaker.1"
	desc = "regentmaker.1.desc"
	picture = GFX_evt_throne_room
	is_triggered_only = yes
	location = root
	# pre_triggers = { has_owner = yes }
	# trigger = { }
	immediate = {
		if = { limit = { NOT = { exists = event_target:owning_empire } }
			if = { limit = { exists = from from = { is_scope_type = country } }
				from = { save_event_target_as = owning_empire }
			} else_if = { limit = { exists = fromfrom fromfrom = { is_scope_type = country } }
				fromfrom = { save_event_target_as = owning_empire }
			} else = {
				if = { limit = { exists = space_owner }
					space_owner = { save_event_target_as = owning_empire }
				} else = {
					planet_owner = { save_event_target_as = owning_empire }
				}
			}
		}
		event_target:owning_empire = {
			if = { limit = { NOT = { has_country_flag = first_alien_life } }
				set_country_flag = first_alien_life
				set_timed_country_flag = { flag = not_alien_life days = 10 }
			}
			if = { limit = { NOT = { has_country_flag = has_encountered_other_empire } }
				set_country_flag = has_encountered_other_empire
				set_timed_country_flag = { flag = not_encountered_other_empire days = 10 }
			}
		}
	}
	option = {
		name = "regentmaker.1.a"
		planet_event = { id = regentmaker.2 }
	}
	# option = {
	# 	name = "regentmaker.1.b"
	# 	hidden_effect = {
	# 		set_timed_planet_flag = { flag = regentmaker_tributary days = 7 }
	# 		remove_planet_flag = regentmaker_member_state
	# 		planet_event = { id = regentmaker.2 }
	# 	}
	# }
	# option = {
	# 	name = "regentmaker.1.c"
	# 	trigger = {
	# 		owner = { has_modifier = perfect_vassal_leader }
	# 	}
	# 	hidden_effect = {
	# 		set_timed_planet_flag = { flag = regentmaker_member_state days = 7 }
	# 		remove_planet_flag = regentmaker_tributary
	# 		planet_event = { id = regentmaker.2 }
	# 	}
	# }
	option = {
		name = distar.1055.b		# "Leave it be."
		hidden_effect = {
			owner = {
				every_owned_planet = {
					limit = { has_planet_flag = planet_marked_for_handover }
					remove_planet_flag = planet_marked_for_handover
					remove_modifier = "perfect_vassal_colony"
					remove_modifier = "pm_perfect_vassal_colony"
				}
				# refund
				add_resource = { influence = 190 food = 1950 minerals = 4900 energy = 4900 unity = 1950 }
			}
		}
	}
}

# Release subject (from regentmaker.1)
# owner = event_target:owning_empire
planet_event = {
	id = regentmaker.2
	title = "regentmaker.1"
	desc = "regentmaker.2.desc"
	picture = GFX_evt_throne_room
	is_triggered_only = yes
	location = root
	immediate = {
		if = { limit = { NOT = { exists = event_target:owning_empire } }
			if = { limit = { exists = space_owner }
				space_owner = { save_event_target_as = owning_empire }
			} else = {
				planet_owner = { save_event_target_as = owning_empire }
			}
		}
	}
	option = {
		name = "regentmaker.2.a"
		hidden_effect = {
			event_target:owning_empire.owner_species = { save_event_target_as = vassal_species }
		}
		planet_event = { id = regentmaker.3 }
	}
	option = {
		name = "regentmaker.2.b"
		hidden_effect = {
			if = { limit = { exists = event_target:vassal_species }
				event_target:vassal_species = { save_global_event_target_as = vassal_species }
				clear_global_event_target = vassal_species
			}
		}
		planet_event = { id = regentmaker.3 }
	}
	option = {
		# "Leave it be."
		name = distar.1055.b
		hidden_effect = {
			event_target:owning_empire = {
				every_planet_within_border = {
					limit = { has_planet_flag = planet_marked_for_handover }
					remove_planet_flag = planet_marked_for_handover
					remove_modifier = "perfect_vassal_colony"
					remove_modifier = "pm_perfect_vassal_colony"
				}
				# refund
				add_resource = { influence = 190 food = 1950 minerals = 4900 energy = 4900 unity = 1950 }
			}
		}
	}
}

# owner = event_target:owning_empire (HIDDEN helper from regentmaker.2)
planet_event = {
	id = regentmaker.3
	location = root
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = { limit = { NOT = { exists = event_target:owning_empire } }
			if = { limit = { exists = space_owner }
				space_owner = { save_event_target_as = owning_empire }
			} else = {
				planet_owner = { save_event_target_as = owning_empire }
			}
		}
		## Save target species
		if = { limit = {  NOT = { exists = event_target:vassal_species } }
			## Save target species get_vassal_species
			if = { limit = { is_colonizable = yes }
				event_target:owning_empire = {
					random_owned_pop_species = {
						limit = {
							is_sapient = yes
							can_live_on_planet = root
							root = { habitability = { who = prev value >= 0.55 } }
							any_species_pop = {
								is_enslaved = no
								is_being_purged = no
								OR = {
									pop_has_happiness = no
									happiness > 0.3
								}
							}
						}
						weights = {
							base = 1
							modifier = { add = 7 is_same_species = prev.species }
							modifier = { add = 3 root = { habitability = { who = prev value >= 0.7 } } }
							modifier = { add = 5 root = { habitability = { who = prev value >= 0.8 } } }
						}
						save_event_target_as = vassal_species
					}
				}
				# Just cheap fallback
				if = {
					limit = {
						NAND = {
							exists = event_target:vassal_species
							event_target:vassal_species = { is_scope_valid = yes is_scope_type = species }
						}
					}
					owner_species = { save_event_target_as = vassal_species }
				}
				create_colony = { owner = event_target:owning_empire species = event_target:vassal_species }
				create_pop = { species = event_target:vassal_species }
			} else_if = { limit = { is_colony = yes }
				if = { limit = { num_species = 1 }
					random_owned_species = { save_event_target_as = vassal_species }
				} else = {
					random_owned_pop = {
						limit = {
							is_sapient = yes
							prev = {
								habitability = { who = prev value > 0.6 }
								count_owned_pop = {
									limit = {
										is_enslaved = no
										is_being_purged = no
										# is_robot_pop = no
										can_live_on_planet = root
										OR = {
											pop_has_happiness = no
											happiness > 0.3
										}
										is_same_species = prevprev.species
									}
									count > 1
								}
							}
							OR = {
								species = { exists = home_planet home_planet = { is_planet = root } }
								AND = {
									is_enslaved = no
									is_being_purged = no
									is_robot_pop = no
									is_being_assimilated = no
									can_live_on_planet = root
									has_population_control = { type = no country = event_target:owning_empire }
									has_migration_control = { type = no country = event_target:owning_empire }
									has_colonization_control = { type = no country = event_target:owning_empire }
									prev = { habitability = { who = prev value > 0.65 } }
								}
								species = {
									prevprev = { is_ideal_planet_class = { who = prev status = yes } }
									OR = {
										prevprev = { is_majority_species = prev }
										species_has_happiness_with_owner = event_target:owning_empire
										has_citizenship_type = { type = citizenship_full country = event_target:owning_empire }
									}
								}
								species = {
									has_citizenship_type = { type = citizenship_full country = event_target:owning_empire }
									species_has_happiness_with_owner = event_target:owning_empire
								}
								AND = {
									prev = { is_majority_species = prev.species }
									NOT = { is_same_species = event_target:owning_empire.owner_species }
								}
							}
						}
						species = { save_event_target_as = vassal_species }
					}
					if = {
						limit = {
							NAND = {
								exists = event_target:vassal_species
								event_target:vassal_species = { is_scope_valid = yes is_scope_type = species }
							}
						}
						random_owned_species = {
							limit = { prev = { is_majority_species = prev } }
							save_event_target_as = vassal_species
						}
					}
				}
				every_owned_pop = { clear_pop_category = yes }
			}
			# FULL Fallback (mostly not needed)
			if = {
				limit = {
					is_colony = yes
					NAND = {
						exists = event_target:vassal_species
						event_target:vassal_species = { is_scope_valid = yes is_scope_type = species }
					}
				}
				if = { limit = { num_unique_species > 1 }
					random_owned_species = {
						limit = {
							NOT = { is_exact_same_species = event_target:owning_empire.owner_species }
						}
						save_event_target_as = vassal_species
					}
				} else = {
					random_owned_species = {
						limit = { is_scope_valid = yes }
						save_event_target_as = vassal_species
					}
				}
			}
			# if = { removed in v.3.8
			# 	limit = {
			# 		exists = sector
			# 		sector = { exists = leader }
			# 		is_sector_capital = yes
			# 	}
			# 	sector.leader = {
			# 		save_event_target_as = vassal_leader
			# 		unassign_leader = this
			# 		log="Save leader \\[vassal_leader.GetName]"
			# 	}
			# }
			if = { limit = { exists = leader }
				leader = {
					save_event_target_as = vassal_leader
					unassign_leader = this
					log="Save leader \\[vassal_leader.GetName]"
				}
			}
			if = {
				limit = {
					NAND = {
						exists = event_target:vassal_species
						event_target:vassal_species = { is_scope_valid = yes is_scope_type = species }
					}
				}
				event_target:owning_empire.owner_species = { save_event_target_as = vassal_species }
				log ="NO VALID vassal_species FOUND on planet \\[Root.GetName]"
			}
		}
		set_update_modifiers_batch = begin
		create_country = {
			name = random
			# name = "[This.GetStarName]" TODO
			name_list = event_target:owning_empire
			type = default
			ship_prefix = ""
			government_restrictions = {
				authority = {
					NOR = { value = auth_machine_intelligence value = auth_hive_mind }
				}
			}
			authority = event_target:owning_empire
			civics = random
			ignore_initial_colony_error = yes
			randomize_ethos = yes
			ethos = random
			species = event_target:vassal_species
			# flag = random			# Separate color definition not possible!?
			origin = origin_separatists
			# auto_delete = yes
			day_zero_contact = no
			exclude_day_zero_contact = event_target:owning_empire
			released_by_country = event_target:owning_empire
			released_from_country = event_target:owning_empire
			effect = {
				event_target:owning_empire = {
					if = { limit = { OR = { has_country_flag = not_encountered_other_empire NOT = { has_country_flag = has_encountered_other_empire } } }
						prev = { set_country_flag = has_encountered_other_empire }
					}
					if = { limit = { OR = { has_country_flag = not_alien_life NOT = { has_country_flag = first_alien_life } } }
						prev = { set_country_flag = first_alien_life }
					}
					set_timed_relation_flag = { who = prev flag = AbandonedRefugees days = 5 }
					establish_communications_no_message = prev
				}
				# change_country_flag = { }
				set_country_flag = perfect_vassal_country
				set_timed_relation_flag = { who = event_target:owning_empire flag = AbandonedRefugees days = 5 }
				establish_communications_no_message = event_target:owning_empire
				root = {
					set_controller = prev
					set_owner = prev
					if = { limit = { has_building = no }
						while = {
							count = 12
							limit = { num_pops < 30 }
							create_pop = { species = event_target:vassal_species }
						}
					}
					set_capital = yes
				}
				set_custom_capital_location = root
				save_event_target_as = new_empire
				if = { limit = { has_overlord_dlc = yes }
					set_origin = origin_imperial_vassal
				}
			}
		}
		last_created_country = {
			add_resource = { minerals = 500 energy = 1000 unity = 2000 influence = 100 }
			if = { limit = { is_gestalt = no } add_resource = { consumer_goods = 2000 } }
			else = { add_resource = { alloys = 1000 minerals = 1000 } }
			# if = { limit = { root = { has_planet_flag = regentmaker_tributary } }
			# 	set_subject_of = { who = event_target:owning_empire preset = preset_tributary allow_instant_negotiation = yes }
			# } else_if = { limit = { root = { has_planet_flag = regentmaker_member_state } }
			# 	set_subject_of = { who = event_target:owning_empire preset = preset_bulwark allow_instant_negotiation = yes }
			# 	add_intel = { who = event_target:owning_empire amount = 100 }
			# } else = {
			set_subject_of = {
				who = event_target:owning_empire
				# preset = preset_vassal TODO?
				# allow_instant_negotiation = yes
			}
			set_faction_hostility = {
				set_hostile = no
				set_neutral = no
				set_friendly = yes
				target = event_target:owning_empire
			}
			# action_open_borders
			set_closed_borders = { who = event_target:owning_empire status = no forced = 5 }
			# TODO test
			# change_dominant_species = { species = event_target:vassal_species change_all = yes } # buggy 3.0.3
			event_target:owning_empire = {
				set_country_flag = has_communications@prev
				set_faction_hostility = {
					set_hostile = no
					set_neutral = no
					set_friendly = yes
					target = prev
				}
				# establish_contact = { who = last_created_country location = root }
				every_federation_ally = { establish_communications = prevprev }
				every_relation = {
					establish_communications_no_message = prevprev
					# establish_contact = { who = last_created_country location = root }
				}
				# action_open_borders
				set_closed_borders = { who = prev status = no forced = 5 }
				add_intel = { who = prev amount = 200 }
				switch = { trigger = has_valid_civic
					civic_fanatic_purifiers		= { prev = { force_add_civic = civic_fanatic_purifiers } }
					civic_hive_devouring_swarm	= { prev = { force_add_civic = civic_hive_devouring_swarm } }
					civic_machine_terminator	= { prev = { force_add_civic = civic_machine_terminator } }
					civic_machine_assimilator	= { prev = { force_add_civic = civic_machine_assimilator } }
					civic_machine_servitor		= { prev = { force_add_civic = civic_machine_servitor } }
					civic_criminal_heritage		= { prev = { force_add_civic = civic_criminal_heritage } }
					civic_barbaric_despoilers	= { prev = { force_add_civic = civic_barbaric_despoilers } }
				}
			}
			# establish_contact = { who = event_target:owning_empire location = event_target:owning_empire.capital_scope }
			if = { limit = { is_same_species = event_target:owning_empire }
				random = {
					chance = 50
					copy_ethos_and_authority = event_target:owning_empire
					change_government = {
						authority = auth_imperial
						remove_invalid_civics = yes cooldown = no
						civics = {
							civic = random
							civic = random
							civic = random
						}
					}
				}
			}
			# else_if = { # name = random
			# 	limit = { NOT = { is_same_species = event_target:owning_empire } }
			# 	random_list = {
			# 		1 = { set_name = "[This.GetStarName] $country$" }
			# 		40 = { set_name = "[This.GetStarName]" }
			# 		1 = { set_name = "[This.owner_species.GetName] $country$" }
			# 		8 = { modifier = { factor = 0 is_homeworld = yes } }
			# 	}
			# }
			if = { limit = { root = { has_planet_flag = planet_marked_for_handover } }
				log = "Release selected planet [Root.GetName]!"
				root = {
					if = { limit = { planet_size < 25 } set_planet_size = 25 }	# Cheating!?
					set_advanced_colony = yes
					planet_event = { id = regentmaker.9 days = -1 }
				}
			}
			set_relation_flag = { who = event_target:owning_empire flag = perfect_vassal_relation }
			add_opinion_modifier = { who = event_target:owning_empire modifier = opinion_empire_origine }
			add_opinion_modifier = { who = event_target:owning_empire modifier = opinion_scion }
			add_opinion_modifier = { who = event_target:owning_empire modifier = opinion_ceded_starbase } # opinion_trust
			add_opinion_modifier = { who = event_target:owning_empire modifier = opinion_enlightened_us } # opinion_common_ground
			if = {
				limit = {
					exists = event_target:vassal_leader
					event_target:vassal_leader = { is_ruler = no }
				}
				log = "New leader [vassal_leader.GetName]"
				event_target:vassal_leader = { set_owner = prev }
				assign_leader = event_target:vassal_leader
			}
			add_trust = { who = event_target:owning_empire amount = 100 }
			add_intel = { who = event_target:owning_empire amount = 200 }
			add_modifier = { modifier = perfect_vassal_boost }
			add_modifier = { modifier = difficulty_grand_admiral }
			# create_starting_leaders, create_starting_fleets
			country_event = { id = regentmaker.209 }
		}

		event_target:owning_empire = {
			# every_owned_planet = {
			every_planet_within_border = {
				limit = {
					has_planet_flag = planet_marked_for_handover
					exists = space_owner
					has_ground_combat = no
					is_capital = no
					is_occupied_flag = no
					OR = {
						is_owned_by = event_target:owning_empire
						is_controlled_by = event_target:owning_empire
						space_owner = { is_same_empire = event_target:owning_empire }
					}
				}
				planet_event = { id = regentmaker.9 }
			}

			if = { limit = { has_country_flag = not_encountered_other_empire }
				remove_country_flag = has_encountered_other_empire
			}
			if = { limit = { has_country_flag = not_alien_life }
				remove_country_flag = first_alien_life
			}
			country_event = { id = specialist.1000 days = 3 } # adjust subject type
		}
		set_update_modifiers_batch = end
	}
}

# Edict/Control menue
country_event = {
	id = regentmaker.4
	title = "regentmaker.4"
	desc = "regentmaker.4.desc"
	picture = GFX_evt_throne_room
	is_triggered_only = yes
	# trigger = {
	# 	has_subject = yes
	# 	NOT = { has_modifier = electoral }
	# }
	immediate = {
		export_trigger_value_to_variable = {
			trigger = count_subject
			parameters = {
				limit = { is_perfect_vassal = yes }
			}
			variable = num_perfect_vassals
		}
		export_trigger_value_to_variable = {
			trigger = count_subject
			parameters = {
				limit = { merg_is_default_empire = yes }
			}
			variable = num_vassals
		}
		# log="num_vassals \\[This.num_perfect_vassals]"
		# log="num_vassals \\[This.num_vassals]"
		multiply_variable = { which = num_perfect_vassals value = 25 }
		multiply_variable = { which = num_vassals value = 10 }
		change_variable = { which = num_perfect_vassals value = 25 }
		change_variable = { which = num_vassals value = 10 }

	}
	after = {
		hidden_effect = {
			clear_variable = num_perfect_vassals
			clear_variable = num_vassals
		}
	}
	option = {
		name = "regentmaker.4.a"
		allow = {
			has_country_resource = { type = influence amount > num_vassals }
		}
		add_resource = { influence = -1 mult = num_vassals }
		hidden_effect = {
			every_subject = {
				limit = { merg_is_default_empire = yes }
				copy_techs_from = { target = root }
				# root = { add_resource = { influence = -25 } }
			}
		}
	}
	option = {
		name = "regentmaker.4.b"
		allow = {
			has_country_resource = { type = influence amount > num_perfect_vassals }
		}
		add_resource = { influence = -1 mult = num_perfect_vassals }
		hidden_effect = {
			every_subject = {
				limit = { is_perfect_vassal = yes }
				root = {
					# add_resource = { influence = -25 }
					copy_techs_from = { target = prev }
				}
			}
		}
	}
	# "Leave it be." tech_unlocked_ratio
	option = {
		name = distar.1055.b
		hidden_effect = {
			remove_country_flag = regentmaker_control_engaged
			country_event = { id = regentmaker.0 }
		}
	}
}

# "Regentmaker Ethics Selection"
country_event = {
	id = regentmaker.7
	title = "regentmaker.7"
	desc = "regentmaker.7.desc"
	picture = GFX_evt_throne_room
	is_triggered_only = yes
	# hide_window = yes
	immediate = { remove_country_flag = "regentmaker.502" }
	option = {
		name = "regentmaker.7.a" # Entire Coalition
		country_event = { id = regentmaker.50 }
	}
	option = {
		name = "regentmaker.7.b"
		allow = {
			NOT = { has_active_event = { regentmaker.502 } }
		}
		hidden_effect = { set_country_flag = "regentmaker.502" }
		country_event = { id = regentmaker.500 }
	}
	option = {
		name = leviathans.105.d		# "Nothing for now. Goodbye."
		hidden_effect = {
			remove_country_flag = regentmaker_control_engaged
			country_event = { id = regentmaker.0 }
		}
	}
}

# "Regentmaker Government Selection"
country_event = {
	id = regentmaker.8
	title = "regentmaker.8"
	desc = "regentmaker.8.desc"
	picture = GFX_evt_throne_room
	is_triggered_only = yes
	# hide_window = yes
	immediate = { remove_country_flag = "regentmaker.503" }
	option = {
		name = "regentmaker.8.a" # Entire Coalition
		country_event = { id = regentmaker.51 }
	}
	option = {
		name = "regentmaker.8.b"
		allow = {
			NOT = { has_active_event = { regentmaker.503 } }
		}
		hidden_effect = { set_country_flag = "regentmaker.503" }
		country_event = { id = regentmaker.500 }
	}
	option = {
		name = leviathans.105.d		# "Nothing for now. Goodbye."
		hidden_effect = {
			remove_country_flag = regentmaker_control_engaged
			country_event = { id = regentmaker.0 }
		}
	}
}

# Release planet (HIDDEN helper) from regentmaker.3
# owner = last_created_country = event_target:new_empire
planet_event = {
	id = regentmaker.9
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		if = { limit = { has_owner = no }
			start_colony = { owner = last_created_country species = event_target:vassal_species }
		} else_if = { limit = { is_owned_by = event_target:owning_empire }
			set_owner = last_created_country
		} else_if = { limit = { is_controlled_by = event_target:owning_empire }
			set_controller = last_created_country
		}
		remove_planet_flag = planet_marked_for_handover
		remove_modifier = "perfect_vassal_colony"
		add_modifier = { modifier = pm_perfect_vassal_colony }
		solar_system = {
			if = {
				limit = {
					exists = starbase
					starbase = { is_owned_by = event_target:owning_empire }
				}
				starbase = { set_owner = root.owner }
				every_neighbor_system = {
					limit = {
						exists = starbase
						is_owned_by = event_target:owning_empire
					}
					if = {
						limit = {
							any_system_colony = {
								is_owned_by = event_target:owning_empire
								has_planet_flag = planet_marked_for_handover
							}
						}
						starbase = { set_owner = root.owner }
						every_system_colony = {
							limit = {
								is_owned_by = event_target:owning_empire
								NOT = { is_same_value = prevprev }
							}
							if = { limit = { has_planet_flag = planet_marked_for_handover }
								remove_planet_flag = planet_marked_for_handover
								remove_modifier = "perfect_vassal_colony"
								add_modifier = { modifier = pm_perfect_vassal_colony }
								set_controller = root.owner
								set_owner = root.owner
							} else = {
								starbase = { set_owner = event_target:owning_empire }
							}
						}
					} else_if = {
						limit = {
							NOT = {
								any_system_colony = {
									is_star = no
									is_asteroid = no
								}
							}
						}
						starbase = { set_owner = root.owner }
					}
					# else = { }
				}
				every_system_planet = {
					limit = {
						is_star = no
						is_asteroid = no
						has_owner = yes
						is_owned_by = event_target:owning_empire
						NOT = { is_same_value = prevprev }
					}
					if = { limit = { has_planet_flag = planet_marked_for_handover }
						remove_planet_flag = planet_marked_for_handover
						remove_modifier = "perfect_vassal_colony"
						add_modifier = { modifier = pm_perfect_vassal_colony }
					}
					set_controller = root.owner
					set_owner = root.owner
				}
			}
		}
		# root.owner = {
		# 	add_resource = { minerals = 250 energy = 500 }
		# 	capital_scope = { add_modifier = { modifier = "regentmaker_colony" days = -1 } }
		# }
	}
}

# "Regentmaker Fleet Selection"
# TODO get compensation like opinion (must be dynamic)
country_event = {
	id = regentmaker.11
	title = "regentmaker.11"
	desc = "regentmaker.11.desc"
	picture = GFX_evt_throne_room
	is_triggered_only = yes
	immediate = { remove_country_flag = "regentmaker.511" }
	option = {
		name = "regentmaker.11.a" # All fleets to entire coalition.
		# Similar regentmaker.110
		every_owned_fleet = {
			limit = {
				is_mobile = yes
				exists = solar_system
				is_in_combat = no
				# exists = orbit
				solar_system = {
					exists = space_owner
					space_owner = {
						is_perfect_vassal = yes
						overlord = { is_same_empire = root }
					}
				}
			}
			set_owner = solar_system.space_owner
			if = { limit = { exists = leader }
				leader = { set_owner = prev.solar_system.space_owner }
			}
		}
	}
	option = {
		name = "regentmaker.11.b"
		allow = {
			NOT = { has_active_event = { regentmaker.500 regentmaker.511 } }
		}
		hidden_effect = { set_country_flag = "regentmaker.511" }
		country_event = { id = regentmaker.500 }
	}
	option = {
		name = leviathans.105.d		# "Nothing for now. Goodbye."
		hidden_effect = {
			remove_country_flag = regentmaker_control_engaged
			country_event = { id = regentmaker.0 }
		}
	}
}

# "Regentmaker Global Ethics Selection"
country_event = {
	id = regentmaker.50
	title = "regentmaker.7"
	desc = "regentmaker.7.desc"
	# picture = GFX_evt_throne_room
	diplomatic = yes
	picture_event_data = {
		portrait = root.owner_main_species
		room = enclave_curator_room
	}
	custom_gui = sgm_ScrollbarEventWindow
	is_triggered_only = yes
	# immediate = {
	#	random_subject = {
	#		save_event_target_as = vassal_empire
	#	}
	# }
	option = {
		name = "regentmaker.50.a"
		every_subject = {
			limit = { is_perfect_vassal = yes }
			clear_ethos = yes
		}
	}
	option = {
		name = "ethic_fanatic_authoritarian"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_fanatic_authoritarian } }
			shift_ethic = ethic_fanatic_authoritarian
		}
	}
	option = {
		name = "ethic_authoritarian"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_authoritarian } }
			shift_ethic = ethic_authoritarian
		}
	}
	option = {
		name = "ethic_fanatic_egalitarian"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_fanatic_egalitarian } }
			shift_ethic = ethic_fanatic_egalitarian
		}
	}
	option = {
		name = "ethic_egalitarian"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_egalitarian } }
			shift_ethic = ethic_egalitarian
		}
	}
	option = {
		name = "ethic_fanatic_xenophobe"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_fanatic_xenophobe } }
			shift_ethic = ethic_fanatic_xenophobe
		}
	}
	option = {
		name = "ethic_xenophobe"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_xenophobe } }
			shift_ethic = ethic_xenophobe
		}
	}
	option = {
		name = "ethic_fanatic_xenophile"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_fanatic_xenophile } }
			shift_ethic = ethic_fanatic_xenophile
		}
	}
	option = {
		name = "ethic_xenophile"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_xenophile } }
			shift_ethic = ethic_xenophile
		}
	}
	option = {
		name = "ethic_fanatic_militarist"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_fanatic_militarist } }
			shift_ethic = ethic_fanatic_militarist
		}
	}
	option = {
		name = "ethic_militarist"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_militarist } }
			shift_ethic = ethic_militarist
		}
	}
	option = {
		name = "ethic_fanatic_pacifist"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_fanatic_pacifist } }
			shift_ethic = ethic_fanatic_pacifist
		}
	}
	option = {
		name = "ethic_pacifist"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_pacifist } }
			shift_ethic = ethic_pacifist
		}
	}
	option = {
		name = "ethic_fanatic_spiritualist"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_fanatic_spiritualist } }
			shift_ethic = ethic_fanatic_spiritualist
		}
	}
	option = {
		name = "ethic_spiritualist"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_spiritualist } }
			shift_ethic = ethic_spiritualist
		}
	}
	option = {
		name = "ethic_fanatic_materialist"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_fanatic_materialist } }
			shift_ethic = ethic_fanatic_materialist
		}
	}
	option = {
		name = "ethic_materialist"
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_materialist } }
			shift_ethic = ethic_materialist
		}
	}
	# (Mod) Ethics and Civics Classic
	option = {
		name = "ethic_fanatic_green"
		trigger = { has_global_flag = cultural_overhaul_active }
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_fanatic_green } }
			shift_ethic = ethic_fanatic_green
		}
	}
	option = {
		name = "ethic_green"
		trigger = { has_global_flag = cultural_overhaul_active }
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_green } }
			shift_ethic = ethic_green
		}
	}
	option = {
		name = "ethic_fanatic_industrial"
		trigger = { has_global_flag = cultural_overhaul_active }
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_fanatic_industrial } }
			shift_ethic = ethic_fanatic_industrial
		}
	}
	option = {
		name = "ethic_industrial"
		trigger = { has_global_flag = cultural_overhaul_active }
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_industrial } }
			shift_ethic = ethic_industrial
		}
	}
	option = {
		name = "ethic_fanatic_socialism"
		trigger = { has_global_flag = cultural_overhaul_active }
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_fanatic_socialism } }
			shift_ethic = ethic_fanatic_socialism
		}
	}
	option = {
		name = "ethic_socialism"
		trigger = { has_global_flag = cultural_overhaul_active }
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_socialism } }
			shift_ethic = ethic_socialism
		}
	}
	option = {
		name = "ethic_fanatic_capitalism"
		trigger = { has_global_flag = cultural_overhaul_active }
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_fanatic_capitalism } }
			shift_ethic = ethic_fanatic_capitalism
		}
	}
	option = {
		name = "ethic_capitalism"
		trigger = { has_global_flag = cultural_overhaul_active }
		every_subject = {
			limit = { is_perfect_vassal = yes NOT = { has_ethic = ethic_capitalism } }
			shift_ethic = ethic_capitalism
		}
	}
	# option = { # Not wanted side effects
	#	name = "ethic_gestalt_consciousness"
	#	every_subject = { shift_ethic = ethic_gestalt_consciousness }
	# }
	option = { name = BACK }
	after = {
		hidden_effect = {
			country_event = { id = regentmaker.7 }
		}
	}
	# after = {
	#	hidden_effect = {
	#		if = {
	#			limit = {
	#				exists = event_target:vassal_empire
	#				is_scope_type = country
	#			}
	#			every_subject = {
	#				limit = {
	#					NOR = {
	#						is_same_empire = event_target:vassal_empire
	#						has_same_ethos = event_target:vassal_empire
	#					}
	#				}
	#				copy_ethos_and_authority = event_target:vassal_empire
	#				# shift_ethic = event_target:vassal_empire
	#			}
	#		}
	#	}
	# }
}

# "Regentmaker Global Government Selection"
country_event = {
	id = regentmaker.51
	title = "regentmaker.8"
	desc = "regentmaker.8.desc"
	picture = GFX_evt_throne_room
	is_triggered_only = yes
	# immediate = {
	#	random_subject = {
	#		limit = { is_perfect_vassal = yes }
	#		save_event_target_as = vassal_empire
	#	}
	# }
	option = {
		name = "regentmaker_auth_democratic"
		every_subject = {
			limit = {
				NOT = { has_authority = auth_democratic }
				is_perfect_vassal = yes
			}
			set_timed_country_flag = { flag = auth_democratic days = 2 }
			country_event = { id = regentmaker.30 }
			change_government = { authority = auth_democratic civics = random remove_invalid_civics = yes cooldown = no }
		}
	}
	option = {
		name = SEPARATOR
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = "regentmaker_auth_oligarchic"
		every_subject = {
			limit = {
				NOT = { has_authority = auth_oligarchic }
				is_perfect_vassal = yes
			}
			set_timed_country_flag = { flag = auth_oligarchic days = 2 }
			country_event = { id = regentmaker.30 }
			change_government = { authority = auth_oligarchic civics = random remove_invalid_civics = yes cooldown = no }
		}
	}
	option = {
		name = SEPARATOR
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = "regentmaker_auth_dictatorial"
		every_subject = {
			limit = {
				NOT = { has_authority = auth_dictatorial }
				is_perfect_vassal = yes
			}
			set_timed_country_flag = { flag = auth_dictatorial days = 2 }
			country_event = { id = regentmaker.30 }
			change_government = { authority = auth_dictatorial civics = random remove_invalid_civics = yes cooldown = no }
		}
	}
	option = {
		name = SEPARATOR
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = "regentmaker_auth_imperial"
		every_subject = {
			limit = {
				NOT = { has_authority = auth_imperial }
				is_perfect_vassal = yes
			}
			set_timed_country_flag = { flag = auth_imperial days = 2 }
			country_event = { id = regentmaker.30 }
			change_government = { authority = auth_imperial civics = random remove_invalid_civics = yes cooldown = no }
		}
	}
	option = {
		name = SEPARATOR
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = "regentmaker_auth_corporate"
		every_subject = {
			limit = {
				is_megacorp = no
				is_perfect_vassal = yes
			}
			set_timed_country_flag = { flag = auth_corporate days = 2 }
			country_event = { id = regentmaker.30 }
			change_government = { authority = auth_corporate civics = random remove_invalid_civics = yes cooldown = no }
		}
	}
	# (Mod) Ethics and Civics Classic
	option = {
		name = SEPARATOR
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = "regentmaker_auth_direct_democratic"
		trigger = { has_global_flag = cultural_overhaul_active }
		every_subject = {
			limit = {
				NOT = { has_authority = auth_direct_democratic }
				is_perfect_vassal = yes
			}
			set_timed_country_flag = { flag = auth_direct_democratic days = 2 }
			country_event = { id = regentmaker.30 }
			change_government = { authority = auth_direct_democratic civics = random remove_invalid_civics = yes cooldown = no }
		}
	}
	# option = { # Not wanted
	#	name = "auth_hive_mind"
	#	every_subject = {
	#		change_government = { authority = auth_hive_mind civics = random remove_invalid_civics = yes cooldown = no }
	#	}
	# }
	# option = { # Not wanted
	#	name = "auth_machine_intelligence"
	#	every_subject = {
	#		change_government = { authority = auth_machine_intelligence civics = random remove_invalid_civics = yes cooldown = no }
	#	}
	# }
	option = { name = BACK }
	after = {
		hidden_effect = {
			country_event = { id = regentmaker.8 }
		}
	}
	# after = {
	#	hidden_effect = {
	#		if = {
	#			limit = {
	#				exists = event_target:vassal_empire
	#				is_scope_type = country
	#			}
	#			every_subject = {
	#				limit = {
	#					NOT = {
	#						is_same_empire = event_target:vassal_empire
	#					}
	#				}
	#				copy_ethos_and_authority = event_target:vassal_empire
	#				# change_government = {
	#				#	authority = event_target:vassal_empire
	#				#	# civics = random
	#				# }
	#			}
	#		}
	#	}
	# }
}

# has_global_flag = gf_moreauthorities_activated
# has_global_flag = cultural_overhaul_active (Ethics and Civics Classic)
# has_global_flag = gf_veru_activated (Vassals Expanded and Reworked)
# 2434790082
####################
# Find Subjects - Ethics / Government Selection
country_event = {
	id = regentmaker.500
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_variable = { which = rm_total_subjects value = 0 }
		# Count how many valid Subject States there are.
		if = { # Find Subjects - Control
			limit = {
				OR = {
					has_country_flag = "regentmaker.504"
					has_country_flag = "regentmaker.510"
					has_country_flag = "regentmaker.511"
				}
			}
			# ordered_subject = {
			# 	position = 0
			# 	order_by = trigger:fleet_power
			# 	inverse = yes
			every_subject= {
				limit = {
					is_perfect_vassal = yes
					NOT = { has_country_flag = subject_sel_count }
				}
				if = {
					limit = {
						check_variable = { which = rm_total_subjects value < 11 }
						OR = {
							fleet_power > 8000
							relative_power = { who = root category = fleet value > pathetic }
							relative_power = { who = root category = economy value > pathetic }
						}
					}
					set_country_flag = subject_sel_count
					prev = { change_variable = { which = rm_total_subjects value = 1 } }
					# save_event_target_as = subject_@root.rm_total_subjects
					# log="RM concat test [subject_1.GetName]"
				} # else = { break = yes }
			}
		} else_if = { # comp. Civil Wars mod
			limit = { has_global_flag = civil_wars_active }
			every_subject = { # count < 11
				limit = {
					merg_is_default_empire = yes
					NOT = { any_agreement = { agreement_preset = preset_devstate } }
				}
				if = { limit = { check_variable = { which = rm_total_subjects value < 11 } }
					set_country_flag = subject_sel_count
					overlord = {
						change_variable = { which = rm_total_subjects value = 1 }
					}
				}
			}
		} else = {
			every_subject = { # count < 11
				limit = { merg_is_default_empire = yes }
				if = { limit = { check_variable = { which = rm_total_subjects value < 11 } }
					set_country_flag = subject_sel_count
					overlord = {
						change_variable = { which = rm_total_subjects value = 1 }
					}
				}
			}
		}
		# Next we save each subject as an event_target.
		# As the scripting language doesn't have proper loops, we use a lot of ifs and hope no one ever has more than 10 subjects.
		# TODO can be removed with 3.1?
		if = {
			limit = {
				check_variable = { which = rm_total_subjects value >= 1 }
			}
			random_subject = {
				limit = { has_country_flag = subject_sel_count }
				remove_country_flag = subject_sel_count
				save_event_target_as = subject_1
			}
			if = {
				limit = {
					check_variable = { which = rm_total_subjects value >= 2 }
				}
				random_subject = {
					limit = { has_country_flag = subject_sel_count }
					remove_country_flag = subject_sel_count
					save_event_target_as = subject_2
				}
				if = {
					limit = {
						check_variable = { which = rm_total_subjects value >= 3 }
					}
					random_subject = {
						limit = { has_country_flag = subject_sel_count }
						remove_country_flag = subject_sel_count
						save_event_target_as = subject_3
					}
					if = {
						limit = {
							check_variable = { which = rm_total_subjects value >= 4 }
						}
						random_subject = {
							limit = { has_country_flag = subject_sel_count }
							remove_country_flag = subject_sel_count
							save_event_target_as = subject_4
						}
						if = {
							limit = {
								check_variable = { which = rm_total_subjects value >= 5 }
							}
							random_subject = {
								limit = { has_country_flag = subject_sel_count }
								remove_country_flag = subject_sel_count
								save_event_target_as = subject_5
							}
							if = {
								limit = {
									check_variable = { which = rm_total_subjects value >= 6 }
								}
								random_subject = {
									limit = { has_country_flag = subject_sel_count }
									remove_country_flag = subject_sel_count
									save_event_target_as = subject_6
								}
								if = {
									limit = {
										check_variable = { which = rm_total_subjects value >= 7 }
									}
									random_subject = {
										limit = { has_country_flag = subject_sel_count }
										remove_country_flag = subject_sel_count
										save_event_target_as = subject_7
									}
									if = {
										limit = {
											check_variable = { which = rm_total_subjects value >= 8 }
										}
										random_subject = {
											limit = { has_country_flag = subject_sel_count }
											remove_country_flag = subject_sel_count
											save_event_target_as = subject_8
										}
										if = {
											limit = {
												check_variable = { which = rm_total_subjects value >= 9 }
											}
											random_subject = {
												limit = { has_country_flag = subject_sel_count }
												remove_country_flag = subject_sel_count
												save_event_target_as = subject_9
											}
											if = {
												limit = {
													check_variable = { which = rm_total_subjects value >= 10 }
												}
												random_subject = {
													limit = { has_country_flag = subject_sel_count }
													remove_country_flag = subject_sel_count
													save_event_target_as = subject_10
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	after = {
		if = { limit = { has_country_flag = "regentmaker.502" }
			remove_country_flag = "regentmaker.502"
			country_event = { id = regentmaker.502 } # Ethic
		} else_if = { limit = { has_country_flag = "regentmaker.503" }
			remove_country_flag = "regentmaker.503"
			country_event = { id = regentmaker.503 } # Gov
		} else_if = { limit = { has_country_flag = "regentmaker.504" }
			remove_country_flag = "regentmaker.504"
			country_event = { id = regentmaker.504 } # Name
		} else_if = { limit = { has_country_flag = "regentmaker.510" }
			remove_country_flag = "regentmaker.510"
			country_event = { id = regentmaker.510 } # Control
		} else_if = { limit = { has_country_flag = "regentmaker.511" }
			remove_country_flag = "regentmaker.511"
			country_event = { id = regentmaker.511 } # Fleet
		}
	}
}

# TODO TEST (unused)
# "Regentmaker Name Change"
country_event = {
	id = regentmaker.501
	title = "regentmaker.501"
	desc = "regentmaker.501.desc"
	picture = GFX_evt_announcement
	is_triggered_only = yes
	is_test_event = yes
	immediate = { remove_country_flag = "regentmaker.504" }

	option = {
		name = "regentmaker.501"
		custom_tooltip = regentmaker.501.desc
		hidden_effect = { set_country_flag = "regentmaker.504" }
		country_event = { id = regentmaker.500 }
	}
	option = {
		name = leviathans.105.d		# "Nothing for now. Goodbye."
		hidden_effect = {
			remove_country_flag = regentmaker_control_engaged
			country_event = { id = regentmaker.0 }
		}
	}
}

# List Subjects - Ethics Selection
country_event = {
	id = regentmaker.502
	title = rm.2.name
	desc = {
		trigger = {
			check_variable = { which = rm_total_subjects value > 0 }
		}
		text = rm.2.desc
	}
	desc = {
		trigger = {
			check_variable = { which = rm_total_subjects value = 0 }
		}
		text = rm.2.desc.fail
	}
	picture = GFX_evt_board_meeting
	show_sound = event_laboratory_sound
	location = root
	trigger = { is_variable_set = rm_total_subjects }
	is_triggered_only = yes
	# No valid target
	option = {
		name = "UNFORTUNATE"
		default_hide_option = yes
		exclusive_trigger = {
			check_variable = { which = rm_total_subjects value = 0 }
		}
	}
	# Now we show a list of the subject states to the player.
	option = {
		name = rm.2.subject_1
		custom_tooltip = rm.2.subject_1.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 1 }
			exists = event_target:subject_1
		}
		hidden_effect = {
			event_target:subject_1 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.60 }
		}
	}
	option = {
		name = rm.2.subject_2
		custom_tooltip = rm.2.subject_2.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 2 }
			exists = event_target:subject_2
		}
		hidden_effect = {
			event_target:subject_2 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.60 }
		}
	}
	option = {
		name = rm.2.subject_3
		custom_tooltip = rm.2.subject_3.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 3 }
			exists = event_target:subject_3
		}
		hidden_effect = {
			event_target:subject_3 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.60 }
		}
	}
	option = {
		name = rm.2.subject_4
		custom_tooltip = rm.2.subject_4.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 4 }
			exists = event_target:subject_4
		}
		hidden_effect = {
			event_target:subject_4 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.60 }
		}
	}
	option = {
		name = rm.2.subject_5
		custom_tooltip = rm.2.subject_5.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 5 }
			exists = event_target:subject_5
		}
		hidden_effect = {
			event_target:subject_5 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.60 }
		}
	}
	option = {
		name = rm.2.subject_6
		custom_tooltip = rm.2.subject_6.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 6 }
			exists = event_target:subject_6
		}
		hidden_effect = {
			event_target:subject_6 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.60 }
		}
	}
	option = {
		name = rm.2.subject_7
		custom_tooltip = rm.2.subject_7.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 7 }
			exists = event_target:subject_7
		}
		hidden_effect = {
			event_target:subject_7 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.60 }
		}
	}
	option = {
		name = rm.2.subject_8
		custom_tooltip = rm.2.subject_8.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 8 }
			exists = event_target:subject_8
		}
		hidden_effect = {
			event_target:subject_8 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.60 }
		}
	}
	option = {
		name = rm.2.subject_9
		custom_tooltip = rm.2.subject_9.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 9 }
			exists = event_target:subject_9
		}
		hidden_effect = {
			event_target:subject_9 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.60 }
		}
	}
	option = {
		name = rm.2.subject_10
		custom_tooltip = rm.2.subject_10.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 10 }
			exists = event_target:subject_10
		}
		hidden_effect = {
			event_target:subject_10 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.60 }
		}
	}
	option = {
		name = rm.2.back
		trigger = {
			check_variable = { which = rm_total_subjects value > 0 }
		}
		hidden_effect = {
			country_event = { id = regentmaker.7 }
		}
	}
}

# List Subjects - Government Selection
country_event = {
	id = regentmaker.503
	title = rm.4.name
	desc = {
		trigger = {
			check_variable = { which = rm_total_subjects value > 0 }
		}
		text = rm.4.desc
	}
	desc = {
		trigger = {
			check_variable = { which = rm_total_subjects value = 0 }
		}
		text = rm.2.desc.fail
	}
	picture = GFX_evt_board_meeting
	show_sound = event_laboratory_sound
	location = root
	trigger = { is_variable_set = rm_total_subjects }
	is_triggered_only = yes
	# No valid target
	option = {
		name = "UNFORTUNATE"
		default_hide_option = yes
		exclusive_trigger = {
			check_variable = { which = rm_total_subjects value = 0 }
		}
	}
	# Now we show a list of the subject states to the player.
	option = {
		name = rm.2.subject_1
		custom_tooltip = rm.2.subject_1.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 1 }
			exists = event_target:subject_1
		}
		hidden_effect = {
			event_target:subject_1 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.70 }
		}
	}
	option = {
		name = rm.2.subject_2
		custom_tooltip = rm.2.subject_2.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 2 }
			exists = event_target:subject_2
		}
		hidden_effect = {
			event_target:subject_2 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.70 }
		}
	}
	option = {
		name = rm.2.subject_3
		custom_tooltip = rm.2.subject_3.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 3 }
			exists = event_target:subject_3
		}
		hidden_effect = {
			event_target:subject_3 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.70 }
		}
	}
	option = {
		name = rm.2.subject_4
		custom_tooltip = rm.2.subject_4.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 4 }
			exists = event_target:subject_4
		}
		hidden_effect = {
			event_target:subject_4 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.70 }
		}
	}
	option = {
		name = rm.2.subject_5
		custom_tooltip = rm.2.subject_5.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 5 }
			exists = event_target:subject_5
		}
		hidden_effect = {
			event_target:subject_5 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.70 }
		}
	}
	option = {
		name = rm.2.subject_6
		custom_tooltip = rm.2.subject_6.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 7 }
			exists = event_target:subject_7
		}
		hidden_effect = {
			event_target:subject_6 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.70 }
		}
	}
	option = {
		name = rm.2.subject_7
		custom_tooltip = rm.2.subject_7.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 7 }
			exists = event_target:subject_7
		}
		hidden_effect = {
			event_target:subject_7 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.70 }
		}
	}
	option = {
		name = rm.2.subject_8
		custom_tooltip = rm.2.subject_8.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 8 }
			exists = event_target:subject_8
		}
		hidden_effect = {
			event_target:subject_8 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.70 }
		}
	}
	option = {
		name = rm.2.subject_9
		custom_tooltip = rm.2.subject_9.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 9 }
			exists = event_target:subject_9
		}
		hidden_effect = {
			event_target:subject_9 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.70 }
		}
	}
	option = {
		name = rm.2.subject_10
		custom_tooltip = rm.2.subject_10.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 10 }
			exists = event_target:subject_10
		}
		hidden_effect = {
			event_target:subject_10 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.70 }
		}
	}
	option = {
		name = rm.2.back
		trigger = {
			check_variable = { which = rm_total_subjects value > 0 }
		}
		hidden_effect = {
			country_event = { id = regentmaker.8 }
		}
	}
}

# List Subjects - Naming Selection
country_event = {
	id = regentmaker.504
	title = regentmaker.504
	desc = {
		trigger = {
			check_variable = { which = rm_total_subjects value > 0 }
		}
		text = rm.2.desc
	}
	desc = {
		trigger = {
			check_variable = { which = rm_total_subjects value = 0 }
		}
		text = rm.2.desc.fail
	}
	picture = GFX_evt_board_meeting
	show_sound = event_laboratory_sound
	location = root
	trigger = {
		is_variable_set = rm_total_subjects
		has_global_flag = dmm_installed
	}
	is_triggered_only = yes
	immediate = {
		if = { limit = { exists = event_target:subject_selected }
			event_target:subject_selected = { save_global_event_target_as = subject_selected }
			clear_global_event_target = subject_selected
		}
	}

	after = {
		if = { limit = { exists = event_target:subject_selected }
			dmm_keyboard_rename = { TARGET = event_target:subject_selected }
		}
	}

	# No valid target
	option = {
		name = "UNFORTUNATE"
		default_hide_option = yes
		exclusive_trigger = {
			check_variable = { which = rm_total_subjects value = 0 }
		}
	}
	# Now we show a list of the subject states to the player.
	option = {
		name = rm.2.subject_1
		custom_tooltip = rm.2.subject_1.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 1 }
			exists = event_target:subject_1
		}
		hidden_effect = {
			event_target:subject_1 = { save_event_target_as = subject_selected }
			# country_event = { id = regentmaker.509 }
		}
	}
	option = {
		name = rm.2.subject_2
		custom_tooltip = rm.2.subject_2.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 2 }
			exists = event_target:subject_2
		}
		hidden_effect = {
			event_target:subject_2 = { save_event_target_as = subject_selected }
			# country_event = { id = regentmaker.509 }
		}
	}
	option = {
		name = rm.2.subject_3
		custom_tooltip = rm.2.subject_3.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 3 }
			exists = event_target:subject_3
		}
		hidden_effect = {
			event_target:subject_3 = { save_event_target_as = subject_selected }
			# country_event = { id = regentmaker.509 }
		}
	}
	option = {
		name = rm.2.subject_4
		custom_tooltip = rm.2.subject_4.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 4 }
			exists = event_target:subject_4
		}
		hidden_effect = {
			event_target:subject_4 = { save_event_target_as = subject_selected }
			# country_event = { id = regentmaker.509 }
		}
	}
	option = {
		name = rm.2.subject_5
		custom_tooltip = rm.2.subject_5.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 5 }
			exists = event_target:subject_5
		}
		hidden_effect = {
			event_target:subject_5 = { save_event_target_as = subject_selected }
			# country_event = { id = regentmaker.509 }
		}
	}
	option = {
		name = rm.2.subject_6
		custom_tooltip = rm.2.subject_6.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 6 }
			exists = event_target:subject_6
		}
		hidden_effect = {
			event_target:subject_6 = { save_event_target_as = subject_selected }
			# country_event = { id = regentmaker.509 }
		}
	}
	option = {
		name = rm.2.subject_7
		custom_tooltip = rm.2.subject_7.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 7 }
			exists = event_target:subject_7
		}
		hidden_effect = {
			event_target:subject_7 = { save_event_target_as = subject_selected }
			# country_event = { id = regentmaker.509 }
		}
	}
	option = {
		name = rm.2.subject_8
		custom_tooltip = rm.2.subject_8.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 8 }
			exists = event_target:subject_8
		}
		hidden_effect = {
			event_target:subject_8 = { save_event_target_as = subject_selected }
			# country_event = { id = regentmaker.509 }
		}
	}
	option = {
		name = rm.2.subject_9
		custom_tooltip = rm.2.subject_9.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 9 }
			exists = event_target:subject_9
		}
		hidden_effect = {
			event_target:subject_9 = { save_event_target_as = subject_selected }
			# country_event = { id = regentmaker.509 }
		}
	}
	option = {
		name = rm.2.subject_10
		custom_tooltip = rm.2.subject_10.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 10 }
			exists = event_target:subject_10
		}
		hidden_effect = {
			event_target:subject_10 = { save_event_target_as = subject_selected }
			# country_event = { id = regentmaker.509 }
		}
	}
	option = {
		name = rm.2.back
		trigger = {
			check_variable = { which = rm_total_subjects value > 0 }
		}
		hidden_effect = {
			remove_country_flag = regentmaker_control_engaged
			country_event = { id = regentmaker.0 }
		}
	}
}

# "Regentmaker Control Selection" (from .510)
country_event = {
	id = regentmaker.100
	title = "regentmaker.100"
	desc = "regentmaker.100.desc"
	picture = GFX_evt_diplomatic_visit # GFX_evt_announcement
	is_triggered_only = yes
	trigger = {
		exists = event_target:subject_selected
		NOT = { has_global_flag = regentmaker_control_sel@event_target:subject_selected }
	}
	option = {
		name = "regentmaker.100.a"
		custom_tooltip = "regentmaker.100.a.tooltip"
		hidden_effect = {
			country_event = { id = regentmaker.70 }
			set_timed_global_flag = { flag = regentmaker_control_sel@event_target:subject_selected days = 360 }
			event_target:subject_selected = {
				set_player = root
				country_event = { id = regentmaker.101 days = 366 }
			}
		}
	}
	option = {
		name = "regentmaker.100.b"
		custom_tooltip = "regentmaker.100.b.tooltip"
		allow = {
			has_resource = { type = alloys amount > 2000 }
			has_resource = { type = energy amount > 2000 }
		}
		add_resource = { alloys = -2000 energy = -2000 }
		hidden_effect = {
			set_timed_global_flag = { flag = regentmaker_control_sel@event_target:subject_selected days = 360 }
			event_target:subject_selected = {
				add_resource = { alloys = 2000 energy = 2000 }
				set_player = root
				set_country_flag = regentmaker_control_sel
			}
		}
	}
	option = {
		name = leviathans.105.d
		hidden_effect = {
			remove_country_flag = regentmaker_control_engaged
			country_event = { id = regentmaker.0 }
		}
	}
}

# As .100 "Regentmaker Control Selection" back to overlord
country_event = {
	id = regentmaker.101
	title = "regentmaker.100"
	desc = "regentmaker.101.desc"
	picture = GFX_evt_announcement
	is_triggered_only = yes
	trigger = {
		is_subject = yes
		is_perfect_vassal = yes
		overlord = {
			is_ai = yes
			has_country_flag = has_communications@root
			OR = {
				# has_country_flag = owning_empire
				# has_ascension_perk = ap_decentralization
				has_ascension_perk = ap_powerful_vassals
				has_valid_civic = civic_feudal_realm
			}
		}
		has_relation_flag = { who = overlord flag = perfect_vassal_relation }
	}
	immediate = { remove_global_flag = regentmaker_control_sel@root }
	option = {
		name = regentmaker.101.a # NO "fleet1getback"
		hidden_effect = { set_country_flag = regentmaker_control_sel }
	}
	option = {
		name = regentmaker.101.b # OK
		hidden_effect = {
			remove_country_flag = regentmaker_control_sel
			overlord = { set_player = prev }
		}
	}
}

# TODO not hidden!?
country_event = {
	id = regentmaker.110
	# title = "regentmaker.110"
	# desc = "regentmaker.110.desc"
	# picture = GFX_evt_announcement
	hide_window = yes
	is_triggered_only = yes
	trigger = { exists = event_target:subject_selected }
	immediate = {
		every_owned_fleet = {
			limit = {
				is_mobile = yes
				exists = solar_system
				is_in_combat = no
				# exists = orbit
				solar_system = {
					exists = space_owner
					space_owner = {
						is_subject = yes
						is_perfect_vassal = yes
						# overlord = { is_same_empire = root }
						is_same_empire = event_target:subject_selected
					}
				}
			}
			set_owner = event_target:subject_selected
			if = { limit = { exists = leader }
				leader = { set_owner = event_target:subject_selected }
			}
		}
	}
	# option = {
	# 	name = regentmaker.101.a # NO "fleet1getback"
	# 	hidden_effect = {
	# 	}
	# }
}

# List Subjects - Control Selection
country_event = {
	id = regentmaker.510
	title = regentmaker.510
	desc = {
		trigger = {
			check_variable = { which = rm_total_subjects value > 0 }
		}
		text = rm.2.desc
	}
	desc = {
		trigger = {
			check_variable = { which = rm_total_subjects value = 0 }
		}
		text = rm.2.desc.fail
	}
	picture = GFX_evt_board_meeting
	show_sound = event_laboratory_sound
	location = root
	trigger = { is_variable_set = rm_total_subjects }
	is_triggered_only = yes
	# No valid target
	option = {
		name = "UNFORTUNATE"
		default_hide_option = yes
		exclusive_trigger = {
			check_variable = { which = rm_total_subjects value = 0 }
		}
	}
	# Now we show a list of the subject states to the player.
	option = {
		name = rm.2.subject_1
		custom_tooltip = rm.2.subject_1.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 1 }
			exists = event_target:subject_1
		}
		hidden_effect = {
			event_target:subject_1 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.100 }
		}
	}
	option = {
		name = rm.2.subject_2
		custom_tooltip = rm.2.subject_2.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 2 }
			exists = event_target:subject_2
		}
		hidden_effect = {
			event_target:subject_2 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.100 }
		}
	}
	option = {
		name = rm.2.subject_3
		custom_tooltip = rm.2.subject_3.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 3 }
			exists = event_target:subject_3
		}
		hidden_effect = {
			event_target:subject_3 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.100 }
		}
	}
	option = {
		name = rm.2.subject_4
		custom_tooltip = rm.2.subject_4.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 4 }
			exists = event_target:subject_4
		}
		hidden_effect = {
			event_target:subject_4 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.100 }
		}
	}
	option = {
		name = rm.2.subject_5
		custom_tooltip = rm.2.subject_5.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 5 }
			exists = event_target:subject_5
		}
		hidden_effect = {
			event_target:subject_5 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.100 }
		}
	}
	option = {
		name = rm.2.subject_6
		custom_tooltip = rm.2.subject_6.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 6 }
			exists = event_target:subject_6
		}
		hidden_effect = {
			event_target:subject_6 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.100 }
		}
	}
	option = {
		name = rm.2.subject_7
		custom_tooltip = rm.2.subject_7.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 7 }
			exists = event_target:subject_7
		}
		hidden_effect = {
			event_target:subject_7 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.100 }
		}
	}
	option = {
		name = rm.2.subject_8
		custom_tooltip = rm.2.subject_8.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 8 }
			exists = event_target:subject_8
		}
		hidden_effect = {
			event_target:subject_8 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.100 }
		}
	}
	option = {
		name = rm.2.subject_9
		custom_tooltip = rm.2.subject_9.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 9 }
			exists = event_target:subject_9
		}
		hidden_effect = {
			event_target:subject_9 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.100 }
		}
	}
	option = {
		name = rm.2.subject_10
		custom_tooltip = rm.2.subject_10.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 10 }
			exists = event_target:subject_10
		}
		hidden_effect = {
			event_target:subject_10 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.100 }
		}
	}
	option = {
		name = rm.2.back
		trigger = {
			check_variable = { which = rm_total_subjects value > 0 }
		}
		hidden_effect = {
			remove_country_flag = regentmaker_control_engaged
			country_event = { id = regentmaker.0 }
		}
	}
}

# List Subjects - Control Selection
country_event = {
	id = regentmaker.511
	title = regentmaker.11
	desc = {
		trigger = {
			check_variable = { which = rm_total_subjects value > 0 }
		}
		text = regentmaker.11.desc
	}
	desc = {
		trigger = {
			check_variable = { which = rm_total_subjects value = 0 }
		}
		text = rm.2.desc.fail
	}
	picture = GFX_evt_board_meeting
	show_sound = event_laboratory_sound
	location = root
	trigger = { is_variable_set = rm_total_subjects }
	is_triggered_only = yes
	# No valid target
	option = {
		name = "UNFORTUNATE"
		default_hide_option = yes
		exclusive_trigger = {
			check_variable = { which = rm_total_subjects value = 0 }
		}
	}
	# Now we show a list of the subject states to the player.
	option = {
		name = rm.2.subject_1
		custom_tooltip = rm.2.subject_1.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 1 }
			exists = event_target:subject_1
		}
		hidden_effect = {
			event_target:subject_1 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.110 }
		}
	}
	option = {
		name = rm.2.subject_2
		custom_tooltip = rm.2.subject_2.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 2 }
			exists = event_target:subject_2
		}
		hidden_effect = {
			event_target:subject_2 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.110 }
		}
	}
	option = {
		name = rm.2.subject_3
		custom_tooltip = rm.2.subject_3.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 3 }
			exists = event_target:subject_3
		}
		hidden_effect = {
			event_target:subject_3 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.110 }
		}
	}
	option = {
		name = rm.2.subject_4
		custom_tooltip = rm.2.subject_4.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 4 }
			exists = event_target:subject_4
		}
		hidden_effect = {
			event_target:subject_4 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.110 }
		}
	}
	option = {
		name = rm.2.subject_5
		custom_tooltip = rm.2.subject_5.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 5 }
			exists = event_target:subject_5
		}
		hidden_effect = {
			event_target:subject_5 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.110 }
		}
	}
	option = {
		name = rm.2.subject_6
		custom_tooltip = rm.2.subject_6.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 6 }
			exists = event_target:subject_6
		}
		hidden_effect = {
			event_target:subject_6 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.110 }
		}
	}
	option = {
		name = rm.2.subject_7
		custom_tooltip = rm.2.subject_7.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 7 }
			exists = event_target:subject_7
		}
		hidden_effect = {
			event_target:subject_7 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.110 }
		}
	}
	option = {
		name = rm.2.subject_8
		custom_tooltip = rm.2.subject_8.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 8 }
			exists = event_target:subject_8
		}
		hidden_effect = {
			event_target:subject_8 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.110 }
		}
	}
	option = {
		name = rm.2.subject_9
		custom_tooltip = rm.2.subject_9.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 9 }
			exists = event_target:subject_9
		}
		hidden_effect = {
			event_target:subject_9 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.110 }
		}
	}
	option = {
		name = rm.2.subject_10
		custom_tooltip = rm.2.subject_10.tooltip
		trigger = {
			check_variable = { which = rm_total_subjects value >= 10 }
			exists = event_target:subject_10
		}
		hidden_effect = {
			event_target:subject_10 = { save_event_target_as = subject_selected }
			country_event = { id = regentmaker.110 }
		}
	}
	option = {
		name = rm.2.back
		trigger = {
			check_variable = { which = rm_total_subjects value > 0 }
		}
		hidden_effect = {
			remove_country_flag = regentmaker_control_engaged
			country_event = { id = regentmaker.0 }
		}
	}
}

# "Regentmaker Ethics Selection"
country_event = {
	id = regentmaker.60
	title = regentmaker.60.name
	desc = regentmaker.60.desc
	# picture = GFX_evt_arguing_senate
	diplomatic = yes
	picture_event_data = {
		portrait = root.owner_main_species
		room = enclave_curator_room
	}
	custom_gui = sgm_ScrollbarEventWindow
	show_sound = event_conversation
	location = event_target:subject_selected
	# trigger = { }
	is_triggered_only = yes
	option = {
		name = "ethic_fanatic_authoritarian"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_fanatic_authoritarian }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_fanatic_authoritarian }
		}
	}
	option = {
		name = "ethic_authoritarian"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_authoritarian }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_authoritarian }
		}
	}
	option = {
		name = "ethic_fanatic_egalitarian"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_fanatic_egalitarian }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_fanatic_egalitarian }
		}
	}
	option = {
		name = "ethic_egalitarian"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_egalitarian }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_egalitarian }
		}
	}
	option = {
		name = "ethic_fanatic_xenophobe"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_fanatic_xenophobe }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_fanatic_xenophobe }
		}
	}
	option = {
		name = "ethic_xenophobe"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_xenophobe }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_xenophobe }
		}
	}
	option = {
		name = "ethic_fanatic_xenophile"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_fanatic_xenophile }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_fanatic_xenophile }
		}
	}
	option = {
		name = "ethic_xenophile"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_xenophile }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_xenophile }
		}
	}
	option = {
		name = "ethic_fanatic_militarist"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_fanatic_militarist }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_fanatic_militarist }
		}
	}
	option = {
		name = "ethic_militarist"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_militarist }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_militarist }
		}
	}
	option = {
		name = "ethic_fanatic_pacifist"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_fanatic_pacifist }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_fanatic_pacifist }
		}
	}
	option = {
		name = "ethic_pacifist"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_pacifist }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_pacifist }
		}
	}
	option = {
		name = "ethic_fanatic_spiritualist"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_fanatic_spiritualist }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_fanatic_spiritualist }
		}
	}
	option = {
		name = "ethic_spiritualist"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_spiritualist }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_spiritualist }
		}
	}
	option = {
		name = "ethic_fanatic_materialist"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_fanatic_materialist }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_fanatic_materialist }
		}
	}
	option = {
		name = "ethic_materialist"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_materialist }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_materialist }
		}
	}
	# (Mod) Ethics and Civics Classic
	option = {
		name = "ethic_fanatic_green"
		trigger = {
			has_global_flag = cultural_overhaul_active
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_fanatic_green }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_fanatic_green }
		}
	}
	option = {
		name = "ethic_green"
		trigger = {
			has_global_flag = cultural_overhaul_active
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_green }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_green }
		}
	}
	option = {
		name = "ethic_fanatic_industrial"
		trigger = {
			has_global_flag = cultural_overhaul_active
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_fanatic_industrial }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_fanatic_industrial }
		}
	}
	option = {
		name = "ethic_industrial"
		trigger = {
			has_global_flag = cultural_overhaul_active
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_industrial }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_industrial }
		}
	}
	option = {
		name = "ethic_fanatic_socialism"
		trigger = {
			has_global_flag = cultural_overhaul_active
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_fanatic_socialism }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_fanatic_socialism }
		}
	}
	option = {
		name = "ethic_socialism"
		trigger = {
			has_global_flag = cultural_overhaul_active
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_socialism }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_socialism }
		}
	}
	option = {
		name = "ethic_fanatic_capitalism"
		trigger = {
			has_global_flag = cultural_overhaul_active
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_fanatic_capitalism }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_fanatic_capitalism }
		}
	}
	option = {
		name = "ethic_capitalism"
		trigger = {
			has_global_flag = cultural_overhaul_active
			event_target:subject_selected = {
				NOT = { has_ethic = ethic_capitalism }
			}
		}
		hidden_effect = {
			event_target:subject_selected = { shift_ethic = ethic_capitalism }
		}
	}
	option = {
		name = rm.3.back # BACK
	}
	after = {
		hidden_effect = { # BACK
			if = { limit = { is_variable_set = rm_total_subjects }
				country_event = { id = regentmaker.502 }
			}
		}
	}
}

# Change Government (specific subject)
country_event = {
	id = regentmaker.70
	title = regentmaker.70.name
	desc = regentmaker.70.desc
	picture = GFX_evt_arguing_senate
	show_sound = event_conversation
	location = event_target:subject_selected
	is_triggered_only = yes
	option = {
		name = "auth_democratic"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_authority = auth_democratic }
			}
		}
		event_target:subject_selected = {
			clear_ethos = yes
			country_add_ethic = ethic_fanatic_egalitarian
			set_timed_country_flag = { flag = auth_democratic days = 2 }
			country_event = { id = regentmaker.30 }
			change_government = {
				authority = auth_democratic
				remove_invalid_civics = yes cooldown = no
				civics = {
					civic = random
					civic = random
					civic = random
				}
			}
		}
	}
	option = {
		name = "auth_strict_democratic"
		trigger = {
			has_global_flag = gf_moreauthorities_activated
			event_target:subject_selected = {
				NOT = { has_authority = auth_strict_democratic }
			}
		}
		event_target:subject_selected = {
			clear_ethos = yes
			country_add_ethic = ethic_fanatic_egalitarian
			change_government = {
				authority = auth_strict_democratic
				remove_invalid_civics = yes cooldown = no
				civics = {
					civic = random
					civic = random
					civic = random
				}
			}
			country_event = { id = regentmaker.30 }
		}
	}
	option = {
		name = "auth_direct_democratic"
		trigger = {
			has_global_flag = cultural_overhaul_active
			event_target:subject_selected = {
				NOT = { has_authority = auth_direct_democratic }
			}
		}
		event_target:subject_selected = {
			clear_ethos = yes
			country_add_ethic = ethic_fanatic_egalitarian
			change_government = {
				authority = auth_direct_democratic
				remove_invalid_civics = yes cooldown = no
				civics = {
					civic = random
					civic = random
					civic = random
				}
			}
			country_event = { id = regentmaker.30 }
		}
	}
	option = {
		name = "auth_democratic_dictatorship"
		trigger = {
			has_global_flag = gf_moreauthorities_activated
			event_target:subject_selected = {
				NOT = { has_authority = auth_democratic_dictatorship }
			}
		}
		event_target:subject_selected = {
			clear_ethos = yes
			country_add_ethic = ethic_authoritarian
			change_government = {
				authority = auth_democratic_dictatorship
				remove_invalid_civics = yes
				cooldown = no
				civics = {
					civic = random
					civic = random
					civic = random
				}
			}
			country_event = { id = regentmaker.30 }
		}
	}
	option = {
		name = "auth_oligarchic"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_authority = auth_oligarchic }
			}
		}
		event_target:subject_selected = {
			clear_ethos = yes
			country_add_ethic = ethic_authoritarian
			set_timed_country_flag = { flag = auth_oligarchic days = 2 }
			change_government = {
				authority = auth_oligarchic
				remove_invalid_civics = yes cooldown = no
				civics = {
					civic = random
					civic = random
					civic = random
				}
			}
			country_event = { id = regentmaker.30 }
		}
	}
	option = {
		name = "auth_dictatorial"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_authority = auth_dictatorial }
			}
		}
		event_target:subject_selected = {
			clear_ethos = yes
			country_add_ethic = ethic_fanatic_authoritarian
			set_timed_country_flag = { flag = auth_dictatorial days = 2 }
			change_government = {
				authority = auth_dictatorial
				remove_invalid_civics = yes cooldown = no
				civics = {
					civic = random
					civic = random
					civic = random
				}
			}
			country_event = { id = regentmaker.30 }
		}
	}
	option = {
		name = "auth_imperial"
		trigger = {
			event_target:subject_selected = {
				NOT = { has_authority = auth_imperial }
			}
		}
		event_target:subject_selected = {
			clear_ethos = yes
			country_add_ethic = ethic_fanatic_authoritarian
			set_timed_country_flag = { flag = auth_imperial days = 2 }
			change_government = {
				authority = auth_imperial
				remove_invalid_civics = yes cooldown = no
				civics = {
					civic = random
					civic = random
					civic = random
				}
			}
			country_event = { id = regentmaker.30 }
		}
	}
	option = {
		name = "auth_corporate"
		trigger = {
			event_target:subject_selected = { is_megacorp = no }
		}
		event_target:subject_selected = {
			clear_ethos = yes
			if = { limit = { has_global_flag = cultural_overhaul_active }
				shift_ethic = ethic_fanatic_capitalism
			}
			set_timed_country_flag = { flag = auth_corporate days = 2 }
			country_event = { id = regentmaker.30 }
			change_government = {
				authority = auth_corporate
				remove_invalid_civics = yes cooldown = no
				civics = {
					civic = random
					civic = random
					civic = random
				}
			}
		}
	}
	option = {
		name = "auth_corporate_imperial"
		trigger = {
			has_global_flag = gf_moreauthorities_activated
			event_target:subject_selected = {
				NOT = { has_authority = auth_corporate_imperial }
			}
		}
		event_target:subject_selected = {
			# clear_ethos = yes
			country_add_ethic = ethic_fanatic_authoritarian
			if = { limit = { has_global_flag = cultural_overhaul_active }
				shift_ethic = ethic_fanatic_capitalism
			}
			set_timed_country_flag = { flag = auth_corporate days = 2 }
			change_government = {
				authority = auth_corporate_imperial
				remove_invalid_civics = yes cooldown = no
				civics = {
					civic = random
					civic = random
					civic = random
				}
			}
			country_event = { id = regentmaker.30 }
		}
	}
	# (Mod) Ethics and Civics Classic
	option = {
		name = "auth_direct_democratic"
		trigger = {
			has_global_flag = cultural_overhaul_active
			event_target:subject_selected = {
				NOT = { has_authority = auth_direct_democratic }
			}
		}
		event_target:subject_selected = {
			clear_ethos = yes
			country_add_ethic = ethic_fanatic_egalitarian
			set_timed_country_flag = { flag = auth_direct_democratic days = 2 }
			country_event = { id = regentmaker.30 }
			change_government = {
				authority = auth_direct_democratic
				remove_invalid_civics = yes cooldown = no
				civics = {
					civic = random
					civic = random
					civic = random
				}
			}
		}
	}
	option = {
		name = rm.3.back # BACK
	}
	after = {
		hidden_effect = {
			country_event = { id = regentmaker.503 }
		}
	}
}

# Ethic Randomizer (mainly taken from action.30)
# Using gov authority country flag for weighting ethos.
country_event = {
	id = regentmaker.30
	hide_window = yes
	is_triggered_only = yes
	trigger = { merg_is_default_empire = yes }
	immediate = {
		switch = { trigger = has_country_flag
			auth_democratic		= { country_remove_ethic = ethic_fanatic_authoritarian	country_remove_ethic = ethic_authoritarian }
			auth_oligarchic		= { country_remove_ethic = ethic_fanatic_authoritarian	country_remove_ethic = ethic_fanatic_egalitarian }
			auth_dictatorial	= { country_remove_ethic = ethic_fanatic_egalitarian	country_remove_ethic = ethic_egalitarian }
			auth_imperial		= { country_remove_ethic = ethic_fanatic_egalitarian	country_remove_ethic = ethic_egalitarian }
			auth_corporate		= { country_remove_ethic = ethic_fanatic_authoritarian	country_remove_ethic = ethic_fanatic_egalitarian }
		}
		if = { limit = { is_gestalt = yes }
			country_remove_ethic = ethic_gestalt_consciousness
		}
		if = { limit = { num_ethics = 1 }
			random_list = {
				1 = { country_add_ethic = ethic_fanatic_materialist		modifier = { factor = 0 has_ethic = ethic_fanatic_materialist } }
				1 = { country_add_ethic = ethic_fanatic_spiritualist	modifier = { factor = 0 has_ethic = ethic_fanatic_spiritualist } }
				1 = { country_add_ethic = ethic_fanatic_militarist		modifier = { factor = 0 has_ethic = ethic_fanatic_militarist } }
				1 = { country_add_ethic = ethic_fanatic_pacifist		modifier = { factor = 0 has_ethic = ethic_fanatic_pacifist } }
				1 = { country_add_ethic = ethic_fanatic_xenophile		modifier = { factor = 0 has_ethic = ethic_fanatic_xenophile } }
				1 = { country_add_ethic = ethic_fanatic_xenophobe		modifier = { factor = 0 has_ethic = ethic_fanatic_xenophobe } }
				4 = { country_add_ethic = ethic_fanatic_egalitarian		modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_egalitarian has_country_flag = auth_dictatorial has_country_flag = auth_oligarchic has_country_flag = auth_imperial has_country_flag = auth_corporate } } }
				3 = { country_add_ethic = ethic_fanatic_authoritarian	modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_authoritarian has_country_flag = auth_democratic has_country_flag = auth_oligarchic has_country_flag = auth_corporate } } }
				# (Mod) Ethics and Civics Classic
				1 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_fanatic_green			} }	country_add_ethic = ethic_fanatic_green }
				1 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_fanatic_industrial	} }	country_add_ethic = ethic_fanatic_industrial }
				1 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_fanatic_socialism		} }	country_add_ethic = ethic_fanatic_socialism }
				1 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_fanatic_capitalism	} }	country_add_ethic = ethic_fanatic_capitalism }
			}
			random_list = {
				1 = { country_add_ethic = ethic_materialist		modifier = { factor = 0 OR = { has_ethic = ethic_materialist has_ethic = ethic_fanatic_spiritualist		has_ethic = ethic_fanatic_materialist } } }
				1 = { country_add_ethic = ethic_spiritualist	modifier = { factor = 0 OR = { has_ethic = ethic_spiritualist has_ethic = ethic_fanatic_materialist		has_ethic = ethic_fanatic_spiritualist } } }
				1 = { country_add_ethic = ethic_militarist		modifier = { factor = 0 OR = { has_ethic = ethic_militarist has_ethic = ethic_fanatic_pacifist			has_ethic = ethic_fanatic_militarist } } }
				1 = { country_add_ethic = ethic_pacifist		modifier = { factor = 0 OR = { has_ethic = ethic_pacifist has_ethic = ethic_fanatic_militarist			has_ethic = ethic_fanatic_pacifist } } }
				1 = { country_add_ethic = ethic_xenophile		modifier = { factor = 0 OR = { has_ethic = ethic_xenophile has_ethic = ethic_fanatic_xenophobe			has_ethic = ethic_fanatic_xenophile } } }
				1 = { country_add_ethic = ethic_xenophobe		modifier = { factor = 0 OR = { has_ethic = ethic_xenophobe has_ethic = ethic_fanatic_xenophile			has_ethic = ethic_fanatic_xenophobe } } }
				3 = { country_add_ethic = ethic_egalitarian		modifier = { factor = 0 OR = { has_ethic = ethic_egalitarian has_ethic = ethic_fanatic_authoritarian	has_ethic = ethic_fanatic_egalitarian has_country_flag = auth_dictatorial has_country_flag = auth_imperial } } }
				2 = { country_add_ethic = ethic_authoritarian	modifier = { factor = 0 OR = { has_ethic = ethic_authoritarian has_ethic = ethic_fanatic_egalitarian	has_ethic = ethic_fanatic_authoritarian has_country_flag = auth_democratic } } }
				# (Mod) Ethics and Civics Classic
				1 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_green			has_ethic = ethic_fanatic_industrial	has_ethic = ethic_fanatic_green } }		 country_add_ethic = ethic_green		}
				1 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_industrial	has_ethic = ethic_fanatic_green			has_ethic = ethic_fanatic_industrial } } country_add_ethic = ethic_industrial	}
				1 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_socialism		has_ethic = ethic_fanatic_capitalism	has_ethic = ethic_fanatic_socialism } }	 country_add_ethic = ethic_socialism	}
				1 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_capitalism	has_ethic = ethic_fanatic_socialism		has_ethic = ethic_fanatic_capitalism } } country_add_ethic = ethic_capitalism	}
			}
		} else_if = { limit = { num_ethics > 0 }
			random_list = {
				1 = { shift_ethic = ethic_fanatic_materialist	modifier = { factor = 0 has_ethic = ethic_fanatic_materialist } }
				1 = { shift_ethic = ethic_fanatic_spiritualist	modifier = { factor = 0 has_ethic = ethic_fanatic_spiritualist } }
				1 = { shift_ethic = ethic_fanatic_militarist	modifier = { factor = 0 has_ethic = ethic_fanatic_militarist } }
				1 = { shift_ethic = ethic_fanatic_pacifist		modifier = { factor = 0 has_ethic = ethic_fanatic_pacifist } }
				1 = { shift_ethic = ethic_fanatic_xenophile		modifier = { factor = 0 has_ethic = ethic_fanatic_xenophile } }
				1 = { shift_ethic = ethic_fanatic_xenophobe		modifier = { factor = 0 has_ethic = ethic_fanatic_xenophobe } }
				4 = { shift_ethic = ethic_fanatic_egalitarian	modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_egalitarian has_country_flag = auth_dictatorial has_country_flag = auth_oligarchic has_country_flag = auth_imperial has_country_flag = auth_corporate } } }
				3 = { shift_ethic = ethic_fanatic_authoritarian	modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_authoritarian has_country_flag = auth_democratic has_country_flag = auth_oligarchic has_country_flag = auth_corporate } } }
				# (Mod) Ethics and Civics Classic
				1 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_fanatic_green } } 		country_add_ethic = ethic_fanatic_green	 }
				1 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_fanatic_industrial } }	country_add_ethic = ethic_fanatic_industrial }
				1 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_fanatic_socialism } }		country_add_ethic = ethic_fanatic_socialism }
				1 = { modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_fanatic_capitalism } }	country_add_ethic = ethic_fanatic_capitalism }
			}
			random_list = {
				1 = { shift_ethic = ethic_materialist	modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_materialist	has_ethic = ethic_fanatic_spiritualist	has_ethic = ethic_materialist } } }
				1 = { shift_ethic = ethic_spiritualist	modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_spiritualist	has_ethic = ethic_fanatic_materialist	has_ethic = ethic_spiritualist } } }
				1 = { shift_ethic = ethic_militarist	modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_militarist		has_ethic = ethic_fanatic_pacifist		has_ethic = ethic_militarist } } }
				1 = { shift_ethic = ethic_pacifist		modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_pacifist		has_ethic = ethic_fanatic_militarist	has_ethic = ethic_pacifist } } }
				1 = { shift_ethic = ethic_xenophile		modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_xenophile		has_ethic = ethic_fanatic_xenophobe		has_ethic = ethic_xenophile } } }
				1 = { shift_ethic = ethic_xenophobe		modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_xenophobe		has_ethic = ethic_fanatic_xenophile		has_ethic = ethic_xenophobe } } }
				3 = { shift_ethic = ethic_egalitarian	modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_egalitarian	has_ethic = ethic_fanatic_authoritarian	has_ethic = ethic_egalitarian has_country_flag = auth_dictatorial has_country_flag = auth_imperial } } }
				2 = { shift_ethic = ethic_authoritarian	modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_authoritarian	has_ethic = ethic_fanatic_egalitarian	has_ethic = ethic_authoritarian has_country_flag = auth_democratic } } }
				# (Mod) Ethics and Civics Classic
				1 = { shift_ethic = ethic_green			modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_green			has_ethic = ethic_fanatic_industrial	has_ethic = ethic_fanatic_green } } }
				1 = { shift_ethic = ethic_industrial	modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_industrial		has_ethic = ethic_fanatic_green			has_ethic = ethic_fanatic_industrial } } }
				1 = { shift_ethic = ethic_socialism		modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_socialism		has_ethic = ethic_fanatic_authoritarian	has_ethic = ethic_fanatic_socialism } } }
				1 = { shift_ethic = ethic_capitalism	modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_authoritarian	has_ethic = ethic_fanatic_socialism		has_ethic = ethic_fanatic_authoritarian } } }
			}
		} else = {
			random_list = {
				70 = { # Fanatic and non-fanatic
					random_list = {
						1 = { country_add_ethic = ethic_fanatic_materialist }
						1 = { country_add_ethic = ethic_fanatic_spiritualist }
						1 = { country_add_ethic = ethic_fanatic_militarist }
						1 = { country_add_ethic = ethic_fanatic_pacifist }
						1 = { country_add_ethic = ethic_fanatic_xenophile }
						1 = { country_add_ethic = ethic_fanatic_xenophobe }
						4 = { country_add_ethic = ethic_fanatic_egalitarian modifier = { factor = 0 OR = { has_country_flag = auth_dictatorial has_country_flag = auth_oligarchic has_country_flag = auth_imperial has_country_flag = auth_corporate } } }
						3 = { country_add_ethic = ethic_fanatic_authoritarian modifier = { factor = 0 OR = { has_country_flag = auth_democratic has_country_flag = auth_oligarchic has_country_flag = auth_corporate } } }
						# (Mod) Ethics and Civics Classic
						1 = { modifier = { factor = 0 NOT = { has_global_flag = cultural_overhaul_active } } country_add_ethic = ethic_fanatic_green }
						1 = { modifier = { factor = 0 NOT = { has_global_flag = cultural_overhaul_active } } country_add_ethic = ethic_fanatic_industrial }
						1 = { modifier = { factor = 0 NOT = { has_global_flag = cultural_overhaul_active } } country_add_ethic = ethic_fanatic_socialism }
						1 = { modifier = { factor = 0 NOT = { has_global_flag = cultural_overhaul_active } } country_add_ethic = ethic_fanatic_authoritarian }
					}
					random_list = {
						1 = { country_add_ethic = ethic_materialist		modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_materialist	has_ethic = ethic_fanatic_spiritualist } } }
						1 = { country_add_ethic = ethic_spiritualist	modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_spiritualist	has_ethic = ethic_fanatic_materialist } } }
						1 = { country_add_ethic = ethic_militarist		modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_militarist		has_ethic = ethic_fanatic_pacifist } } }
						1 = { country_add_ethic = ethic_pacifist		modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_pacifist		has_ethic = ethic_fanatic_militarist } } }
						1 = { country_add_ethic = ethic_xenophile		modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_xenophile		has_ethic = ethic_fanatic_xenophobe } } }
						1 = { country_add_ethic = ethic_xenophobe		modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_xenophobe		has_ethic = ethic_fanatic_xenophile } } }
						3 = { country_add_ethic = ethic_egalitarian		modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_egalitarian	has_ethic = ethic_fanatic_authoritarian has_country_flag = auth_dictatorial has_country_flag = auth_imperial } } }
						2 = { country_add_ethic = ethic_authoritarian	modifier = { factor = 0 OR = { has_ethic = ethic_fanatic_authoritarian	has_ethic = ethic_fanatic_egalitarian has_country_flag = auth_democratic } } }
						# (Mod) Ethics and Civics Classic
						1 = { country_add_ethic = ethic_green			modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_fanatic_green			has_ethic = ethic_fanatic_industrial } } }
						1 = { country_add_ethic = ethic_industrial		modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_fanatic_industrial		has_ethic = ethic_fanatic_green } } }
						1 = { country_add_ethic = ethic_socialism		modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_fanatic_socialism		has_ethic = ethic_fanatic_authoritarian } } }
						1 = { country_add_ethic = ethic_capitalism		modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_fanatic_authoritarian	has_ethic = ethic_fanatic_socialism } } }
					}
				}
				30 = { # Only non-fanatic
					random_list = {
						1 = { country_add_ethic = ethic_materialist }
						1 = { country_add_ethic = ethic_spiritualist }
						1 = { country_add_ethic = ethic_militarist }
						1 = { country_add_ethic = ethic_pacifist }
						1 = { country_add_ethic = ethic_xenophile }
						1 = { country_add_ethic = ethic_xenophobe }
						3 = { country_add_ethic = ethic_egalitarian modifier = { factor = 0 OR = { has_country_flag = auth_dictatorial has_country_flag = auth_imperial } } }
						2 = { country_add_ethic = ethic_authoritarian modifier = { factor = 0 has_country_flag = auth_democratic } }
						# (Mod) Ethics and Civics Classic
						1 = { modifier = { factor = 0 NOT = { has_global_flag = cultural_overhaul_active } } country_add_ethic = ethic_green }
						1 = { modifier = { factor = 0 NOT = { has_global_flag = cultural_overhaul_active } } country_add_ethic = ethic_industrial }
						1 = { modifier = { factor = 0 NOT = { has_global_flag = cultural_overhaul_active } } country_add_ethic = ethic_socialism }
						1 = { modifier = { factor = 0 NOT = { has_global_flag = cultural_overhaul_active } } country_add_ethic = ethic_capitalism }
					}
					random_list = {
						1 = { country_add_ethic = ethic_materialist		modifier = { factor = 0 OR = { has_ethic = ethic_materialist	has_ethic = ethic_spiritualist } } }
						1 = { country_add_ethic = ethic_spiritualist	modifier = { factor = 0 OR = { has_ethic = ethic_spiritualist	has_ethic = ethic_materialist } } }
						1 = { country_add_ethic = ethic_militarist		modifier = { factor = 0 OR = { has_ethic = ethic_militarist		has_ethic = ethic_pacifist } } }
						1 = { country_add_ethic = ethic_pacifist		modifier = { factor = 0 OR = { has_ethic = ethic_pacifist		has_ethic = ethic_militarist } } }
						1 = { country_add_ethic = ethic_xenophile		modifier = { factor = 0 OR = { has_ethic = ethic_xenophile		has_ethic = ethic_xenophobe } } }
						1 = { country_add_ethic = ethic_xenophobe		modifier = { factor = 0 OR = { has_ethic = ethic_xenophobe		has_ethic = ethic_xenophile } } }
						3 = { country_add_ethic = ethic_egalitarian		modifier = { factor = 0 OR = { has_ethic = ethic_egalitarian	has_ethic = ethic_authoritarian has_country_flag = auth_dictatorial has_country_flag = auth_imperial } } }
						2 = { country_add_ethic = ethic_authoritarian	modifier = { factor = 0 OR = { has_ethic = ethic_authoritarian	has_ethic = ethic_egalitarian has_country_flag = auth_democratic } } }
						# (Mod) Ethics and Civics Classic
						1 = { country_add_ethic = ethic_green			modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_green		has_ethic = ethic_industrial } } }
						1 = { country_add_ethic = ethic_industrial		modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_industrial	has_ethic = ethic_green } } }
						1 = { country_add_ethic = ethic_socialism		modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_socialism	has_ethic = ethic_capitalism } } }
						1 = { country_add_ethic = ethic_capitalism		modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_capitalism	has_ethic = ethic_socialism } } }
					}
					random_list = {
						1 = { country_add_ethic = ethic_materialist		modifier = { factor = 0 OR = { has_ethic = ethic_materialist	has_ethic = ethic_spiritualist } } }
						1 = { country_add_ethic = ethic_spiritualist	modifier = { factor = 0 OR = { has_ethic = ethic_spiritualist	has_ethic = ethic_materialist } } }
						1 = { country_add_ethic = ethic_militarist		modifier = { factor = 0 OR = { has_ethic = ethic_militarist		has_ethic = ethic_pacifist } } }
						1 = { country_add_ethic = ethic_pacifist		modifier = { factor = 0 OR = { has_ethic = ethic_pacifist		has_ethic = ethic_militarist } } }
						1 = { country_add_ethic = ethic_xenophile		modifier = { factor = 0 OR = { has_ethic = ethic_xenophile		has_ethic = ethic_xenophobe } } }
						1 = { country_add_ethic = ethic_xenophobe		modifier = { factor = 0 OR = { has_ethic = ethic_xenophobe		has_ethic = ethic_xenophile } } }
						3 = { country_add_ethic = ethic_egalitarian		modifier = { factor = 0 OR = { has_ethic = ethic_egalitarian	has_ethic = ethic_authoritarian has_country_flag = auth_dictatorial has_country_flag = auth_imperial } } }
						2 = { country_add_ethic = ethic_authoritarian	modifier = { factor = 0 OR = { has_ethic = ethic_authoritarian	has_ethic = ethic_egalitarian has_country_flag = auth_democratic } } }
						# (Mod) Ethics and Civics Classic
						1 = { country_add_ethic = ethic_green		modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_green			has_ethic = ethic_industrial } } }
						1 = { country_add_ethic = ethic_industrial	modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_industrial	has_ethic = ethic_green } } }
						1 = { country_add_ethic = ethic_socialism	modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_socialism		has_ethic = ethic_capitalism } } }
						1 = { country_add_ethic = ethic_capitalism	modifier = { factor = 0 OR = { NOT = { has_global_flag = cultural_overhaul_active } has_ethic = ethic_capitalism	has_ethic = ethic_socialism } } }
					}
				}
			}
		}
	}
}

# create_starting_fleets (on release subject, on .215 decentralisation, on .7 change subjct type on wg)
# Root = last_created_country/subject country
# From = planet = capital_scope
country_event = {
	id = regentmaker.209
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_scope_valid = yes
		exists = event_target:owning_empire
		event_target:owning_empire = {
			is_scope_valid = yes
			is_scope_type = country
			NOT = { is_same_empire = root }
		}
	}
	immediate = {
		capital_scope = {
			if = { limit = { NOT = { has_modifier =  "pm_perfect_vassal_colony" } }
				add_modifier = { modifier = "pm_perfect_vassal_colony" }
			}
		}
		if = { limit = { NOT = { has_modifier =  perfect_vassal_boost } }
			add_modifier = { modifier = perfect_vassal_boost }
		}

		add_resource = {
			minerals = 15000
			energy = 15000
			food = 5000
			unity = 15000
			influence = 500
			alloys = 4000
		}
		add_500_unity_per_year_passed = yes
		create_starting_leaders = yes
		while = { count = 2 create_leader = { class = scientist	species = event_target:vassal_species name = random skill = 3 } }
		while = { count = 1 create_leader = { class = admiral	species = event_target:vassal_species name = random skill = 3 } }
		while = { count = 1 create_leader = { class = governor	species = event_target:vassal_species name = random skill = 3 } }

		copy_techs_from = {
			target =  event_target:owning_empire
			except = { # Horizon Signal
				tech_akx_worm_1
				tech_akx_worm_2
				tech_akx_worm_3
			}
		}

		every_planet_within_border = {
			limit = {
				has_planet_flag = planet_marked_for_handover
				OR = {
					has_owner = no
					is_owned_by = event_target:owning_empire
					is_controlled_by = event_target:owning_empire
				}
			}
			planet_event = { id = regentmaker.9 days = -1 }
		}

		## Civil
		every_owned_planet = {
			limit = {
				OR = { is_colony = yes is_under_colonization = yes }
				has_ground_combat = no
				is_capital = no
			}
			solar_system = {
				random_fleet_in_system = {
					limit = {
						exists = owner
						is_owned_by = event_target:owning_empire
						is_civilian = yes
					}
					# log="create_starting_fleets [From.Owner.GetName]"
					set_owner = prevprevprev
					if = { limit = { is_ship_class = shipclass_science_ship exists = leader }
						leader = { set_owner = prevprevprevprev }
						assign_leader = leader
					} else_if = { limit = { is_ship_class = shipclass_transport }
						# TODO: replace scope workaround for ship.army bug !?
						# Give armies (general)
						event_target:owning_empire = {
							every_owned_army = {
								limit = {
									exists = fleet
									NOT = { is_owned_by = prev }
									# fleet = { is_same_value = prevprevprev }
								}
								set_owner = fleet.owner
							}
						}
						# Set leader
						if = { limit = { exists = leader }
							prevprevprev = {
								random_owned_army = {
									limit = {
										exists = fleet
										# NOT = { exists = leader }
									}
									assign_leader = prevprev.leader
								}
							}
							leader = { set_owner = prevprevprevprev }
						}
					}
				}
				every_system_planet = {
					limit = {
						is_star = no
						is_asteroid = no
						has_owner = yes
						NOR = {
							is_planet = prevprev
							is_owned_by = prevprevprev
						}
						OR = {
							is_owned_by = event_target:owning_empire
							is_controlled_by = event_target:owning_empire
						}
					}
					if = { limit = { is_owned_by = event_target:owning_empire }
						set_owner = prevprevprev
					} else_if = { limit = { is_controlled_by = event_target:owning_empire }
						set_controller = prevprevprev
					}
				}
			}
		}
		## Military
		if = {
			limit = {
				event_target:owning_empire = { used_naval_capacity_percent > 1.2 }
				used_naval_capacity_percent < 0.6
			}
			random_system_within_border = {
				limit = {
					any_fleet_in_system = {
						exists = owner
						is_ship_class = shipclass_military
						fleet_size > 3
						is_owned_by = event_target:owning_empire
					}
				}
				random_fleet_in_system = {
					limit = {
						exists = owner
						is_ship_class = shipclass_military
						fleet_size > 3
						is_owned_by = event_target:owning_empire
					}
					set_owner = prevprev
					if = { limit = { exists = leader }
						leader = { set_owner = prevprevprev }
						assign_leader = leader
					}
				}
			}
		} else_if = {
			limit = {
				event_target:owning_empire = { used_naval_capacity_percent > 0.6 }
				used_naval_capacity_percent < 0.5
			}
			random_system_within_border = {
				limit = {
					any_fleet_in_system = {
						exists = owner
						is_ship_class = shipclass_military
						fleet_size > 3
						is_owned_by = event_target:owning_empire
					}
				}
				random_fleet_in_system = {
					limit = {
						exists = owner
						is_ship_class = shipclass_military
						fleet_size > 3
						is_owned_by = event_target:owning_empire
					}
					set_owner = prevprev
					if = { limit = { exists = leader }
						leader = { set_owner = prevprevprev }
						assign_leader = leader
					}
				}
			}
		}
		if = {
			limit = {
				used_naval_capacity_percent < 0.2
				fleet_power < 5000
				event_target:owning_empire = { used_naval_capacity_percent > 1.2 }
			}
			random_system_within_border = {
				limit = {
					any_fleet_in_system = {
						exists = owner
						is_ship_class = shipclass_military
						is_owned_by = event_target:owning_empire
					}
				}
				random_fleet_in_system = {
					limit = {
						exists = owner
						is_ship_class = shipclass_military
						is_owned_by = event_target:owning_empire
					}
					set_owner = prevprev
					if = { limit = { exists = leader }
						leader = { set_owner = prevprevprev }
						assign_leader = leader
					}
				}
			}
			if = {
				limit = {
					used_naval_capacity_percent < 0.2
					fleet_power < 8000
					event_target:owning_empire = { used_naval_capacity_percent > 1.1 }
				}
				event_target:owning_empire = {
					random_owned_fleet = {
						limit = {
							is_ship_class = shipclass_military
							is_mobile = yes
							fleet_power < 32000
						}
						weights = {
							base = 1
							modifier = { add = 1 fleet_power < 8000 }
							modifier = { add = 1 NOT = { exists = leader } }
						}
						set_owner = prevprev
						if = { limit = { exists = leader }
							leader = { set_owner = prevprevprev }
							assign_leader = leader
						}
					}
				}
			}
		}
		# add_modifier = { modifier = "midas_stigma" years = 5 } # triggered_opinion_federation_midas
		event_target:owning_empire = {
			every_subject = {
				limit = {
					merg_is_default_empire = yes
					NOT = { is_same_empire = root }
				}
				if = { limit = { is_perfect_vassal = yes }
					add_opinion_modifier = { who = root modifier = triggered_opinion_diplo_stance_supremacy }
					add_opinion_modifier = { who = root modifier = opinion_discarded }
				}
				add_opinion_modifier = { who = root modifier = opinion_hostile_first_contact }
			}
		}
		country_event = { id = game_start.6 days = 6	random = 2 }	# advanced_empire
		country_event = { id = game_start.8 days = 9	random = 3 }	# +tech +resources
		country_event = { id = game_start.9 days = 12	random = 4 }	# empire_init_create_ships
		from = {
			planet_event = { id = game_start.20 days = 80	random = 30 } # Remove blockers on capital
			planet_event = { id = game_start.21 days = 120	random = 40 } # Upgrade colony shelter on additional colonies.
			planet_event = { id = game_start.22 days = 180	random = 60 } # Set up additional buildings (mines, farms, power plants)
			planet_event = { id = game_start.23 days = 360	random = 90 } # Add additional pops
			solar_system = {
				if = { limit = { exists = starbase }
					starbase = {
						if = { limit = { has_starbase_size < starbase_starport }
							set_starbase_size = starbase_starport
							set_starbase_module = { slot = 1 module = shipyard }
							set_starbase_module = { slot = 2 module = trading_hub }
						}
					}
				}
				if = {
					limit = {
						event_target:owning_empire = { has_technology = tech_starbase_4 }
						NAND = {
							exists = starbase
							starbase = { has_starbase_size > starbase_starfortress }
						}
					}
					create_starbase = {
						size = starbase_starfortress
						owner = prevprev
						module = shipyard
						module = missile_battery
						building = defense_grid
					}
				} else_if = {
					limit = {
						NOT = { event_target:owning_empire = { has_technology = tech_starbase_5 } }
						NAND = {
							exists = starbase
							starbase = { has_starbase_size > starbase_starhold }
						}
					}
					create_starbase = {
						size = starbase_starhold
						owner = prevprev
						module = shipyard
						module = missile_battery
						building = defense_grid
					}
				}
			}
		}

		# Establish Communications
		if = { limit = { NOT = { has_communications = event_target:owning_empire } }
			establish_communications_no_message = event_target:owning_empire
		}
		every_country = {
			limit = {
				has_communications = event_target:owning_empire
				NOT = { has_communications = root }
			}
			if = {
				limit = {
					NOT = { has_established_contact = root }
					can_have_first_contact_site_with = root
				}
				root = {
					establish_contact = { who = prev }
					establish_communications_no_message = prev
				}
			}
			# establish_contact = { who = prev location = prev.capital_scope }
			establish_communications_no_message = root
		}
		every_first_contact = { finish_first_contact = yes }
	}
}
