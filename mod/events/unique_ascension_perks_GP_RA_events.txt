namespace = UniqueAscensionPerksEvents
######################################
#									 #
#########  Genius Pregnancy  #########
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.41
	title = "ap_genius_cloning"
	desc = "ap_genius_cloning_desc"
	show_sound = event_laboratory_sound
	picture = GFX_evt_genious_pregnacy
	location = capital_scope
	is_triggered_only = yes
	option = { name = EXCELLENT give_tech_option_or_progress_effect = { TECH = tech_breeding_facility } }
}
# on_pop_grown (legacy v3.3)
planet_event = {
	id = UniqueAscensionPerksEvents.42
	hide_window = yes
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	trigger = { exists = owner owner = { has_ascension_perk = ap_genius_cloning } OR = { is_capital = yes colony_age > 1 } }
	immediate = { random = { chance = 25 create_pop = { species = fromfrom } } }
}
# on_monthly_pulse_country (similar to ap_robot_command)
country_event = {
	id = UniqueAscensionPerksEvents.3043
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 1 }
	# pre_triggers = { has_owner = yes }
	trigger = {
		has_ascension_perk = ap_genius_cloning
		# any_owned_planet = { is_colony = yes has_building = building_breeding_facility }
	}
	immediate = {
		# Cycle: Removing breeding_facility deposits/buildings
		random_owned_planet  = {
			limit = {
				is_colony = yes
				is_colonizable = no
				OR = {
					has_deposit = yes
					AND = { has_building = yes has_building = building_breeding_facility }
				}
				OR = {
					has_deposit = d_breeding_facility_1
					has_deposit = d_breeding_facility_2
					has_deposit = d_breeding_facility_3
					has_deposit = d_breeding_facility_4
					has_deposit = d_breeding_facility_5
				}
			}
			planet_event = { id = UniqueAscensionPerksEvents.3049 days = 10 random = 10 }
		}
		random_planet_within_border  = {
			limit = {
				colonizable_planet = yes
				OR = {
					has_deposit = yes
					AND = { has_building = yes has_building = building_breeding_facility }
				}
				OR = {
					has_deposit = d_breeding_facility_1
					has_deposit = d_breeding_facility_2
					has_deposit = d_breeding_facility_3
					has_deposit = d_breeding_facility_4
					has_deposit = d_breeding_facility_5
				}
			}
			planet_event = { id = UniqueAscensionPerksEvents.3049 days = 10 random = 10 }
		}

		if = { limit = { has_country_flag = ap_genius_cloning_cycle any_owned_planet = { is_colony = yes has_building = building_breeding_facility } }
			remove_country_flag = ap_genius_cloning_cycle # all 2 months
			every_owned_planet = {
				limit = { is_colony = yes has_building = building_breeding_facility }
				set_variable = { which = building_breeding_facility value = value:num_active_buildings|BUILDING|building_breeding_facility| }
				if = { limit = { check_variable = { which = building_breeding_facility value > 0 } }
					random = { chance = 80 planet_event = { id = UniqueAscensionPerksEvents.3044 days = 5 random = 5 } }
					if = { limit = { check_variable = { which = building_breeding_facility value > 1 } }
						random = { chance = 75 planet_event = { id = UniqueAscensionPerksEvents.3045 days = 5 random = 5 } }
						if = { limit = { check_variable = { which = building_breeding_facility value > 2 } }
							random = { chance = 70 planet_event = { id = UniqueAscensionPerksEvents.3046 days = 5 random = 5 } }
							if = { limit = { check_variable = { which = building_breeding_facility value > 3 } }
								random = { chance = 65 planet_event = { id = UniqueAscensionPerksEvents.3047 days = 5 random = 5 } }
								if = { limit = { check_variable = { which = building_breeding_facility value > 4 } }
									random = { chance = 60 planet_event = { id = UniqueAscensionPerksEvents.3048 days = 5 random = 5 } }
								}
							}
						}
					}
				}
			}
		} else = {
			set_country_flag = ap_genius_cloning_cycle
		}
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.3044
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { check_variable = { which = d_breeding_facility_1 value < 24 } }
			change_variable = { which = d_breeding_facility_1 value = 1 }
			add_deposit = d_breeding_facility_1
		} else = {
			every_deposit = { limit = { is_deposit_type = d_breeding_facility_1 } remove_deposit = yes }
			clear_variable = d_breeding_facility_1
			random_owned_pop = {
				limit = { is_organic_species = yes has_population_control = { value = no country = prev.owner } is_being_purged = no is_being_assimilated = no }
				# weights = {
				# 	base = 10
				# 	modifier = { add = 10 is_same_species = root.owner_species }
				# 	modifier = { add = -5 is_enslaved = yes }
				# }
				prev = {
					create_pop = { species = prev }
					if = { limit = { is_same_species = root.owner_species }
						random = { chance = 25 create_pop = { species = prev } }
					}
				}
			}
		}
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.3045
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { check_variable = { which = d_breeding_facility_2 value < 24 } }
			change_variable = { which = d_breeding_facility_2 value = 1 }
			add_deposit = d_breeding_facility_2
		} else = {
			every_deposit = { limit = { is_deposit_type = d_breeding_facility_2 } remove_deposit = yes }
			clear_variable = d_breeding_facility_2
			random_owned_pop = {
				limit = { is_organic_species = yes has_population_control = { value = no country = prev.owner } is_being_purged = no is_being_assimilated = no }
				# 	base = 10
				# 	modifier = { add = 10 is_same_species = root.owner_species }
				# 	modifier = { add = -5 is_enslaved = yes }
				# }
				prev = {
					create_pop = { species = prev }
					if = { limit = { is_same_species = root.owner_species }
						random = { chance = 25 create_pop = { species = prev } }
					}
				}
			}
		}
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.3046
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { check_variable = { which = d_breeding_facility_3 value < 24 } }
			change_variable = { which = d_breeding_facility_3 value = 1 }
			add_deposit = d_breeding_facility_3
		} else = {
			every_deposit = { limit = { is_deposit_type = d_breeding_facility_3 } remove_deposit = yes }
			clear_variable = d_breeding_facility_3
			random_owned_pop = {
				limit = { is_organic_species = yes has_population_control = { value = no country = prev.owner } is_being_purged = no is_being_assimilated = no }
				# 	base = 10
				# 	modifier = { add = 10 is_same_species = root.owner_species }
				# 	modifier = { add = -5 is_enslaved = yes }
				# }
				prev = {
					create_pop = { species = prev }
					if = { limit = { is_same_species = root.owner_species }
						random = { chance = 25 create_pop = { species = prev } }
					}
				}
			}
		}
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.3047
	hide_window = yes
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	immediate = {
		if = {
			limit = { check_variable = { which = d_breeding_facility_4 value < 24 } }
			change_variable = { which = d_breeding_facility_4 value = 1 }
			add_deposit = d_breeding_facility_4
		} else = {
			every_deposit = { limit = { is_deposit_type = d_breeding_facility_4 } remove_deposit = yes }
			clear_variable = d_breeding_facility_4
			random_owned_pop = {
				limit = { is_organic_species = yes has_population_control = { value = no country = prev.owner } is_being_purged = no is_being_assimilated = no }
				# 	base = 10
				# 	modifier = { add = 10 is_same_species = root.owner_species }
				# 	modifier = { add = -5 is_enslaved = yes }
				# }
				prev = {
					create_pop = { species = prev }
					if = { limit = { is_same_species = root.owner_species }
						random = { chance = 25 create_pop = { species = prev } }
					}
				}
			}
		}
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.3048
	hide_window = yes
	is_triggered_only = yes
	pre_triggers = { has_owner = yes }
	immediate = {
		if = {
			limit = { check_variable = { which = d_breeding_facility_5 value < 24 } }
			change_variable = { which = d_breeding_facility_5 value = 1 }
			add_deposit = d_breeding_facility_5
		} else = {
			every_deposit = { limit = { is_deposit_type = d_breeding_facility_5 } remove_deposit = yes }
			clear_variable = d_breeding_facility_5
			random_owned_pop = {
				limit = { is_organic_species = yes has_population_control = { value = no country = prev.owner } is_being_purged = no is_being_assimilated = no }
				# 	base = 10
				# 	modifier = { add = 10 is_same_species = root.owner_species }
				# 	modifier = { add = -5 is_enslaved = yes }
				# }
				prev = {
					create_pop = { species = prev }
					if = { limit = { is_same_species = root.owner_species }
						random = { chance = 25 create_pop = { species = prev } }
					}
				}
			}
		}
	}
}

# Cycle: Removing breeding_facility deposits/buildings
# From UniqueAscensionPerksEvents.3043 (MTTH)
planet_event = {
	id = UniqueAscensionPerksEvents.3049
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 6 }
	# pre_triggers = { has_owner = yes }
	trigger = {
		OR = {
			has_building = yes
			has_deposit = yes
		}
		OR = {
			has_deposit = d_breeding_facility_1
			has_deposit = d_breeding_facility_2
			has_deposit = d_breeding_facility_3
			has_deposit = d_breeding_facility_4
			has_deposit = d_breeding_facility_5
			has_building = building_breeding_facility
		}
	}
	immediate = {
		if = {
			limit = {
				has_building = building_breeding_facility
				NAND = {
					exists = owner
					owner = { has_ascension_perk = ap_genius_cloning }
				}
			}
			while = { limit = { has_building = building_breeding_facility } remove_building = building_breeding_facility }
		}
		set_variable = { which = building_breeding_facility value = value:num_active_buildings|BUILDING|building_breeding_facility| }
		if = { limit = { check_variable = { which = building_breeding_facility value < 5 } has_deposit = yes }
			if = {
				limit = { has_deposit = d_breeding_facility_5 }
				every_deposit = { limit = { is_deposit_type = d_breeding_facility_5 } remove_deposit = yes }
				clear_variable = d_breeding_facility_5
			}
			if = { limit = { check_variable = { which = building_breeding_facility value < 4 } has_deposit = yes }
				if = {
					limit = { has_deposit = d_breeding_facility_4 }
					every_deposit = { limit = { is_deposit_type = d_breeding_facility_4 } remove_deposit = yes }
					clear_variable = d_breeding_facility_4
				}
				if = { limit = { check_variable = { which = building_breeding_facility value < 3 } has_deposit = yes }
					if = {
						limit = { has_deposit = d_breeding_facility_3 }
						every_deposit = { limit = { is_deposit_type = d_breeding_facility_3 } remove_deposit = yes }
						clear_variable = d_breeding_facility_3
					}
					if = { limit = { check_variable = { which = building_breeding_facility value < 2 } has_deposit = yes }
						if = {
							limit = { has_deposit = d_breeding_facility_2 }
							every_deposit = { limit = { is_deposit_type = d_breeding_facility_2 } remove_deposit = yes }
							clear_variable = d_breeding_facility_2
						}
						if = {
							limit = { check_variable = { which = building_breeding_facility value < 1 } has_deposit = d_breeding_facility_1 }
							every_deposit = { limit = { is_deposit_type = d_breeding_facility_1 } remove_deposit = yes }
							clear_variable = d_breeding_facility_1
						}
					}
				}
			}
		}
		clear_variable = building_breeding_facility
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.3050
	title = "ap_genius_cloning"
	desc = "UniqueAscensionPerksEvents.3050.Desc"
	show_sound = event_laboratory_sound
	picture = GFX_evt_genious_pregnacy
	location = root
	is_triggered_only = yes
	option = { name = EXCELLENT }
}


######################################
#									 #
########  Robotic Assemblers  ########
####  (Machine Production Focus)  ####
#									 #
######################################

country_event = {
	id = UniqueAscensionPerksEvents.61
	title = "ap_robot_command"
	desc = "ap_robot_command_desc"
	show_sound = event_administrative_work
	picture = GFX_evt_robot_command
	location = capital_scope
	is_triggered_only = yes
	option = {
		name = EXCELLENT
		if = { limit = { is_gestalt = no }
			give_tech_option_or_progress_effect = { TECH = tech_droid_workers }
			add_research_option = tech_synthetic_workers
		} else = { add_monthly_resource_mult = { resource = engineering_research value = 1 min = 20000 max = 20000 } }
		give_tech_option_or_progress_effect = { TECH = tech_unit_assembler }
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.62
	title = "ap_robot_command"
	desc = "UniqueAscensionPerksEvents.62.Desc"
	show_sound = event_ai_started
	picture = GFX_evt_robot_command
	location = root
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

# on_monthly_pulse_country (similar to ap_genius_cloning)
country_event = {
	id = UniqueAscensionPerksEvents.3063
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 1 }
	# pre_triggers = { has_owner = yes }
	trigger = {
		has_ascension_perk = ap_robot_command
		# any_owned_planet = { has_building = building_unit_assembler }
	}
	immediate = {
		# Cycle: Removing unit_assembler deposits/buildings
		random_owned_planet = {
			limit = {
				is_colony = yes
				is_colonizable = no
				OR = {
					has_deposit = yes
					AND = { has_building = yes has_building = building_unit_assembler }
				}
				OR = {
					has_deposit = d_robot_command_1
					has_deposit = d_robot_command_2
					has_deposit = d_robot_command_3
					has_deposit = d_robot_command_4
					has_deposit = d_robot_command_5
				}
			}
			planet_event = { id = UniqueAscensionPerksEvents.3069 days = 10 random = 10 }
		}
		random_planet_within_border = {
			limit = {
				colonizable_planet = yes
				OR = {
					has_deposit = yes
					AND = { has_building = yes has_building = building_unit_assembler }
				}
				OR = {
					has_deposit = d_robot_command_1
					has_deposit = d_robot_command_2
					has_deposit = d_robot_command_3
					has_deposit = d_robot_command_4
					has_deposit = d_robot_command_5
				}
			}
			planet_event = { id = UniqueAscensionPerksEvents.3069 days = 10 random = 10 }
		}
		if = { limit = { has_country_flag = ap_robot_command_cycle any_owned_planet = { is_colony = yes has_building = building_breeding_facility } }
			remove_country_flag = ap_robot_command_cycle # all 2 months
			every_owned_planet = {
				limit = { is_colony = yes has_building = building_unit_assembler }
				set_variable = { which = building_unit_assembler value = value:num_active_buildings|BUILDING|building_unit_assembler| }
				if = { limit = { check_variable = { which = building_unit_assembler value > 0 } }
					random = { chance = 80 planet_event = { id = UniqueAscensionPerksEvents.3064 days = 5 random = 5 } }
					if = { limit = { check_variable = { which = building_unit_assembler value > 1 } }
						random = { chance = 75 planet_event = { id = UniqueAscensionPerksEvents.3065 days = 5 random = 5 } }
						if = { limit = { check_variable = { which = building_unit_assembler value > 2 } }
							random = { chance = 70 planet_event = { id = UniqueAscensionPerksEvents.3066 days = 5 random = 5 } }
							if = { limit = { check_variable = { which = building_unit_assembler value > 3 } }
								random = { chance = 65 planet_event = { id = UniqueAscensionPerksEvents.3067 days = 5 random = 5 } }
								if = { limit = { check_variable = { which = building_unit_assembler value > 4 } }
									random = { chance = 60 planet_event = { id = UniqueAscensionPerksEvents.3068 days = 5 random = 5 } }
								}
							}
						}
					}
				}
			}
		} else = {
			set_country_flag = ap_robot_command_cycle
		}
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.3064
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { check_variable = { which = d_robot_command_1 value < 14 } }
			change_variable = { which = d_robot_command_1 value = 1 }
			add_deposit = d_robot_command_1
		} else = {
			every_deposit = { limit = { is_deposit_type = d_robot_command_1 } remove_deposit = yes }
			set_variable = { which = d_robot_command_1 value = 0 }
			random_owned_pop = {
				limit = { is_robotic_species = yes has_population_control = { value = no country = prev.owner } is_being_purged = no is_being_assimilated = no }
				# weights = {
				# 	base = 10
				# 	modifier = { add = 10 is_same_species = root.owner_species }
				# 	modifier = { add = -5 is_enslaved = yes }
				# }
				prev = {
					create_pop = { species = prev }
				}
			}
		}
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.3065
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { check_variable = { which = d_robot_command_2 value < 14 } }
			change_variable = { which = d_robot_command_2 value = 1 }
			add_deposit = d_robot_command_2
		} else = {
			every_deposit = { limit = { is_deposit_type = d_robot_command_2 } remove_deposit = yes }
			set_variable = { which = d_robot_command_2 value = 0 }
			random_owned_pop = {
				limit = { is_robotic_species = yes has_population_control = { value = no country = prev.owner } is_being_purged = no is_being_assimilated = no }
				# weights = {
				# 	base = 10
				# 	modifier = { add = 10 is_same_species = root.owner_species }
				# 	modifier = { add = -5 is_enslaved = yes }
				# }
				prev = {
					create_pop = { species = prev }
				}
			}
		}
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.3066
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { check_variable = { which = d_robot_command_3 value < 14 } }
			change_variable = { which = d_robot_command_3 value = 1 }
			add_deposit = d_robot_command_3
		} else = {
			every_deposit = { limit = { is_deposit_type = d_robot_command_3 } remove_deposit = yes }
			set_variable = { which = d_robot_command_3 value = 0 }
			random_owned_pop = {
				limit = { is_robotic_species = yes has_population_control = { value = no country = prev.owner } is_being_purged = no is_being_assimilated = no }
				# weights = {
				# 	base = 10
				# 	modifier = { add = 10 is_same_species = root.owner_species }
				# 	modifier = { add = -5 is_enslaved = yes }
				# }
				prev = {
					create_pop = { species = prev }
				}
			}
		}
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.3067
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { check_variable = { which = d_robot_command_4 value < 14 } }
			change_variable = { which = d_robot_command_4 value = 1 }
			add_deposit = d_robot_command_4
		} else = {
			every_deposit = { limit = { is_deposit_type = d_robot_command_4 } remove_deposit = yes }
			set_variable = { which = d_robot_command_4 value = 0 }
			random_owned_pop = {
				limit = { is_robotic_species = yes has_population_control = { value = no country = prev.owner } is_being_purged = no is_being_assimilated = no }
				# weights = {
				# 	base = 10
				# 	modifier = { add = 10 is_same_species = root.owner_species }
				# 	modifier = { add = -5 is_enslaved = yes }
				# }
				prev = {
					create_pop = { species = prev }
				}
			}
		}
	}
}

planet_event = {
	id = UniqueAscensionPerksEvents.3068
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { check_variable = { which = d_robot_command_5 value < 14 } }
			change_variable = { which = d_robot_command_5 value = 1 }
			add_deposit = d_robot_command_5
		} else = {
			every_deposit = { limit = { is_deposit_type = d_robot_command_5 } remove_deposit = yes }
			set_variable = { which = d_robot_command_5 value = 0 }
			random_owned_pop = {
				limit = { is_robotic_species = yes has_population_control = { value = no country = prev.owner } is_being_purged = no is_being_assimilated = no }
				# weights = {
				# 	base = 10
				# 	modifier = { add = 10 is_same_species = root.owner_species }
				# 	modifier = { add = -5 is_enslaved = yes }
				# }
				prev = {
					create_pop = { species = prev }
				}
			}
		}
	}
}

# Cycle: Removing unit_assembler deposits/buildings
# From UniqueAscensionPerksEvents.3063 (MTTH)
planet_event = {
	id = UniqueAscensionPerksEvents.3069
	hide_window = yes
	is_triggered_only = yes
	# mean_time_to_happen = { months = 6 }
	# pre_triggers = { has_owner = yes }
	trigger = {
		OR = {
			has_building = yes
			has_deposit = yes
		}
		OR = {
			has_deposit = d_robot_command_1
			has_deposit = d_robot_command_2
			has_deposit = d_robot_command_3
			has_deposit = d_robot_command_4
			has_deposit = d_robot_command_5
			has_building = building_unit_assembler
		}
	}
	immediate = {
		if = {
			limit = {
				has_building = building_unit_assembler
				NAND = {
					exists = owner
					owner = { has_ascension_perk = ap_robot_command }
				}
			}
			while = { limit = { has_building = building_unit_assembler } remove_building = building_unit_assembler }
		}
		set_variable = { which = building_unit_assembler value = value:num_active_buildings|BUILDING|building_unit_assembler| }
		if = { limit = { check_variable = { which = building_unit_assembler value < 5 } has_deposit = yes }
			if = {
				limit = { has_deposit = d_robot_command_5 }
				every_deposit = { limit = { is_deposit_type = d_robot_command_5 } remove_deposit = yes }
				clear_variable = d_robot_command_5
			}
			if = { limit = { check_variable = { which = building_unit_assembler value < 4 } has_deposit = yes }
				if = {
					limit = { has_deposit = d_robot_command_4 }
					every_deposit = { limit = { is_deposit_type = d_robot_command_4 } remove_deposit = yes }
					clear_variable = d_robot_command_4
				}
				if = { limit = { check_variable = { which = building_unit_assembler value < 3 } has_deposit = yes }
					if = {
						limit = { has_deposit = d_robot_command_3 }
						every_deposit = { limit = { is_deposit_type = d_robot_command_3 } remove_deposit = yes }
						clear_variable = d_robot_command_3
					}
					if = { limit = { check_variable = { which = building_unit_assembler value < 2 } has_deposit = yes }
						if = {
							limit = { has_deposit = d_robot_command_2 }
							every_deposit = { limit = { is_deposit_type = d_robot_command_2 } remove_deposit = yes }
							clear_variable = d_robot_command_2
						}
						if = {
							limit = { check_variable = { which = building_unit_assembler value < 1 } has_deposit = d_robot_command_1 }
							every_deposit = { limit = { is_deposit_type = d_robot_command_1 } remove_deposit = yes }
							clear_variable = d_robot_command_1
						}
					}
				}
			}
		}
		clear_variable = building_unit_assembler
	}
}
